


Gadgets
=======


0x000000000043d53f: adc al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043d5a9: adc al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000425c45: adc al, 0x16; sub eax, edx; ret; 
0x0000000000444910: adc al, 0x48; lea eax, [rdi + 0x14]; ret; 
0x000000000043d0fe: adc al, 0x91; sub eax, edx; ret; 
0x0000000000425db3: adc al, 0xa; sub eax, edx; ret; 
0x000000000042a22a: adc al, 0xe; sub eax, edx; ret; 
0x00000000004128bb: adc al, 0xf6; ret 0x7420; 
0x000000000048d15d: adc al, 0xf7; ret; 
0x000000000043d6e7: adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043d751: adc al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x0000000000419145: adc byte ptr [r11 + 0x5d], r11b; ret; 
0x000000000048374e: adc byte ptr [r15], cl; sahf; ret 0x3948; 
0x000000000045bf89: adc byte ptr [r15], cl; sahf; ret 0x894c; 
0x0000000000483f63: adc byte ptr [r15], cl; xchg eax, ebx; ret 0x3949; 
0x000000000045b1a5: adc byte ptr [r15], r9b; xchg eax, ebx; ret 0x3948; 
0x000000000045b986: adc byte ptr [r15], r9b; xchg eax, ebx; ret 0x3949; 
0x0000000000411542: adc byte ptr [r8 + 1], r9b; ret; 
0x000000000041872f: adc byte ptr [r8 - 0x77], r9b; ret 0xf8b; 
0x000000000047c27f: adc byte ptr [r8 - 0x7d], cl; ret; 
0x000000000041156d: adc byte ptr [r9 + 0x2b], r9b; or byte ptr [r8 + 0x29], r9b; ret; 
0x000000000041e9b3: adc byte ptr [rax + 0x39], cl; ret 0x1f77; 
0x000000000041acec: adc byte ptr [rax + 0x39], cl; ret 0x870f; 
0x000000000041b068: adc byte ptr [rax + 0x39], cl; ret 0xb277; 
0x00000000004239a6: adc byte ptr [rax + 0x39], cl; ret 0xf475; 
0x0000000000483f5d: adc byte ptr [rax + 0x39], cl; ret; 
0x0000000000410947: adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x0000000000411543: adc byte ptr [rax + 1], cl; ret; 
0x0000000000400eae: adc byte ptr [rax - 0x39], cl; ret 0; 
0x0000000000488c5f: adc byte ptr [rax - 0x75], cl; cmp cl, byte ptr [rax - 0x7d]; ret 0xf08; 
0x000000000042215f: adc byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x000000000041dd21: adc byte ptr [rax - 0x77], cl; ret 0x8d4c; 
0x0000000000418730: adc byte ptr [rax - 0x77], cl; ret 0xf8b; 
0x0000000000411393: adc byte ptr [rax - 0x7b], cl; push qword ptr [rsp + rcx - 0x18]; ret 0xec; 
0x0000000000440ff3: adc byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x85; ret; 
0x00000000004197e3: adc byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000455588: adc byte ptr [rax - 0x7d], cl; ret 0x4902; 
0x0000000000401080: adc byte ptr [rax - 0x7d], cl; ret; 
0x000000000043ef9c: adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043d8f1: adc byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000048e088: adc byte ptr [rbp + 0x13], dh; xor eax, eax; ret; 
0x000000000048aee8: adc byte ptr [rbp + 0x1d], dh; xor eax, eax; ret; 
0x0000000000419146: adc byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000418312: adc byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x000000000041156e: adc byte ptr [rcx + 0x2b], cl; or byte ptr [r8 + 0x29], r9b; ret; 
0x000000000044cf7b: adc byte ptr [rcx + 0xf480004], 0x44; ret; 
0x000000000044af12: adc byte ptr [rcx - 0x75], cl; add al, byte ptr [rbx + 0x94801e0]; ret 0x8949; 
0x000000000048aaef: adc byte ptr [rcx - 0x77], cl; ret; 
0x0000000000419097: adc byte ptr [rcx - 0x7d], al; ret; 
0x000000000042a2bd: adc byte ptr [rcx - 0x7d], cl; ret 0x7f10; 
0x000000000045bf21: adc byte ptr [rcx - 0x7d], cl; ret; 
0x000000000048374f: adc byte ptr [rdi], cl; sahf; ret 0x3948; 
0x000000000045bf8a: adc byte ptr [rdi], cl; sahf; ret 0x894c; 
0x000000000042aff9: adc byte ptr [rdi], cl; xchg byte ptr [rax + rax - 0x7cb80000], al; ret 0xeb10; 
0x000000000042ab51: adc byte ptr [rdi], cl; xchg byte ptr [rax - 0x7cb80000], ch; ret 0xeb10; 
0x000000000042a2e1: adc byte ptr [rdi], cl; xchg byte ptr [rbp + rcx - 0x7cb80000], bl; ret 0xeb10; 
0x000000000042a4c1: adc byte ptr [rdi], cl; xchg byte ptr [rbx + rcx - 0x7cb80000], bh; ret 0xeb10; 
0x000000000045b1a6: adc byte ptr [rdi], cl; xchg eax, ebx; ret 0x3948; 
0x000000000045b987: adc byte ptr [rdi], cl; xchg eax, ebx; ret 0x3949; 
0x0000000000449e99: adc byte ptr [rdi], cl; xchg eax, esp; ret 0x2044; 
0x0000000000483e11: adc byte ptr [rdi], r9b; sahf; ret 0x3948; 
0x000000000048314d: adc byte ptr [rdi], r9b; xchg eax, ebx; ret 0x3948; 
0x000000000042c265: adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042cc6a: adc byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret; 
0x000000000045d46f: adc cl, byte ptr [rax - 0x75]; adc cl, byte ptr [rbx + rcx*4 + 0x6c]; ret 0x4c40; 
0x000000000044c56a: adc cl, byte ptr [rax - 0x7d]; ret 0x4801; 
0x0000000000440ce5: adc cl, byte ptr [rax - 1]; ret 0x2288; 
0x000000000045d472: adc cl, byte ptr [rbx + rcx*4 + 0x6c]; ret 0x4c40; 
0x0000000000485e3a: adc cl, byte ptr [rcx + 0x48b48d8]; ret 0x8b48; 
0x000000000045c245: adc cl, byte ptr [rcx - 0x7d]; ret; 
0x000000000041c39e: adc dh, dh; ret 0xf0f; 
0x000000000046ff8b: adc dword ptr [rax + 0x39], ecx; ret 0x3873; 
0x000000000045ab4d: adc dword ptr [rax - 0x39], ecx; ret 0xffe0; 
0x00000000004715a4: adc dword ptr [rax - 0x7d], ecx; ret 0x4110; 
0x00000000004051af: adc dword ptr [rax - 0x7d], ecx; ret; 
0x000000000043ef9b: adc dword ptr [rax], 0x83480000; ret 0x4910; 
0x000000000043d887: adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043ee9f: adc dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x00000000004470e8: adc dword ptr [rbx], eax; ret; 
0x0000000000447061: adc dword ptr [rbx], esp; ret; 
0x00000000004387e7: adc dword ptr [rcx + 7], edi; ret; 
0x000000000044705c: adc dword ptr [rcx - 0x30], eax; movups xmmword ptr [r11], xmm4; ret; 
0x00000000004897a6: adc dword ptr [rcx - 0x7d], ecx; ret; 
0x0000000000438482: adc dword ptr [rcx - 1], ebx; ret; 
0x0000000000438446: adc dword ptr [rcx - 1], edi; ret; 
0x000000000043847b: adc dword ptr [rcx - 2], edx; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000043843f: adc dword ptr [rcx - 2], esi; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x00000000004470e3: adc dword ptr [rdi + 0x30], edi; movups xmmword ptr [r11], xmm8; ret; 
0x0000000000446e43: adc dword ptr [rdi + rdx - 0x10], ecx; ret; 
0x0000000000446fc5: adc dword ptr [rdi + rdx - 0x10], edx; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x0000000000446fca: adc dword ptr [rdi + rdx - 0x20], ebx; ret; 
0x0000000000446fa7: adc dword ptr [rdi + rdx - 0x40], edi; ret; 
0x0000000000438942: adc dword ptr [rdi - 7], esi; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x0000000000438949: adc dword ptr [rdi - 8], edi; ret; 
0x0000000000446e40: adc dword ptr [rdi], eax; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000446d6f: adc dword ptr [rsi + 3], edx; ret; 
0x0000000000446e0c: adc dword ptr [rsi + 7], edx; ret; 
0x0000000000446c0e: adc dword ptr [rsi - 1], edx; ret; 
0x000000000043d886: adc dword ptr es:[rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044d387: adc eax, 0x26b72c; pop rbx; ret; 
0x000000000047bb52: adc eax, 0x4000003; ret; 
0x000000000047baa2: adc eax, 0x4000003; xor eax, eax; ret; 
0x000000000043d411: adc eax, 0x83480000; ret 0xe910; 
0x0000000000469605: adc eax, 0x83fffffd; ret; 
0x0000000000478c51: adc eax, 0x89000003; ret 0xe8c0; 
0x0000000000447c94: adc eax, 0xf880272; ret; 
0x0000000000473c65: adc eax, 0xfffd41d6; cmove rax, rdx; ret; 
0x000000000043ecfe: adc eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x00000000004842c9: adc eax, eax; ret; 
0x0000000000423459: adc ebp, dword ptr [rax + 0x1f0ffffe]; add byte ptr [rax + 0x16], bh; ret; 
0x00000000004a7885: adc ebp, dword ptr [rbx]; fstp dword ptr [rbx + 0x4a315a58]; ret 0x1b49; 
0x00000000004759fc: adc ebx, esi; ret; 
0x000000000041712a: adc ecx, dword ptr [rax - 0x7b]; push qword ptr [rbp + rax - 0xa]; ret 0x7401; 
0x000000000040ead1: adc ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000457874: adc ecx, dword ptr [rcx + 0x29d231fb]; ret; 
0x000000000047f01e: adc edi, dword ptr [rcx]; ret 0x840f; 
0x000000000047f0bb: adc edi, dword ptr [rcx]; ret 0xc74; 
0x00000000004128b9: adc esi, dword ptr [rsp + rdx - 0xa]; ret 0x7420; 
0x00000000004387e6: adc qword ptr [rcx + 7], rdi; ret; 
0x0000000000438481: adc qword ptr [rcx - 1], rbx; ret; 
0x0000000000438445: adc qword ptr [rcx - 1], rdi; ret; 
0x000000000043847a: adc qword ptr [rcx - 2], rdx; vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x000000000043843e: adc qword ptr [rcx - 2], rsi; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000438941: adc qword ptr [rdi - 7], rsi; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x0000000000438948: adc qword ptr [rdi - 8], rdi; ret; 
0x0000000000446d6e: adc qword ptr [rsi + 3], rdx; ret; 
0x0000000000446e0b: adc qword ptr [rsi + 7], rdx; ret; 
0x0000000000446c0d: adc qword ptr [rsi - 1], rdx; ret; 
0x00000000004531b3: add al, 0; add bh, dh; ret 0; 
0x00000000004531a7: add al, 0; add bh, dh; ret 0xf800; 
0x0000000000456eaf: add al, 0; add byte ptr [rax + 0x29], cl; ret 0x349; 
0x00000000004110e0: add al, 0; add byte ptr [rax + 1], cl; ret; 
0x000000000042ac17: add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000046f2a6: add al, 0; add byte ptr [rax - 0x7d], cl; ret 0x8b08; 
0x000000000043fbbf: add al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042ac45: add al, 0; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000474883: add al, 0; add byte ptr [rax], al; ret; 
0x000000000040a071: add al, 0; add byte ptr [rbx - 0x7bf0fc06], al; ret; 
0x000000000040ac74: add al, 0; add byte ptr [rbx - 0x7bf0fc08], al; ret; 
0x0000000000409f30: add al, 0; add byte ptr [rbx - 0x7bf0fe08], al; ret 4; 
0x00000000004243b5: add al, 0; add byte ptr [rsi - 9], dh; ret 0; 
0x0000000000425bda: add al, 0x17; sub eax, ecx; ret; 
0x000000000048a96b: add al, 0x24; add rsp, 0x38; ret; 
0x00000000004733ce: add al, 0x31; ret; 
0x00000000004732ca: add al, 0x37; ret; 
0x00000000004179af: add al, 0x3a; ret; 
0x000000000044477b: add al, 0x48; lea eax, [rdi + 5]; ret; 
0x0000000000443c89: add al, 0x48; lea eax, [rdx + 4]; ret; 
0x0000000000443c9b: add al, 0x48; lea eax, [rdx + 5]; ret; 
0x000000000048d170: add al, 0x48; mov dword ptr [rax], edx; ret; 
0x000000000043538a: add al, 0x48; mov dword ptr [rdi], ecx; ret; 
0x00000000004424c9: add al, 0x48; mov eax, edi; ret; 
0x00000000004736a4: add al, 0x48; xor eax, eax; ret; 
0x0000000000457872: add al, 0x72; adc ecx, dword ptr [rcx + 0x29d231fb]; ret; 
0x000000000043e9d3: add al, 0x81; sub eax, edx; ret; 
0x000000000043ad07: add al, 0x82; sub eax, ecx; ret; 
0x0000000000466bc9: add al, 0x84; ror byte ptr [rdi], 0x84; ret 0x17; 
0x00000000004356f3: add al, 0xf3; movq qword ptr [rdi], mm1; ret; 
0x000000000044985b: add al, 0xf3; ret; 
0x0000000000446b7b: add al, 0xf; sub rax, rsi; ret; 
0x0000000000440308: add al, 7; ret; 
0x000000000049f0a7: add al, al; sldt word ptr [rax]; ret; 
0x0000000000440ce1: add al, byte ptr [rax + rax*8 - 0xb7ed8c]; ret 0x2288; 
0x000000000047af00: add al, byte ptr [rax]; add byte ptr [rax + 0x39], cl; ret 0xed75; 
0x00000000004551ad: add al, byte ptr [rax]; add byte ptr [rax + 0x39], cl; ret; 
0x000000000045f753: add al, byte ptr [rax]; add byte ptr [rax + 0x63], cl; ret; 
0x000000000048805e: add al, byte ptr [rax]; add byte ptr [rax + 1], cl; ret 0x3a83; 
0x0000000000468a94: add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret 0xac20; 
0x0000000000423363: add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret 0xffdf; 
0x0000000000401065: add al, byte ptr [rax]; add byte ptr [rax - 0x39], cl; ret; 
0x00000000004783b5: add al, byte ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000045494b: add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000042adf7: add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043e791: add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042ae25: add al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000045ab12: add al, byte ptr [rax]; add byte ptr [rax - 0x7f], cl; ret 0x200; 
0x0000000000474614: add al, byte ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000446124: add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x0000000000410b46: add al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0fd08], al; ret; 
0x0000000000485964: add al, byte ptr [rax]; add byte ptr [rcx + 0xc8b48d8], cl; ret 0xb60f; 
0x000000000041ad36: add al, byte ptr [rax]; add dh, dh; ret; 
0x0000000000424363: add al, byte ptr [rax]; cmove rax, rdx; ret; 
0x00000000004237d3: add al, byte ptr [rax]; cmovne rax, rdx; ret; 
0x000000000044af15: add al, byte ptr [rbx + 0x94801e0]; ret 0x8949; 
0x000000000044bd6e: add al, byte ptr [rcx + 0x39]; ret; 
0x00000000004abf7d: add al, byte ptr [rdx]; ret 0xb00e; 
0x0000000000424731: add al, byte ptr cs:[rax]; cmovne rax, rdx; ret; 
0x00000000004557d1: add al, ch; imul eax, ebx, 0x8941fffa; ret 0x5be9; 
0x000000000045578e: add al, ch; lodsb al, byte ptr [rsi]; ret; 
0x0000000000454e7c: add al, ch; mov esi, 0x89fffacc; ret 0xe283; 
0x000000000046faab: add al, ch; pop rdi; ret 0xfffd; 
0x0000000000421148: add al, ch; ret 0x2ab; 
0x000000000041e348: add al, ch; ret 0x2d9; 
0x000000000040e948: add al, ch; ret 0x3d3; 
0x000000000047af38: add al, ch; ret 0xb850; 
0x0000000000485cd8: add al, ch; ret 0xffc7; 
0x00000000004af2e7: add al, ch; ret 0xfff7; 
0x000000000041f677: add al, ch; ret; 
0x000000000045576f: add al, ch; retf; ret; 
0x00000000004b3e5e: add bh, ah; ret; 
0x000000000040eacf: add bh, bh; adc ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000048582f: add bh, bh; ror dword ptr [rax - 0x77], cl; ret; 
0x0000000000484499: add bh, byte ptr [rax + 1]; ret; 
0x00000000004845f6: add bh, byte ptr [rax + 2]; ret; 
0x000000000044957b: add bh, byte ptr [rax - 1]; ret; 
0x0000000000400e4a: add bh, dh; ret 0; 
0x00000000004531a9: add bh, dh; ret 0xf800; 
0x000000000040f10f: add bh, dh; ret 0xffef; 
0x0000000000489f8b: add bl, ch; add eax, 0x1489066; ret 0xb70f; 
0x000000000040f3a8: add bl, ch; ret 0x1f0f; 
0x0000000000485af9: add bl, ch; ret; 
0x0000000000400a6f: add bl, dh; ret; 
0x000000000041b02e: add bl, sil; ret; 
0x000000000046c77a: add byte ptr [r11 - 0x78f0d008], r8b; mov eax, 0x8900001d; ret 0x349; 
0x000000000046be2c: add byte ptr [r11 - 0x78f0d008], r8b; mov ebx, 0x89000025; ret 0x349; 
0x000000000046b8de: add byte ptr [r11 - 0x78f0d008], r8b; mov esi, 0x8900002b; ret 0x349; 
0x0000000000481580: add byte ptr [r8 + 9], r9b; ret 0x840f; 
0x0000000000455355: add byte ptr [r8 - 0x77], r9b; fimul dword ptr [rax + 0x29]; ret 0x8348; 
0x000000000040e1ca: add byte ptr [r8 - 0x7d], r9b; ret; 
0x000000000042345f: add byte ptr [rax + 0x16], bh; ret; 
0x0000000000452931: add byte ptr [rax + 0x29], cl; ret 0x349; 
0x0000000000453497: add byte ptr [rax + 0x29], cl; ret 0x8348; 
0x0000000000465dd8: add byte ptr [rax + 0x29], cl; ret 0x8349; 
0x0000000000476cb8: add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000047a88a: add byte ptr [rax + 0x29], cl; ret 0x8d48; 
0x0000000000412160: add byte ptr [rax + 0x29], cl; ret; 
0x00000000004235e0: add byte ptr [rax + 0x31], dl; shr al, 0x57; ret; 
0x000000000048af63: add byte ptr [rax + 0x39], cl; ret 0x830f; 
0x000000000041a03f: add byte ptr [rax + 0x39], cl; ret 0x840f; 
0x000000000041313f: add byte ptr [rax + 0x39], cl; ret 0x850f; 
0x000000000048aff8: add byte ptr [rax + 0x39], cl; ret 0x9272; 
0x000000000047af02: add byte ptr [rax + 0x39], cl; ret 0xed75; 
0x000000000041cf00: add byte ptr [rax + 0x39], cl; ret 0xf275; 
0x000000000047825e: add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000040eaaf: add byte ptr [rax + 0x39], cl; ret; 
0x000000000048ca33: add byte ptr [rax + 0x63], cl; ret 0xbc80; 
0x00000000004596b7: add byte ptr [rax + 0x63], cl; ret; 
0x000000000046f583: add byte ptr [rax + 0x63], cl; ror dword ptr [rax - 0x75], 4; ret 0x8548; 
0x000000000045dbd1: add byte ptr [rax + 0x63], cl; ror dword ptr [rax - 0x7d], cl; ret 0x4820; 
0x000000000047551f: add byte ptr [rax + 0x66], bh; syscall; ret; 
0x000000000047553f: add byte ptr [rax + 0x68], bh; syscall; ret; 
0x000000000047552f: add byte ptr [rax + 0x6b], bh; syscall; ret; 
0x000000000047554f: add byte ptr [rax + 0x6c], bh; syscall; ret; 
0x00000000004897a3: add byte ptr [rax + 0x74], ah; adc dword ptr [rcx - 0x7d], ecx; ret; 
0x0000000000440cdf: add byte ptr [rax + 0x74c08402], cl; adc cl, byte ptr [rax - 1]; ret 0x2288; 
0x000000000044471f: add byte ptr [rax + 0x78d4837], cl; ret; 
0x0000000000473235: add byte ptr [rax + 0xf], cl; mov ebp, 0xf80148c0; ret; 
0x000000000044fbcf: add byte ptr [rax + 0xf], cl; mov esi, 0x83480147; ret; 
0x000000000048445c: add byte ptr [rax + 1], bh; ret; 
0x0000000000483668: add byte ptr [rax + 1], cl; ret 0x149; 
0x0000000000488060: add byte ptr [rax + 1], cl; ret 0x3a83; 
0x00000000004110e2: add byte ptr [rax + 1], cl; ret; 
0x0000000000484665: add byte ptr [rax + 2], bh; ret; 
0x0000000000481581: add byte ptr [rax + 9], cl; ret 0x840f; 
0x0000000000476140: add byte ptr [rax + 9], cl; ret 0x850f; 
0x000000000049e04b: add byte ptr [rax + rax + 0xbf0000], bh; add byte ptr [rax], al; ret 0; 
0x0000000000450423: add byte ptr [rax + rax*8 - 0x76b3178b], al; ret 0x294c; 
0x00000000004243b4: add byte ptr [rax + rax], al; add byte ptr [rsi - 9], dh; ret 0; 
0x0000000000473c47: add byte ptr [rax + rax], cl; add byte ptr [rbx + rax - 0xd], dh; ret; 
0x000000000045ab2d: add byte ptr [rax + rcx - 0xd], dh; ret; 
0x000000000045ac1f: add byte ptr [rax + rcx*2 - 0x77], ah; adc dword ptr [rax - 0x39], ecx; ret 0xffe0; 
0x000000000049f1f7: add byte ptr [rax + rdx + 0x10bf0000], bh; add byte ptr [rax], al; ret 0x10; 
0x000000000047b954: add byte ptr [rax - 0x168b7f80], 0x89; ret 0xeac1; 
0x000000000041d11f: add byte ptr [rax - 0x17], dl; ret; 
0x000000000040fc93: add byte ptr [rax - 0x39], cl; ret 0xac20; 
0x000000000046517b: add byte ptr [rax - 0x39], cl; ret 0xb2c8; 
0x000000000045d45f: add byte ptr [rax - 0x39], cl; ret 0xffa0; 
0x000000000040dc47: add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x0000000000423365: add byte ptr [rax - 0x39], cl; ret 0xffdf; 
0x0000000000468105: add byte ptr [rax - 0x39], cl; ret 0xffe0; 
0x0000000000401067: add byte ptr [rax - 0x39], cl; ret; 
0x0000000000458879: add byte ptr [rax - 0x3f], cl; ret 0x4811; 
0x0000000000458850: add byte ptr [rax - 0x3f], cl; ret 0x6411; 
0x00000000004581b0: add byte ptr [rax - 0x3f], cl; ret 0x8511; 
0x000000000045514a: add byte ptr [rax - 0x73], cl; add cl, byte ptr [rax + 0x39]; ret; 
0x00000000004572cd: add byte ptr [rax - 0x73], cl; add dword ptr [rax + 0x39], r9d; ret; 
0x000000000044d34f: add byte ptr [rax - 0x73], cl; add eax, 0x26cfa9; ret; 
0x00000000004572eb: add byte ptr [rax - 0x73], cl; add r9b, byte ptr [rax + 0x39]; ret; 
0x0000000000457309: add byte ptr [rax - 0x73], cl; add r9d, dword ptr [rax + 0x39]; ret; 
0x0000000000477f06: add byte ptr [rax - 0x73], cl; dec dword ptr [rax - 0x7d]; ret; 
0x000000000047c27c: add byte ptr [rax - 0x75], cl; adc byte ptr [r8 - 0x7d], cl; ret; 
0x00000000004197df: add byte ptr [rax - 0x75], cl; adc byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000485e37: add byte ptr [rax - 0x75], cl; adc cl, byte ptr [rcx + 0x48b48d8]; ret 0x8b48; 
0x00000000004579cf: add byte ptr [rax - 0x75], cl; add eax, 0x2644a1; ret; 
0x000000000044f46f: add byte ptr [rax - 0x75], cl; add eax, 0x26d4b1; ret; 
0x000000000041860f: add byte ptr [rax - 0x75], cl; add eax, 0x2a0b09; ret; 
0x000000000044e8af: add byte ptr [rax - 0x75], cl; cmp ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000471e9f: add byte ptr [rax - 0x75], cl; mov rax, qword ptr [rax + 0x4c]; ret; 
0x000000000041227f: add byte ptr [rax - 0x76b80000], al; ret; 
0x00000000004848f6: add byte ptr [rax - 0x77], cl; add eax, 0x23776a; ret; 
0x000000000041917d: add byte ptr [rax - 0x77], cl; add eax, 0x2a0663; ret; 
0x000000000041915d: add byte ptr [rax - 0x77], cl; add eax, 0x2a067b; ret; 
0x0000000000412902: add byte ptr [rax - 0x77], cl; clc; ret; 
0x0000000000455356: add byte ptr [rax - 0x77], cl; fimul dword ptr [rax + 0x29]; ret 0x8348; 
0x0000000000471ff4: add byte ptr [rax - 0x77], cl; fucomip st(0); ret; 
0x000000000048b40e: add byte ptr [rax - 0x77], cl; fucomip st(1); ret; 
0x0000000000400b83: add byte ptr [rax - 0x77], cl; hlt; ret; 
0x000000000044bfbf: add byte ptr [rax - 0x77], cl; jo 0x4bfe4; ret; 
0x00000000004493db: add byte ptr [rax - 0x77], cl; ret 0x16e9; 
0x000000000041dbb7: add byte ptr [rax - 0x77], cl; ret 0x2948; 
0x00000000004111b6: add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x000000000041308a: add byte ptr [rax - 0x77], cl; ret 0x294d; 
0x000000000048e7dc: add byte ptr [rax - 0x77], cl; ret 0x3948; 
0x0000000000449487: add byte ptr [rax - 0x77], cl; ret 0x6ae9; 
0x0000000000402e0e: add byte ptr [rax - 0x77], cl; ret 0x7ce9; 
0x000000000045fc88: add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000041ae6c: add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x0000000000402b8f: add byte ptr [rax - 0x77], cl; ret 0x8548; 
0x0000000000410148: add byte ptr [rax - 0x77], cl; ret 0x8948; 
0x00000000004491b3: add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000048df2f: add byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x00000000004563b8: add byte ptr [rax - 0x77], cl; ret 0xb2eb; 
0x00000000004031a3: add byte ptr [rax - 0x77], cl; ret 0xc031; 
0x000000000046a2c7: add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000040f3dd: add byte ptr [rax - 0x77], cl; ret 0xf748; 
0x00000000004147e8: add byte ptr [rax - 0x77], cl; ret 0xffb8; 
0x00000000004493f2: add byte ptr [rax - 0x77], cl; ret 0xffe9; 
0x000000000040389f: add byte ptr [rax - 0x77], cl; ret; 
0x000000000042a28c: add byte ptr [rax - 0x77], cl; retf 0x8349; ret 0x7f10; 
0x000000000043d4d4: add byte ptr [rax - 0x77], cl; retf 0x8349; ret 0xf10; 
0x000000000048cb4f: add byte ptr [rax - 0x77], cl; shr cl, 1; ret 0xfffe; 
0x000000000048aa46: add byte ptr [rax - 0x7ab70000], al; ret 0x840f; 
0x00000000004718fb: add byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax - 0xa]; ret 0x7408; 
0x000000000046d26d: add byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x000000000047fbdf: add byte ptr [rax - 0x7d], cl; call 0x7c9343e8; ret; 
0x00000000004465ef: add byte ptr [rax - 0x7d], cl; ret 0x3a01; 
0x000000000044c367: add byte ptr [rax - 0x7d], cl; ret 0x4101; 
0x000000000046f0c7: add byte ptr [rax - 0x7d], cl; ret 0x4404; 
0x000000000040f22f: add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000456014: add byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x00000000004858af: add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x000000000047db7a: add byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x000000000045dbb4: add byte ptr [rax - 0x7d], cl; ret 0x481e; 
0x000000000042a2b9: add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041e647: add byte ptr [rax - 0x7d], cl; ret 0x4c07; 
0x000000000048df0f: add byte ptr [rax - 0x7d], cl; ret 0x8001; 
0x000000000046f2a8: add byte ptr [rax - 0x7d], cl; ret 0x8b08; 
0x0000000000424110: add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x000000000043d273: add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042a2e7: add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000047de37: add byte ptr [rax - 0x7d], cl; ret 0xf01; 
0x0000000000405faf: add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000425cef: add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + 0x48], 0x83; ret 0x4840; 
0x00000000004737df: add byte ptr [rax - 0x7d], cl; rol byte ptr [rax + 0x49], 0x39; ret 0x2774; 
0x0000000000489512: add byte ptr [rax - 0x7d], cl; ror byte ptr [rax], 0x83; ret 0x3901; 
0x000000000045ab14: add byte ptr [rax - 0x7f], cl; ret 0x200; 
0x0000000000432f1b: add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x0000000000411c1a: add byte ptr [rax - 1], bh; ret; 
0x0000000000421145: add byte ptr [rax], 0; add al, ch; ret 0x2ab; 
0x000000000041e345: add byte ptr [rax], 0; add al, ch; ret 0x2d9; 
0x000000000040e945: add byte ptr [rax], 0; add al, ch; ret 0x3d3; 
0x000000000041f674: add byte ptr [rax], 0; add al, ch; ret; 
0x000000000041598a: add byte ptr [rax], 0; add bl, dh; ret; 
0x00000000004147e5: add byte ptr [rax], 0; add byte ptr [rax - 0x77], cl; ret 0xffb8; 
0x0000000000421146: add byte ptr [rax], al; add al, ch; ret 0x2ab; 
0x000000000041e346: add byte ptr [rax], al; add al, ch; ret 0x2d9; 
0x000000000040e946: add byte ptr [rax], al; add al, ch; ret 0x3d3; 
0x0000000000485cd6: add byte ptr [rax], al; add al, ch; ret 0xffc7; 
0x000000000041f675: add byte ptr [rax], al; add al, ch; ret; 
0x000000000040f3a6: add byte ptr [rax], al; add bl, ch; ret 0x1f0f; 
0x0000000000485af7: add byte ptr [rax], al; add bl, ch; ret; 
0x000000000041598b: add byte ptr [rax], al; add bl, dh; ret; 
0x0000000000465dd6: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8349; 
0x0000000000476cb6: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8948; 
0x000000000047a888: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret 0x8d48; 
0x0000000000468ae8: add byte ptr [rax], al; add byte ptr [rax + 0x29], cl; ret; 
0x000000000048af61: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x830f; 
0x000000000041a03d: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x840f; 
0x000000000041313d: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x850f; 
0x000000000048aff6: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x9272; 
0x000000000041f1df: add byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret; 
0x000000000046b204: add byte ptr [rax], al; add byte ptr [rax + 0x63], cl; ret; 
0x000000000048445a: add byte ptr [rax], al; add byte ptr [rax + 1], bh; ret; 
0x0000000000483666: add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret 0x149; 
0x0000000000482f99: add byte ptr [rax], al; add byte ptr [rax + 1], cl; ret; 
0x0000000000484663: add byte ptr [rax], al; add byte ptr [rax + 2], bh; ret; 
0x000000000040fc91: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xac20; 
0x000000000045d45d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffa0; 
0x000000000044981d: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x000000000044a3b1: add byte ptr [rax], al; add byte ptr [rax - 0x39], cl; ret; 
0x0000000000458877: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; ret 0x4811; 
0x000000000045884e: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; ret 0x6411; 
0x00000000004581ae: add byte ptr [rax], al; add byte ptr [rax - 0x3f], cl; ret 0x8511; 
0x00000000004111b4: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x00000000004600e4: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8148; 
0x000000000041b83d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000048df2d: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0x8d48; 
0x000000000046a565: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000040f3db: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xf748; 
0x00000000004147e6: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret 0xffb8; 
0x00000000004100c1: add byte ptr [rax], al; add byte ptr [rax - 0x77], cl; ret; 
0x000000000048aa44: add byte ptr [rax], al; add byte ptr [rax - 0x7ab70000], al; ret 0x840f; 
0x00000000004465ed: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x3a01; 
0x000000000040f22d: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000004858ad: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4808; 
0x000000000047db78: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4810; 
0x000000000042afd3: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000048df0d: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x8001; 
0x0000000000472b5e: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x000000000043e931: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042affd: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000405fad: add byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000434714: add byte ptr [rax], al; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x0000000000411c18: add byte ptr [rax], al; add byte ptr [rax - 1], bh; ret; 
0x00000000004a0ecc: add byte ptr [rax], al; add byte ptr [rax], al; ret 0x1d4; 
0x00000000004a1664: add byte ptr [rax], al; add byte ptr [rax], al; ret 0x1d5; 
0x000000000049fed4: add byte ptr [rax], al; add byte ptr [rax], al; ret 0x24; 
0x00000000004a03c4: add byte ptr [rax], al; add byte ptr [rax], al; ret 0x33; 
0x0000000000417228: add byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000048d115: add byte ptr [rax], al; add byte ptr [rbx + rbx*8 - 0xd], dh; ret; 
0x0000000000460a0f: add byte ptr [rax], al; add byte ptr [rcx + 0x63], cl; ret 0x8944; 
0x000000000046c7c8: add byte ptr [rax], al; add byte ptr [rcx + 0x63], cl; ret 0x8948; 
0x000000000040e153: add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret 0x149; 
0x000000000044682d: add byte ptr [rax], al; add byte ptr [rcx + 1], cl; ret; 
0x0000000000423dfd: add byte ptr [rax], al; add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al; ret 0x4801; 
0x000000000040483e: add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; ret 0x149; 
0x0000000000479c82: add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; ret 0x848b; 
0x000000000045f301: add byte ptr [rax], al; add byte ptr [rcx - 0x77], cl; ret; 
0x000000000042603d: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0x7f10; 
0x000000000042494d: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret 0xf10; 
0x000000000041cdd5: add byte ptr [rax], al; add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000042ba00: add byte ptr [rax], al; add byte ptr [rcx - 9], cl; ret 1; 
0x000000000042ba26: add byte ptr [rax], al; add byte ptr [rcx - 9], cl; ret 2; 
0x000000000045ed28: add byte ptr [rax], al; add cl, ch; ret 0xfffa; 
0x0000000000454bc6: add byte ptr [rax], al; add cl, ch; ret 0xfffd; 
0x0000000000413d85: add byte ptr [rax], al; add cl, ch; ret; 
0x0000000000400c10: add byte ptr [rax], al; add cl, cl; ret; 
0x000000000045101c: add byte ptr [rax], al; add dh, dh; ret 0x4801; 
0x000000000042266d: add byte ptr [rax], al; add dh, dh; ret 0x4804; 
0x000000000044a4fd: add byte ptr [rax], al; add dh, dh; ret 0x7404; 
0x0000000000445f81: add byte ptr [rax], al; add dh, dh; ret 0x7501; 
0x000000000047482e: add byte ptr [rax], al; add rax, 3; ret; 
0x000000000048d0c0: add byte ptr [rax], al; add rsp, 0x18; ret; 
0x0000000000449659: add byte ptr [rax], al; add rsp, 0x68; ret; 
0x00000000004499ec: add byte ptr [rax], al; add rsp, 0x78; ret; 
0x000000000040155c: add byte ptr [rax], al; add rsp, 0x98; ret; 
0x0000000000481a21: add byte ptr [rax], al; add rsp, 8; ret; 
0x0000000000440970: add byte ptr [rax], al; bsf rax, rdx; ret; 
0x000000000042438c: add byte ptr [rax], al; cmove rax, rdx; ret; 
0x0000000000485073: add byte ptr [rax], al; cmovne rax, rdx; ret; 
0x000000000042bfe2: add byte ptr [rax], al; jne 0x2bef0; ret; 
0x0000000000444d4e: add byte ptr [rax], al; lea rax, [rdi + 0xa]; ret; 
0x0000000000444d5e: add byte ptr [rax], al; lea rax, [rdi + 0xb]; ret; 
0x0000000000444d6e: add byte ptr [rax], al; lea rax, [rdi + 0xc]; ret; 
0x0000000000444d7e: add byte ptr [rax], al; lea rax, [rdi + 0xd]; ret; 
0x0000000000444d8e: add byte ptr [rax], al; lea rax, [rdi + 0xe]; ret; 
0x0000000000444cad: add byte ptr [rax], al; lea rax, [rdi + 0xf]; ret; 
0x0000000000444cce: add byte ptr [rax], al; lea rax, [rdi + 1]; ret; 
0x0000000000444cde: add byte ptr [rax], al; lea rax, [rdi + 2]; ret; 
0x0000000000444cee: add byte ptr [rax], al; lea rax, [rdi + 3]; ret; 
0x0000000000444cfe: add byte ptr [rax], al; lea rax, [rdi + 4]; ret; 
0x0000000000444d0e: add byte ptr [rax], al; lea rax, [rdi + 5]; ret; 
0x0000000000444d1e: add byte ptr [rax], al; lea rax, [rdi + 6]; ret; 
0x0000000000444c5a: add byte ptr [rax], al; lea rax, [rdi + 7]; ret; 
0x0000000000444d2e: add byte ptr [rax], al; lea rax, [rdi + 8]; ret; 
0x0000000000444d3e: add byte ptr [rax], al; lea rax, [rdi + 9]; ret; 
0x0000000000444cbe: add byte ptr [rax], al; lea rax, [rdi]; ret; 
0x000000000044d34e: add byte ptr [rax], al; lea rax, [rip + 0x26cfa9]; ret; 
0x0000000000400c11: add byte ptr [rax], al; leave; ret; 
0x00000000004440fe: add byte ptr [rax], al; mov byte ptr [rdi], dh; ret; 
0x00000000004191bc: add byte ptr [rax], al; mov dword ptr [rip + 0x2a0648], eax; ret; 
0x00000000004236de: add byte ptr [rax], al; mov eax, 0x16; ret; 
0x0000000000411c19: add byte ptr [rax], al; mov eax, 0xffffffff; ret; 
0x000000000048445b: add byte ptr [rax], al; mov eax, 1; ret; 
0x0000000000484664: add byte ptr [rax], al; mov eax, 2; ret; 
0x0000000000465f61: add byte ptr [rax], al; mov eax, edx; ret; 
0x000000000044bfbe: add byte ptr [rax], al; mov qword ptr [rax + 0x20], rsi; ret; 
0x000000000047b5d4: add byte ptr [rax], al; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000048d1ae: add byte ptr [rax], al; mov qword ptr [rdi + 0x98], rsi; ret; 
0x0000000000484478: add byte ptr [rax], al; mov qword ptr [rdi], rsi; ret; 
0x000000000041917c: add byte ptr [rax], al; mov qword ptr [rip + 0x2a0663], rax; ret; 
0x000000000041915c: add byte ptr [rax], al; mov qword ptr [rip + 0x2a067b], rax; ret; 
0x000000000041786e: add byte ptr [rax], al; mov rax, -1; ret; 
0x000000000047487e: add byte ptr [rax], al; mov rax, 4; ret; 
0x000000000047488e: add byte ptr [rax], al; mov rax, 5; ret; 
0x0000000000481a2e: add byte ptr [rax], al; mov rax, qword ptr [rax + 8]; ret; 
0x000000000041862e: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0x68]; ret; 
0x000000000048d12e: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0x90]; ret; 
0x000000000048d1be: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xa0]; ret; 
0x000000000048d21e: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xa8]; ret; 
0x000000000048d20e: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xb0]; ret; 
0x000000000048d1ce: add byte ptr [rax], al; mov rax, qword ptr [rdi + 0xb8]; ret; 
0x00000000004579ce: add byte ptr [rax], al; mov rax, qword ptr [rip + 0x2644a1]; ret; 
0x000000000044f47e: add byte ptr [rax], al; mov rax, qword ptr [rip + 0x26d4b1]; ret; 
0x000000000041860e: add byte ptr [rax], al; mov rax, qword ptr [rip + 0x2a0b09]; ret; 
0x000000000048aefe: add byte ptr [rax], al; mov rax, qword ptr [rsi + 0xa8]; ret; 
0x000000000041863e: add byte ptr [rax], al; mov rax, rdi; ret; 
0x000000000041dc0e: add byte ptr [rax], al; mov rax, rsi; ret; 
0x0000000000412bbe: add byte ptr [rax], al; movzx eax, byte ptr [rdx]; ret; 
0x0000000000400aa6: add byte ptr [rax], al; pop rbp; ret; 
0x0000000000400de6: add byte ptr [rax], al; pop rbx; ret; 
0x0000000000498286: add byte ptr [rax], al; ret 0; 
0x000000000049f1fe: add byte ptr [rax], al; ret 0x10; 
0x00000000004a0ece: add byte ptr [rax], al; ret 0x1d4; 
0x00000000004a1666: add byte ptr [rax], al; ret 0x1d5; 
0x000000000049fed6: add byte ptr [rax], al; ret 0x24; 
0x00000000004a03c6: add byte ptr [rax], al; ret 0x33; 
0x000000000049e9fe: add byte ptr [rax], al; ret 0xa; 
0x000000000049edfe: add byte ptr [rax], al; ret 0xd; 
0x00000000004a22a2: add byte ptr [rax], al; ret 1; 
0x00000000004a24a2: add byte ptr [rax], al; ret 2; 
0x00000000004a26a2: add byte ptr [rax], al; ret 3; 
0x00000000004a28a2: add byte ptr [rax], al; ret 4; 
0x00000000004a2aa2: add byte ptr [rax], al; ret 5; 
0x000000000049e5a6: add byte ptr [rax], al; ret 6; 
0x00000000004a2ea2: add byte ptr [rax], al; ret 7; 
0x00000000004a30a2: add byte ptr [rax], al; ret 8; 
0x00000000004a32a2: add byte ptr [rax], al; ret 9; 
0x0000000000401563: add byte ptr [rax], al; ret; 
0x00000000004a289e: add byte ptr [rax], al; rol byte ptr [rax + rax], 0; ret 4; 
0x000000000049eca6: add byte ptr [rax], al; ror byte ptr [rax + rax], 0; ret; 
0x000000000042cf2c: add byte ptr [rax], al; sub eax, ecx; ret; 
0x0000000000446a41: add byte ptr [rax], al; sub rax, rdx; ret; 
0x0000000000474dc3: add byte ptr [rax], al; syscall; ret; 
0x000000000040f296: add byte ptr [rax], al; xor eax, eax; ret; 
0x0000000000444afe: add byte ptr [rax], al; xor rax, rax; ret; 
0x000000000048b8fe: add byte ptr [rax], cl; mov byte ptr [rip + 0x2308a9], 8; ret; 
0x000000000048b905: add byte ptr [rax], cl; ret; 
0x00000000004236dd: add byte ptr [rax], r8b; mov eax, 0x16; ret; 
0x000000000041876d: add byte ptr [rax], r8b; mov eax, 0xffffffff; ret; 
0x000000000041786d: add byte ptr [rax], r8b; mov rax, -1; ret; 
0x0000000000400aa5: add byte ptr [rax], r8b; pop rbp; ret; 
0x0000000000484b9d: add byte ptr [rax], r8b; pop rbx; ret; 
0x00000000004464fd: add byte ptr [rax], r8b; xor eax, eax; ret; 
0x0000000000449536: add byte ptr [rbp + 0x10], dh; add rsp, 0x28; ret; 
0x0000000000484faf: add byte ptr [rbp + 0x12], dh; add rsp, 0x38; ret; 
0x00000000004758ad: add byte ptr [rbp + 0x1b], dh; add rsp, 0x38; ret; 
0x0000000000481db4: add byte ptr [rbp + 0x27], dh; add rsp, 0x68; ret; 
0x0000000000481cf4: add byte ptr [rbp + 0x2c], dh; add rsp, 0x38; ret; 
0x000000000041303a: add byte ptr [rbp + 0x31], al; dec dword ptr [rax + 0x39]; ret 0x860f; 
0x0000000000481f15: add byte ptr [rbp + 0x36], dh; add rsp, 0x78; ret; 
0x0000000000484220: add byte ptr [rbp + 0x3b], dh; leave; ret; 
0x0000000000449766: add byte ptr [rbp + 0x42], dh; add rsp, 0x58; ret; 
0x000000000047577b: add byte ptr [rbp + 0x45], dh; add rsp, 0x58; ret; 
0x000000000045aeb6: add byte ptr [rbp + 0x4a], dh; add rsp, 0x148; ret; 
0x0000000000449af6: add byte ptr [rbp + 0x4a], dh; add rsp, 0x68; ret; 
0x0000000000482e4f: add byte ptr [rbp + 0xf], cl; lodsd eax, dword ptr [rsi]; ret; 
0x0000000000482d3f: add byte ptr [rbp + 0xf], cl; movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x000000000044a465: add byte ptr [rbp + 0xf], dh; add rsp, 0x28; ret; 
0x000000000048830a: add byte ptr [rbp + 0xf], dh; add rsp, 0x38; ret; 
0x000000000047f316: add byte ptr [rbp + 0xf], dh; mov rax, qword ptr [rip + 0x23d090]; ret; 
0x000000000048777a: add byte ptr [rbp + 2], dh; pop rbx; ret; 
0x000000000045ac6e: add byte ptr [rbp + 5], dh; add rsp, 0x18; ret; 
0x0000000000484ecc: add byte ptr [rbp + 5], dh; add rsp, 0x38; ret; 
0x000000000040f7b1: add byte ptr [rbp + 8], dh; add rsp, 0xd8; ret; 
0x000000000048d158: add byte ptr [rbp + rax + 0x48], dh; mov dword ptr [rdi + rsi*8], edx; ret; 
0x000000000048d070: add byte ptr [rbp + rbx + 0x48], dh; add esp, 0x18; ret; 
0x000000000049edf7: add byte ptr [rbp + rcx + 0xdbf0000], bh; add byte ptr [rax], al; ret 0xd; 
0x000000000041ef7b: add byte ptr [rbp + rcx*4 + 0x46], cl; dec dword ptr [rax - 0x77]; ret 0x2948; 
0x00000000004900b4: add byte ptr [rbp - 0x1f], dh; pop rbx; ret; 
0x000000000044bbfa: add byte ptr [rbp - 0x3dbbf040], al; ret; 
0x000000000049f0a3: add byte ptr [rbp - 0x3ffffff1], bh; sldt word ptr [rax]; ret; 
0x000000000044d365: add byte ptr [rbp - 0xcf98b40], al; ret; 
0x000000000048f447: add byte ptr [rbp - 0xcfb8b40], al; ret; 
0x0000000000491443: add byte ptr [rbx + 0x2283ca3d], cl; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x00000000004852ad: add byte ptr [rbx + 0x236eac0d], cl; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000042385f: add byte ptr [rbx + 0x29858a15], cl; add bh, dh; ret 0; 
0x00000000004201cf: add byte ptr [rbx + 0x29963e3d], cl; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x00000000004186a7: add byte ptr [rbx + 0x2a366505], al; add byte ptr [rcx], al; ret; 
0x0000000000457b2b: add byte ptr [rbx + 0x41], bl; pop rsp; ret; 
0x000000000040fd63: add byte ptr [rbx + 0x42894c03], cl; or byte ptr [rbx - 0x76fefbbe], al; ret 0xe281; 
0x000000000040fc3b: add byte ptr [rbx + 0x5d], bl; ret; 
0x000000000048f49f: add byte ptr [rbx + 0x75c08507], cl; or dh, bl; ret; 
0x0000000000473c4a: add byte ptr [rbx + rax - 0xd], dh; ret; 
0x000000000048d117: add byte ptr [rbx + rbx*8 - 0xd], dh; ret; 
0x00000000004843f7: add byte ptr [rbx + rcx*4 + 0x57], cl; or byte ptr [rcx + 0x29], cl; ret 0x894c; 
0x0000000000488217: add byte ptr [rbx + rcx*4 + 0x57], cl; or byte ptr [rcx + 1], cl; ret 0x894c; 
0x000000000044d36f: add byte ptr [rbx - 0x18], dl; mov edx, 0x89000281; ret; 
0x00000000004483de: add byte ptr [rbx - 0x50f0fe40], al; ret 0xf8e9; 
0x000000000046c77b: add byte ptr [rbx - 0x78f0d008], al; mov eax, 0x8900001d; ret 0x349; 
0x000000000046be2d: add byte ptr [rbx - 0x78f0d008], al; mov ebx, 0x89000025; ret 0x349; 
0x0000000000461fdb: add byte ptr [rbx - 0x78f0d008], al; mov esi, 0x8900000b; ret 0x349; 
0x000000000046b8df: add byte ptr [rbx - 0x78f0d008], al; mov esi, 0x8900002b; ret 0x349; 
0x0000000000446126: add byte ptr [rbx - 0x7bf0ed07], al; ret 2; 
0x0000000000406f45: add byte ptr [rbx - 0x7bf0fc06], al; ret; 
0x000000000040ac76: add byte ptr [rbx - 0x7bf0fc08], al; ret; 
0x0000000000410b48: add byte ptr [rbx - 0x7bf0fd08], al; ret; 
0x0000000000407cbc: add byte ptr [rbx - 0x7bf0fe02], al; ret 0x1b; 
0x0000000000409f32: add byte ptr [rbx - 0x7bf0fe08], al; ret 4; 
0x0000000000409e8f: add byte ptr [rbx - 0x7bf0fe08], al; ret; 
0x00000000004671c5: add byte ptr [rcx + 0x29], cl; ret; 
0x000000000041153f: add byte ptr [rcx + 0x2b], cl; adc byte ptr [r8 + 1], r9b; ret; 
0x00000000004114a6: add byte ptr [rcx + 0x2b], cl; and byte ptr [r8 + 1], r9b; ret; 
0x0000000000489972: add byte ptr [rcx + 0x348b4cd8], cl; ret 0xf41; 
0x000000000047380f: add byte ptr [rcx + 0x39], cl; ret; 
0x0000000000460a11: add byte ptr [rcx + 0x63], cl; ret 0x8944; 
0x000000000046c7ca: add byte ptr [rcx + 0x63], cl; ret 0x8948; 
0x0000000000485966: add byte ptr [rcx + 0xc8b48d8], cl; ret 0xb60f; 
0x0000000000466d77: add byte ptr [rcx + 0xf], al; xchg eax, esp; ret; 
0x000000000046bd8e: add byte ptr [rcx + 1], al; ret 0x8b48; 
0x000000000040e155: add byte ptr [rcx + 1], cl; ret 0x149; 
0x000000000048c205: add byte ptr [rcx + 1], cl; ret 0xef89; 
0x000000000044682f: add byte ptr [rcx + 1], cl; ret; 
0x000000000041911d: add byte ptr [rcx + rax + 0x57], al; sbb byte ptr [rax + 0x39], cl; ret; 
0x0000000000416a44: add byte ptr [rcx + rcx - 0xd], dh; ret; 
0x0000000000473a6f: add byte ptr [rcx + rcx*4 - 0x40], cl; vzeroupper; ret; 
0x0000000000423dff: add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al; ret 0x4801; 
0x000000000045540f: add byte ptr [rcx - 0x46], al; add eax, 0xe9000000; ret; 
0x000000000047f01b: add byte ptr [rcx - 0x75], al; adc edi, dword ptr [rcx]; ret 0x840f; 
0x000000000047f0b8: add byte ptr [rcx - 0x75], al; adc edi, dword ptr [rcx]; ret 0xc74; 
0x000000000040e1c7: add byte ptr [rcx - 0x75], cl; add byte ptr [r8 - 0x7d], r9b; ret; 
0x000000000046c18e: add byte ptr [rcx - 0x77], al; ret 0x1674; 
0x000000000044bd67: add byte ptr [rcx - 0x77], al; ret; 
0x0000000000404840: add byte ptr [rcx - 0x77], cl; ret 0x149; 
0x00000000004917b2: add byte ptr [rcx - 0x77], cl; ret 0x8349; 
0x0000000000479c84: add byte ptr [rcx - 0x77], cl; ret 0x848b; 
0x000000000045e9e7: add byte ptr [rcx - 0x77], cl; ret; 
0x000000000048a93a: add byte ptr [rcx - 0x77], cl; ror byte ptr [rax - 0x77], 1; ret 0x3575; 
0x000000000048aa49: add byte ptr [rcx - 0x7b], cl; ret 0x840f; 
0x000000000047145b: add byte ptr [rcx - 0x7cb7e8f4], cl; ret 0x4804; 
0x000000000041935f: add byte ptr [rcx - 0x7d], cl; ret 0x4908; 
0x000000000045b42e: add byte ptr [rcx - 0x7d], cl; ret 0x6601; 
0x000000000042603f: add byte ptr [rcx - 0x7d], cl; ret 0x7f10; 
0x000000000042494f: add byte ptr [rcx - 0x7d], cl; ret 0xf10; 
0x000000000041cdd7: add byte ptr [rcx - 0x7d], cl; ret; 
0x000000000042ba02: add byte ptr [rcx - 9], cl; ret 1; 
0x000000000042ba28: add byte ptr [rcx - 9], cl; ret 2; 
0x0000000000400b1b: add byte ptr [rcx], al; pop rbp; ret; 
0x000000000047fc9b: add byte ptr [rcx], al; pop rbx; ret; 
0x00000000004186ad: add byte ptr [rcx], al; ret; 
0x000000000044d37c: add byte ptr [rcx], bh; ret; 
0x0000000000477f3c: add byte ptr [rcx], dh; fisttp dword ptr [rax - 0x7d]; ret; 
0x000000000042b30c: add byte ptr [rcx], dh; rol bl, 0x83; ret 0x6620; 
0x000000000044d39b: add byte ptr [rcx], dh; sar byte ptr [rcx], cl; ret; 
0x0000000000463345: add byte ptr [rdi + rcx - 0x4a], al; or al, 0x89; ret 0xc689; 
0x000000000040dbf6: add byte ptr [rdi], cl; add eax, 0x8944c689; ret 0xeab8; 
0x0000000000480fb6: add byte ptr [rdi], cl; add eax, 0x940fc085; ret 0x3d; 
0x0000000000448037: add byte ptr [rdi], cl; lahf; ret 0xea81; 
0x0000000000412bbf: add byte ptr [rdi], cl; mov dh, 2; ret; 
0x000000000042b34f: add byte ptr [rdi], cl; mov esp, 0xf80148c0; ret; 
0x00000000004205ce: add byte ptr [rdi], cl; xchg eax, ebx; ret 0x3d83; 
0x00000000004767e3: add byte ptr [rdi], cl; xchg eax, esp; ret 0xc283; 
0x000000000044f804: add byte ptr [rdi], cl; xchg eax, esp; ret 0xd5e9; 
0x000000000048d087: add byte ptr [rdx + 0x48], dh; add esp, 0x18; ret; 
0x0000000000412857: add byte ptr [rdx + rax - 0xd], dh; ret; 
0x000000000049e9f7: add byte ptr [rdx + rcx + 0xabf0000], bh; add byte ptr [rax], al; ret 0xa; 
0x0000000000457160: add byte ptr [rdx + rdi*2 - 0xa], dh; ret; 
0x000000000045715f: add byte ptr [rdx + rdi*2 - 0xa], sil; ret; 
0x000000000042c4e4: add byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004633ea: add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0x290f; 
0x000000000041a307: add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0x4466; 
0x000000000046616a: add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0x4ce8; 
0x0000000000419d3f: add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0x8348; 
0x0000000000463413: add byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret 0xa3e8; 
0x000000000042b274: add byte ptr [rsi + 0xf], ah; xlatb; ret 0xc085; 
0x000000000041a306: add byte ptr [rsi + 0xf], spl; outsd dx, dword ptr [rsi]; ret 0x4466; 
0x00000000004243f1: add byte ptr [rsi + rax*8 - 0xd], dh; ret; 
0x0000000000455f20: add byte ptr [rsi + rsi*2 - 0xa], dh; ret; 
0x0000000000455f1f: add byte ptr [rsi + rsi*2 - 0xa], sil; ret; 
0x00000000004004cd: add byte ptr [rsi - 0x70], ah; ret; 
0x00000000004243b7: add byte ptr [rsi - 9], dh; ret 0; 
0x0000000000452bdc: add byte ptr [rsp + rsi - 0xa], dh; ret; 
0x0000000000448f05: add byte ptr es:[rax + 0x39], cl; ret; 
0x000000000044d364: add byte ptr es:[rbp - 0xcf98b40], al; ret; 
0x00000000004155a2: add ch, al; pop rax; ret; 
0x00000000004156a9: add ch, al; push rcx; ret 0xffff; 
0x0000000000422cfa: add ch, byte ptr [rdi - 1]; dec dword ptr [rbx + 0x90c2454]; ret 0xbae9; 
0x0000000000469513: add ch, byte ptr [rip - 0x7d000000]; ret; 
0x00000000004acac7: add ch, byte ptr [rsi + rcx + 8]; ret; 
0x00000000004424a7: add cl, byte ptr [r8 - 0x76b7fdbe]; clc; ret; 
0x0000000000469cf2: add cl, byte ptr [rax + 0x29]; ret 0xb8; 
0x0000000000469246: add cl, byte ptr [rax + 0x39]; ret 0x850f; 
0x000000000045514e: add cl, byte ptr [rax + 0x39]; ret; 
0x0000000000447e04: add cl, byte ptr [rax + 0x77f8c50f]; ret; 
0x0000000000411563: add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x2948; 
0x0000000000411644: add cl, byte ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret; 
0x0000000000450cec: add cl, byte ptr [rax + 1]; fimul word ptr [rax + 1]; ret; 
0x00000000004424a8: add cl, byte ptr [rax - 0x76b7fdbe]; clc; ret; 
0x0000000000442415: add cl, byte ptr [rax - 0x77]; clc; ret; 
0x000000000047e634: add cl, byte ptr [rax - 0x77]; ret 0xc148; 
0x00000000004182c2: add cl, byte ptr [rax - 0x7b]; sal byte ptr [rbp - 0x10], 0xf3; ret; 
0x0000000000440c70: add cl, byte ptr [rax - 0x7d]; ret 0x4808; 
0x0000000000440cd3: add cl, byte ptr [rax - 0x7d]; ret 0xe908; 
0x0000000000483fbd: add cl, byte ptr [rax - 0x7d]; ret 0xf01; 
0x0000000000451e1a: add cl, byte ptr [rcx - 0x7d]; ret; 
0x000000000045ed2a: add cl, ch; ret 0xfffa; 
0x0000000000454bc8: add cl, ch; ret 0xfffd; 
0x0000000000413d87: add cl, ch; ret; 
0x0000000000400c12: add cl, cl; ret; 
0x00000000004357d3: add dh, bl; movq qword ptr [rdi], mm1; ret; 
0x0000000000400596: add dh, bl; ret; 
0x000000000042442e: add dh, byte ptr [rax + rcx - 9]; ret 0; 
0x00000000004acff9: add dh, byte ptr [rbx + 0xa]; ret; 
0x000000000045101e: add dh, dh; ret 0x4801; 
0x000000000042266f: add dh, dh; ret 0x4804; 
0x000000000047c548: add dh, dh; ret 0x7403; 
0x000000000044a4ff: add dh, dh; ret 0x7404; 
0x0000000000444b57: add dh, dh; ret 0x7501; 
0x0000000000444b64: add dh, dh; ret 0x7502; 
0x0000000000444b71: add dh, dh; ret 0x7504; 
0x0000000000444b29: add dh, dh; ret 0x7510; 
0x0000000000444b36: add dh, dh; ret 0x7520; 
0x000000000042465c: add dh, dh; ret 0x7540; 
0x0000000000422993: add dh, dh; ret 0xf02; 
0x000000000045a2b8: add dh, dh; ret 0xf04; 
0x000000000041ac69: add dh, dh; ret 0xf08; 
0x0000000000466bd1: add dh, dh; ret 0xf40; 
0x0000000000466bb7: add dh, dh; ret 0xf50; 
0x000000000041ad38: add dh, dh; ret; 
0x000000000047990d: add dword ptr [r15], r9d; xchg eax, ebp; ret 0xc283; 
0x000000000046ff87: add dword ptr [r8 - 0x75], r9d; adc dword ptr [rax + 0x39], ecx; ret 0x3873; 
0x000000000046eda5: add dword ptr [r8 - 0x7d], ecx; ret 0x8502; 
0x000000000044fbd3: add dword ptr [r8 - 0x7d], r9d; ret; 
0x0000000000443c31: add dword ptr [rax + 0x28d4802], ecx; ret; 
0x00000000004657ca: add dword ptr [rax + 0x29], ecx; fimul dword ptr [rax + 0x39]; ret 0xe57f; 
0x000000000047fad9: add dword ptr [rax + 0x39], ecx; ret 0x1272; 
0x000000000047faeb: add dword ptr [rax + 0x39], ecx; ret 0x674; 
0x000000000045b47f: add dword ptr [rax + 0x39], ecx; ret 0x8841; 
0x0000000000464baa: add dword ptr [rax + 0x39], ecx; ret 0x8c0f; 
0x000000000045ce73: add dword ptr [rax + 0x39], ecx; ret 0xd774; 
0x000000000045cdfd: add dword ptr [rax + 0x39], ecx; ret 0xed75; 
0x0000000000416c3d: add dword ptr [rax + 0x39], ecx; ret; 
0x00000000004572d0: add dword ptr [rax + 0x39], r9d; ret; 
0x000000000048df13: add dword ptr [rax + 0x7900ff7a], eax; sbb dword ptr [rax - 0x7d], ecx; ret 0x8001; 
0x0000000000481e87: add dword ptr [rax + 1], ecx; ror byte ptr [rax - 0x77], 1; ret 0xc148; 
0x000000000040db2a: add dword ptr [rax + 1], ecx; ror byte ptr [rax - 0x77], 1; ret 0xe281; 
0x0000000000479105: add dword ptr [rax + 9], ecx; ret 0x1475; 
0x000000000041dd6e: add dword ptr [rax + 9], ecx; ret 0x8949; 
0x00000000004790d7: add dword ptr [rax + 9], ecx; ret 0xe75; 
0x0000000000402c6f: add dword ptr [rax - 0x6bf0d006], eax; ret 0xb60f; 
0x000000000046ff88: add dword ptr [rax - 0x75], ecx; adc dword ptr [rax + 0x39], ecx; ret 0x3873; 
0x0000000000442481: add dword ptr [rax - 0x776b7fe], ecx; ret; 
0x000000000047f223: add dword ptr [rax - 0x77], ecx; add eax, 0x23d185; ret; 
0x0000000000450137: add dword ptr [rax - 0x77], ecx; ret 0x2b48; 
0x0000000000414006: add dword ptr [rax - 0x77], ecx; ret 0x3c75; 
0x0000000000405f9c: add dword ptr [rax - 0x77], ecx; ret; 
0x000000000047f222: add dword ptr [rax - 0x77], r9d; add eax, 0x23d185; ret; 
0x0000000000481493: add dword ptr [rax - 0x7d], ecx; ret 0x4118; 
0x0000000000481813: add dword ptr [rax - 0x7d], ecx; ret 0x4418; 
0x000000000045b8e9: add dword ptr [rax - 0x7d], ecx; ret 0x4801; 
0x000000000046eda6: add dword ptr [rax - 0x7d], ecx; ret 0x8502; 
0x0000000000402cb9: add dword ptr [rax - 0x7d], ecx; ret 0x8801; 
0x0000000000450726: add dword ptr [rax - 0x7d], ecx; ret 0x8b01; 
0x000000000046f3f7: add dword ptr [rax - 0x7d], ecx; ret 0x8b04; 
0x000000000040e42b: add dword ptr [rax - 0x7d], ecx; ret 0xf10; 
0x000000000040ef06: add dword ptr [rax - 0x7d], ecx; ret; 
0x00000000004059d0: add dword ptr [rax - 9], ecx; ror byte ptr [rax + 1], 1; ret; 
0x0000000000410084: add dword ptr [rax], eax; add bl, dh; ret; 
0x00000000004198ea: add dword ptr [rax], eax; add byte ptr [rax + 1], cl; ret; 
0x0000000000468103: add dword ptr [rax], eax; add byte ptr [rax - 0x39], cl; ret 0xffe0; 
0x00000000004493d9: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x16e9; 
0x000000000048e7da: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0x3948; 
0x00000000004563b6: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xb2eb; 
0x000000000048cd25: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret 0xc148; 
0x0000000000475a3d: add dword ptr [rax], eax; add byte ptr [rax - 0x77], cl; ret; 
0x000000000044b6bc: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000456012: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x000000000042aee7: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000041e645: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4c07; 
0x000000000042410e: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x000000000043fe5f: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042af15: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000004683d8: add dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000468640: add dword ptr [rax], eax; add byte ptr [rax], al; ret; 
0x0000000000409e8d: add dword ptr [rax], eax; add byte ptr [rbx - 0x7bf0fe08], al; ret; 
0x0000000000444b55: add dword ptr [rax], eax; add dh, dh; ret 0x7501; 
0x0000000000444b62: add dword ptr [rax], eax; add dh, dh; ret 0x7502; 
0x0000000000444b6f: add dword ptr [rax], eax; add dh, dh; ret 0x7504; 
0x0000000000444b27: add dword ptr [rax], eax; add dh, dh; ret 0x7510; 
0x0000000000444b34: add dword ptr [rax], eax; add dh, dh; ret 0x7520; 
0x0000000000444b41: add dword ptr [rax], eax; add dh, dh; ret 0x7540; 
0x000000000045a2b6: add dword ptr [rax], eax; add dh, dh; ret 0xf04; 
0x000000000042384c: add dword ptr [rax], eax; cmove rax, rdx; ret; 
0x000000000046f025: add dword ptr [rbp + 0xf48ff78], ecx; add dword ptr [r8 - 0x7d], ecx; ret 0x8502; 
0x000000000046ed9f: add dword ptr [rbp + 0xf48ff7e], ecx; add dword ptr [r8 - 0x7d], ecx; ret 0x8502; 
0x0000000000488ff9: add dword ptr [rbx - 0x77], ecx; push rsp; ret 0x4808; 
0x000000000040d51e: add dword ptr [rbx - 0x7cb70030], eax; ret; 
0x000000000045c342: add dword ptr [rcx + 0x39], ecx; ret; 
0x000000000044ad93: add dword ptr [rcx + 9], ecx; ret; 
0x000000000040e16a: add dword ptr [rcx - 0x73], ecx; or byte ptr [r8 + 0x39], cl; ret; 
0x00000000004424b1: add dword ptr [rcx - 0x776b7fe], ecx; ret; 
0x000000000046eb9e: add dword ptr [rcx - 0x77], eax; ret 0xe883; 
0x0000000000459988: add dword ptr [rcx - 0x78], eax; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000467291: add dword ptr [rcx - 0x7d], ecx; ret 0x2504; 
0x000000000047884b: add dword ptr [rcx - 0x7d], ecx; ret 0xf01; 
0x000000000044c435: add dword ptr [rcx - 0x7d], ecx; ret; 
0x00000000004b3e7d: add dword ptr [rdi], 0x48; or eax, 0x1370303; ret; 
0x00000000004b3e15: add dword ptr [rdi], 0x48; or eax, 0x34b0303; ret; 
0x00000000004b3e49: add dword ptr [rdi], 0x48; or eax, 0x35b0303; ret; 
0x00000000004b052d: add dword ptr [rdi], 3; ret 0xa01; 
0x00000000004483e1: add dword ptr [rdi], ecx; scasd eax, dword ptr [rdi]; ret 0xf8e9; 
0x000000000047990e: add dword ptr [rdi], ecx; xchg eax, ebp; ret 0xc283; 
0x0000000000446c8c: add dword ptr [rdx + 2], esi; mov byte ptr [rdi], cl; ret; 
0x00000000004852eb: add dword ptr [rdx + rax*2], 1; ret; 
0x000000000044d399: add dword ptr [rdx], 0x39d23100; ret; 
0x00000000004b300c: add dword ptr [rdx], 0x4a; ret; 
0x00000000004b5a9c: add dword ptr [rdx], 0x55; ret; 
0x00000000004aef78: add dword ptr [rdx], 0x5a; ret; 
0x00000000004b5a58: add dword ptr [rdx], 0x76; ret; 
0x00000000004196af: add dword ptr [rdx], ebp; add bl, dh; ret; 
0x00000000004186a8: add dword ptr [rip + 0x2a3665], 1; ret; 
0x00000000004acac3: add dword ptr [rsi + rcx + 0x30], ecx; add ch, byte ptr [rsi + rcx + 8]; ret; 
0x0000000000489f8d: add eax, 0x1489066; ret 0xb70f; 
0x000000000045ac70: add eax, 0x18c48348; ret; 
0x00000000004247a9: add eax, 0x1bb12; cmove rax, rdx; ret; 
0x0000000000423849: add eax, 0x1d0a2; cmove rax, rdx; ret; 
0x00000000004495ba: add eax, 0x1f0fc3f3; add byte ptr [rax - 0x39], cl; ret 0xffc0; 
0x0000000000424360: add eax, 0x221ab; cmove rax, rdx; ret; 
0x00000000004245a9: add eax, 0x22862; cmovne rax, rdx; ret; 
0x0000000000424610: add eax, 0x22bab; cmovne rax, rdx; ret; 
0x00000000004244b0: add eax, 0x22d1b; cmovne rax, rdx; ret; 
0x000000000042472f: add eax, 0x22ecc; cmovne rax, rdx; ret; 
0x00000000004245ef: add eax, 0x22ffc; cmovne rax, rdx; ret; 
0x000000000042448f: add eax, 0x2316c; cmovne rax, rdx; ret; 
0x00000000004237d0: add eax, 0x231db; cmovne rax, rdx; ret; 
0x0000000000485491: add eax, 0x23742a; ret; 
0x00000000004848f9: add eax, 0x23776a; ret; 
0x00000000004848de: add eax, 0x237785; add rsp, 8; ret; 
0x000000000047f38c: add eax, 0x23d017; mov qword ptr [rsi], rax; ret; 
0x000000000047f31b: add eax, 0x23d090; ret; 
0x000000000047f2e2: add eax, 0x23d0c9; add rsp, 8; ret; 
0x000000000047f226: add eax, 0x23d185; ret; 
0x00000000004579d2: add eax, 0x2644a1; ret; 
0x000000000044d352: add eax, 0x26cfa9; ret; 
0x000000000044f472: add eax, 0x26d4b1; ret; 
0x000000000045292f: add eax, 0x29480000; ret 0x349; 
0x00000000004246c9: add eax, 0x297722; add dh, byte ptr [rax + rcx - 9]; ret 0; 
0x0000000000424589: add eax, 0x297862; add dh, byte ptr [rax + rcx - 9]; ret 0; 
0x000000000041f787: add eax, 0x29a0d4; ret; 
0x00000000004191bf: add eax, 0x2a0648; ret; 
0x0000000000419180: add eax, 0x2a0663; ret; 
0x0000000000419160: add eax, 0x2a067b; ret; 
0x0000000000419056: add eax, 0x2a07ed; ret; 
0x0000000000419046: add eax, 0x2a07f5; ret; 
0x0000000000418ff6: add eax, 0x2a07fd; ret; 
0x0000000000418fe6: add eax, 0x2a0815; ret; 
0x0000000000418612: add eax, 0x2a0b09; ret; 
0x00000000004191d5: add eax, 0x2a2bba; ret; 
0x00000000004b20cc: add eax, 0x3400e4e; ret; 
0x0000000000484ece: add eax, 0x38c48348; ret; 
0x000000000041cefe: add eax, 0x39480000; ret 0xf275; 
0x0000000000443cc8: add eax, 0x48054289; lea eax, [rdx + 8]; ret; 
0x00000000004424f8: add eax, 0x48054289; mov eax, edi; ret; 
0x00000000004441c6: add eax, 0x480f8948; mov dword ptr [rdi + 5], edx; ret; 
0x0000000000443d49: add eax, 0x5428948; lea rax, [rdx + 0xc]; ret; 
0x0000000000442539: add eax, 0x5428948; mov rax, rdi; ret; 
0x0000000000485070: add eax, 0x5b; cmovne rax, rdx; ret; 
0x00000000004a2a9d: add eax, 0x5c00000; add byte ptr [rax], al; ret 5; 
0x000000000042ab27: add eax, 0x83480000; ret 0x4910; 
0x000000000043e451: add eax, 0x83480000; ret 0xe910; 
0x000000000042ab55: add eax, 0x83480000; ret 0xeb10; 
0x000000000045f035: add eax, 0x83ffffef; ret; 
0x0000000000443ccb: add eax, 0x8428d48; ret; 
0x000000000040dbf8: add eax, 0x8944c689; ret 0xeab8; 
0x0000000000458e53: add eax, 0x89480000; ret 0x2948; 
0x00000000004917b0: add eax, 0x89490000; ret 0x8349; 
0x0000000000480fb8: add eax, 0x940fc085; ret 0x3d; 
0x00000000004727e9: add eax, 0x9f2; cmove rax, rdx; ret; 
0x000000000042d21a: add eax, 0xc0310000; ret; 
0x0000000000443d4d: add eax, 0xc428d48; ret; 
0x000000000044482d: add eax, 0xc478d48; ret; 
0x0000000000455412: add eax, 0xe9000000; ret; 
0x00000000004727b9: add eax, 0xee2; cmove rax, rdx; ret; 
0x000000000048d15a: add eax, 0xf7148948; ret; 
0x0000000000435683: add eax, 0xf7f0ff3; ret; 
0x000000000048f46a: add eax, 0xffff50e9; push rbx; ret; 
0x000000000041f780: add eax, 0xfffff58b; mov qword ptr [rip + 0x29a0d4], rax; ret; 
0x0000000000474821: add eax, 1; ret; 
0x0000000000474818: add eax, 2; ret; 
0x0000000000474831: add eax, 3; ret; 
0x000000000047b608: add eax, dword ptr [rax]; add bl, dh; ret; 
0x0000000000489dfc: add eax, dword ptr [rax]; add byte ptr [rax + 1], cl; ret; 
0x000000000041ae6a: add eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000042ad07: add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043e5f1: add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042ad35: add eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000474873: add eax, dword ptr [rax]; add byte ptr [rax], al; ret; 
0x00000000004483dc: add eax, dword ptr [rax]; add byte ptr [rbx - 0x50f0fe40], al; ret 0xf8e9; 
0x0000000000489970: add eax, dword ptr [rax]; add byte ptr [rcx + 0x348b4cd8], cl; ret 0xf41; 
0x000000000044bd65: add eax, dword ptr [rax]; add byte ptr [rcx - 0x77], al; ret; 
0x000000000047c546: add eax, dword ptr [rax]; add dh, dh; ret 0x7403; 
0x000000000041ac67: add eax, dword ptr [rax]; add dh, dh; ret 0xf08; 
0x00000000004480c0: add eax, dword ptr [rax]; pop rbx; ret; 
0x00000000004b3e29: add eax, dword ptr [rbx]; or al, byte ptr [rcx]; ret; 
0x000000000045da7c: add eax, dword ptr [rcx - 0x40]; call 0xffffffff89d76386; ret 0x8341; 
0x00000000004b3e5d: add eax, dword ptr [rdx]; cld; ret; 
0x00000000004b3e91: add eax, dword ptr [rdx]; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000042b129: add eax, ecx; ret; 
0x000000000042b656: add eax, ecx; vzeroupper; ret; 
0x000000000042b126: add eax, edi; add rax, rcx; ret; 
0x000000000042b354: add eax, edi; ret; 
0x0000000000485220: add eax, edi; sub rax, r8; ret; 
0x0000000000446b3a: add eax, edi; sub rax, rsi; ret; 
0x000000000042b7ca: add eax, edi; vzeroupper; ret; 
0x0000000000440a86: add eax, edx; sub rax, rdi; ret; 
0x00000000004b3e4e: add ebx, dword ptr [rbx + 3]; ret; 
0x0000000000435843: add ebx, esi; movq qword ptr [rdi], mm1; ret; 
0x00000000004424e5: add ecx, dword ptr [r9 - 0x76b7fcbe]; clc; ret; 
0x000000000045730d: add ecx, dword ptr [rax + 0x39]; ret; 
0x000000000040e0ce: add ecx, dword ptr [rax + 1]; fmul dword ptr [rax - 0x7d]; ret 0x4801; 
0x00000000004424e9: add ecx, dword ptr [rax - 0x77]; clc; ret; 
0x000000000047e6d7: add ecx, dword ptr [rax - 0x77]; mov rax, rcx; ret; 
0x000000000044fcc3: add ecx, dword ptr [rax - 0x77]; or byte ptr [r15], 0x8e; ret 1; 
0x000000000048bacf: add ecx, dword ptr [rax - 0x7d]; ret; 
0x000000000040eac1: add ecx, dword ptr [rbp + rcx*4 + 0x64]; ret; 
0x0000000000480c9a: add ecx, dword ptr [rbp - 0x77]; dec byte ptr [rax - 0x7d]; ret; 
0x0000000000483190: add ecx, dword ptr [rbp - 0x77]; ret 0x8d48; 
0x00000000004b3e1a: add ecx, dword ptr [rbx + 3]; ret; 
0x0000000000444164: add ecx, dword ptr [rcx + 0x357890f]; ret; 
0x000000000040fd65: add ecx, dword ptr [rcx + rcx*4 + 0x42]; or byte ptr [rbx - 0x76fefbbe], al; ret 0xe281; 
0x00000000004424e6: add ecx, dword ptr [rcx - 0x76b7fcbe]; clc; ret; 
0x0000000000448d7f: add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xc085; 
0x0000000000448ddd: add ecx, dword ptr [rdi]; xchg eax, esi; ret 0xd284; 
0x00000000004abf79: add ecx, dword ptr [rsi + rcx - 0x50]; add al, byte ptr [rdx]; ret 0xb00e; 
0x0000000000465e59: add ecx, eax; mov eax, r9d; ret; 
0x0000000000458716: add esi, dword ptr [rdi + rax - 0xd]; ret; 
0x0000000000435763: add esi, ebx; movq qword ptr [rdi], mm1; ret; 
0x0000000000446e95: add esi, ebx; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000044956c: add esi, ebx; ret; 
0x0000000000449b9f: add esp, 0x10; pop rbx; ret; 
0x000000000040dc3e: add esp, 0x118; ret; 
0x000000000045aeba: add esp, 0x148; ret; 
0x000000000045ac72: add esp, 0x18; ret; 
0x0000000000416a0f: add esp, 0x20; pop rbx; ret; 
0x000000000044953a: add esp, 0x28; ret; 
0x00000000004847ef: add esp, 0x30; pop rbx; ret; 
0x00000000004758b1: add esp, 0x38; ret; 
0x000000000048841c: add esp, 0x40; pop rbx; ret; 
0x0000000000488503: add esp, 0x50; pop rbx; ret; 
0x000000000044976a: add esp, 0x58; ret; 
0x000000000044965c: add esp, 0x68; ret; 
0x00000000004499ef: add esp, 0x78; ret; 
0x0000000000475393: add esp, 0x80; pop rbx; ret; 
0x000000000040155f: add esp, 0x98; ret; 
0x000000000040f7b5: add esp, 0xd8; ret; 
0x0000000000400413: add esp, 8; ret; 
0x0000000000435842: add r11d, r14d; movq qword ptr [rdi], mm1; ret; 
0x00000000004357d2: add r14b, r11b; movq qword ptr [rdi], mm1; ret; 
0x0000000000435762: add r14d, r11d; movq qword ptr [rdi], mm1; ret; 
0x000000000042ad34: add r8, qword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000004572ee: add r9b, byte ptr [rax + 0x39]; ret; 
0x000000000045730c: add r9d, dword ptr [rax + 0x39]; ret; 
0x0000000000465e58: add r9d, eax; mov eax, r9d; ret; 
0x0000000000474820: add rax, 1; ret; 
0x0000000000474817: add rax, 2; ret; 
0x0000000000474830: add rax, 3; ret; 
0x000000000042b128: add rax, rcx; ret; 
0x000000000042b655: add rax, rcx; vzeroupper; ret; 
0x000000000042b125: add rax, rdi; add rax, rcx; ret; 
0x000000000042b353: add rax, rdi; ret; 
0x000000000048521f: add rax, rdi; sub rax, r8; ret; 
0x0000000000446b39: add rax, rdi; sub rax, rsi; ret; 
0x000000000042b7c9: add rax, rdi; vzeroupper; ret; 
0x0000000000440a85: add rax, rdx; sub rax, rdi; ret; 
0x0000000000449b9e: add rsp, 0x10; pop rbx; ret; 
0x000000000040dc3d: add rsp, 0x118; ret; 
0x000000000045aeb9: add rsp, 0x148; ret; 
0x000000000045ac71: add rsp, 0x18; ret; 
0x0000000000416a0e: add rsp, 0x20; pop rbx; ret; 
0x0000000000449539: add rsp, 0x28; ret; 
0x00000000004847ee: add rsp, 0x30; pop rbx; ret; 
0x00000000004758b0: add rsp, 0x38; ret; 
0x000000000048841b: add rsp, 0x40; pop rbx; ret; 
0x0000000000488502: add rsp, 0x50; pop rbx; ret; 
0x0000000000449769: add rsp, 0x58; ret; 
0x000000000044965b: add rsp, 0x68; ret; 
0x00000000004499ee: add rsp, 0x78; ret; 
0x0000000000475392: add rsp, 0x80; pop rbx; ret; 
0x000000000040155e: add rsp, 0x98; ret; 
0x000000000040f7b4: add rsp, 0xd8; ret; 
0x0000000000400412: add rsp, 8; ret; 
0x00000000004852ea: add word ptr [rdx + rax*2], 1; ret; 
0x000000000048d1f8: and al, 0x10; add rsp, 0x28; ret; 
0x000000000048eb98: and al, 0x10; or byte ptr [rax - 0x7d], cl; ret; 
0x00000000004a7a24: and al, 0x26; outsd dx, dword ptr [rsi]; ret 0x5ae4; 
0x0000000000452bda: and al, 0x38; add byte ptr [rsp + rsi - 0xa], dh; ret; 
0x000000000045715e: and al, 0x40; add byte ptr [rdx + rdi*2 - 0xa], dh; ret; 
0x0000000000455f1e: and al, 0x40; add byte ptr [rsi + rsi*2 - 0xa], dh; ret; 
0x000000000048a96c: and al, 0x48; add esp, 0x38; ret; 
0x000000000046399e: and al, 0x83; ret; 
0x00000000004181b3: and al, 0xe9; ret 0xfffd; 
0x000000000045253e: and al, 0xf6; ret; 
0x0000000000440cea: and al, byte ptr [rsp - 0xb7f68c]; ret 0xc148; 
0x000000000041c218: and al, ch; ret 0xff3c; 
0x000000000041b918: and al, ch; ret 0xff45; 
0x0000000000449017: and al, ch; ret; 
0x0000000000469511: and bh, al; add ch, byte ptr [rip - 0x7d000000]; ret; 
0x00000000004530df: and bh, bh; rol byte ptr [rbx - 0x76befb08], 1; ret 0x415f; 
0x00000000004a6a05: and bh, byte ptr [rsi - 0x5e0466e]; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp; ret; 
0x00000000004114a9: and byte ptr [r8 + 1], r9b; ret; 
0x000000000041140e: and byte ptr [r9 - 0x77], r9b; xor byte ptr [r8 + 1], r9b; ret 0x8b49; 
0x0000000000400f31: and byte ptr [rax + 1], cl; ret 0xb70f; 
0x00000000004114aa: and byte ptr [rax + 1], cl; ret; 
0x00000000004663ce: and byte ptr [rax + 9], cl; ret 0xff83; 
0x0000000000477223: and byte ptr [rax - 0x75], cl; sub byte ptr [rax + 0x39], r9b; ret 0x870f; 
0x000000000048d2d6: and byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000467e04: and byte ptr [rax - 0x7d], cl; ret 0xe920; 
0x000000000044fa56: and byte ptr [rax - 0x7d], cl; ret; 
0x0000000000412dd2: and byte ptr [rax - 1], bh; pop rbx; ret; 
0x00000000004922bc: and byte ptr [rbp - 0x77], cl; ret; 
0x0000000000468063: and byte ptr [rbx + rcx*4 + 0x40], cl; sub cl, ch; ret 0xffe8; 
0x000000000041140f: and byte ptr [rcx - 0x77], cl; xor byte ptr [r8 + 1], r9b; ret 0x8b49; 
0x000000000040fc5b: and byte ptr [rdi], cl; test dword ptr [rsi - 0x77000000], esp; ret 0xe281; 
0x000000000042c27a: and byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x00000000004747fd: and cl, 0xf; je 0x74820; ret; 
0x000000000047f2c4: and cl, byte ptr [rax - 0x77]; ret 0x1f0f; 
0x0000000000423e03: and cl, byte ptr [rax - 0x7d]; ret 0x4801; 
0x000000000042babd: and cl, byte ptr [rcx - 0x77]; ret; 
0x000000000044bfa9: and dh, al; sub byte ptr [rcx], al; ret; 
0x0000000000469510: and dil, al; add ch, byte ptr [rip - 0x7d000000]; ret; 
0x0000000000469088: and dword ptr [r8], eax; add byte ptr [rax - 0x7d], cl; ret 0x481e; 
0x0000000000469089: and dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x481e; 
0x000000000041874e: and dword ptr [rdi], ecx; mov dh, 0; ret; 
0x00000000004a65f9: and dword ptr [rsi + rbp*2 - 0x7a], edi; lahf; ret 0x871e; 
0x000000000045ab8b: and eax, 0; ret; 
0x0000000000459a25: and eax, 0x358d4800; ret; 
0x0000000000448157: and eax, 0x7ff80000; ret; 
0x000000000045ab2c: and eax, 0xf3087400; ret; 
0x00000000004826bc: and eax, 2; sub eax, 1; ret; 
0x000000000047f2e5: and eax, dword ptr [rax]; add rsp, 8; ret; 
0x00000000004852e8: and eax, dword ptr [rax]; add word ptr [rdx + rax*2], 1; ret; 
0x00000000004848f5: and eax, dword ptr [rax]; mov qword ptr [rip + 0x23776a], rax; ret; 
0x000000000047f38f: and eax, dword ptr [rax]; mov qword ptr [rsi], rax; ret; 
0x000000000047f229: and eax, dword ptr [rax]; ret; 
0x000000000045292e: and eax, dword ptr [rip + 0x29480000]; ret 0x349; 
0x000000000042cf28: and ecx, 0xffff; sub eax, ecx; ret; 
0x000000000044b4ca: and ecx, dword ptr [rax - 0x77]; ret 0xabe; 
0x000000000044bfa8: and sil, al; sub byte ptr [rcx], al; ret; 
0x000000000042b350: bsf eax, eax; add rax, rdi; ret; 
0x000000000042b360: bsf eax, eax; lea rax, [rax + rdi + 0x10]; ret; 
0x000000000042b370: bsf eax, eax; lea rax, [rax + rdi + 0x20]; ret; 
0x000000000042b340: bsf eax, eax; lea rax, [rax + rdi - 0x10]; ret; 
0x000000000042b29f: bsf eax, eax; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000440303: bsf eax, eax; lea rax, [rdi + rax]; ret; 
0x0000000000440926: bsf eax, edx; ret; 
0x0000000000474407: bsf eax, edx; shr rax, 2; ret; 
0x0000000000440420: bsf rax, rax; lea rax, [rdi + rax]; ret; 
0x0000000000440972: bsf rax, rdx; ret; 
0x0000000000474406: bsf rax, rdx; shr rax, 2; ret; 
0x0000000000473237: bsr eax, eax; add rax, rdi; ret; 
0x00000000004734bb: bsr eax, esi; add rax, rdi; ret; 
0x00000000004733c9: bsr esi, esi; lea rax, [rcx + rsi]; ret; 
0x00000000004732c5: bsr esi, esi; lea rax, [rdi + rsi]; ret; 
0x0000000000473236: bsr rax, rax; add rax, rdi; ret; 
0x00000000004734ba: bsr rax, rsi; add rax, rdi; ret; 
0x00000000004733c8: bsr rsi, rsi; lea rax, [rcx + rsi]; ret; 
0x00000000004732c4: bsr rsi, rsi; lea rax, [rdi + rsi]; ret; 
0x000000000040ec28: call 0x1b40; xor eax, eax; ret; 
0x000000000046efcd: call 0x1ff1913; ror byte ptr [rbp + 0x39441704], cl; ret 0xf49; 
0x0000000000440cf4: call 0x48ecf809; mov eax, edi; ret; 
0x0000000000440dd4: call 0x48ecf8e9; mov eax, edx; ret; 
0x000000000040eac0: call 0x648e36c8; ret; 
0x0000000000474914: call 0x78000e1b; ret; 
0x00000000004749cc: call 0x78000ed3; ret; 
0x00000000004749f0: call 0x78000ef7; ret; 
0x0000000000474a10: call 0x78000f17; ret; 
0x0000000000474a5e: call 0x78000f65; ret; 
0x0000000000474afd: call 0x78001004; ret; 
0x0000000000474c38: call 0x7800113f; ret; 
0x0000000000474c6a: call 0x78001171; ret; 
0x0000000000474c81: call 0x78001188; ret; 
0x0000000000474ca5: call 0x780011ac; ret; 
0x0000000000474cc5: call 0x780011cc; ret; 
0x0000000000474ce5: call 0x780011ec; ret; 
0x0000000000474cf5: call 0x780011fc; ret; 
0x0000000000474d1c: call 0x78001223; ret; 
0x0000000000474d40: call 0x78001247; ret; 
0x0000000000474d60: call 0x78001267; ret; 
0x0000000000474dae: call 0x780012b5; ret; 
0x000000000047fbe2: call 0x7c9343e8; ret; 
0x000000000048755f: call 0x7c93bd65; ret; 
0x000000000047e445: call 0x7dd70; add rsp, 0xd8; ret; 
0x0000000000458765: call 0x849106b; pop rbx; ret; 
0x0000000000467e0b: call 0xffffffff89547e0f; ret 0x894c; 
0x000000000045da7f: call 0xffffffff89d76386; ret 0x8341; 
0x000000000042f143: call 0xfffffffff0627a94; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042f181: call 0xfffffffff0627ad2; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042f1b9: call 0xfffffffff0627b0a; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042f1f7: call 0xfffffffff0627b48; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042f22f: call 0xfffffffff0627b80; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042f257: call 0xfffffffff0627ba8; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042f27f: call 0xfffffffff0627bd0; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000431b13: call 0xfffffffff062a464; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000431b51: call 0xfffffffff062a4a2; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000431b89: call 0xfffffffff062a4da; mov qword ptr [rdi - 8], rcx; ret; 
0x0000000000431bc7: call 0xfffffffff062a518; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000431bff: call 0xfffffffff062a550; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000431c27: call 0xfffffffff062a578; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000431c4f: call 0xfffffffff062a5a0; mov qword ptr [rdi - 8], rdx; ret; 
0x00000000004613f8: call qword ptr [rax - 0x18]; xchg eax, ecx; ret 0xffff; 
0x0000000000400410: call rax; add rsp, 8; ret; 
0x0000000000459a23: cdq; and eax, 0x358d4800; ret; 
0x00000000004491df: cdq; ret; 
0x0000000000469cf1: clc; add cl, byte ptr [rax + 0x29]; ret 0xb8; 
0x000000000047e633: clc; add cl, byte ptr [rax - 0x77]; ret 0xc148; 
0x000000000040d51d: clc; add dword ptr [rbx - 0x7cb70030], eax; ret; 
0x000000000042b127: clc; add rax, rcx; ret; 
0x0000000000422d48: clc; cmovne rax, rcx; ret; 
0x0000000000476906: clc; dec dword ptr [rax + 0x39]; ret; 
0x0000000000472820: clc; dec dword ptr [rax + 1]; ret; 
0x000000000046fd39: clc; dec dword ptr [rax - 0x77]; ret 0xf41; 
0x0000000000401acc: clc; dec dword ptr [rax - 0x77]; ret; 
0x0000000000478a0b: clc; dec dword ptr [rax - 0x7d]; ret; 
0x00000000004619c6: clc; dec dword ptr [rcx - 0x77]; ret; 
0x0000000000459792: clc; inc dword ptr [rcx - 0x77]; ret 0x840f; 
0x0000000000454037: clc; jg 0x53fc3; ret 0xdb76; 
0x000000000048d4d3: clc; leave; ret; 
0x000000000042f2b3: clc; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000447c9e: clc; mov qword ptr [rdi], rcx; ret; 
0x0000000000446f2a: clc; mov qword ptr [rdi], rsi; ret; 
0x0000000000475483: clc; push qword ptr [rdi + rax*2 - 0x77]; ret 0xe283; 
0x0000000000490ee8: clc; push rbx; ret; 
0x000000000041050f: clc; ret 0x2a; 
0x0000000000412905: clc; ret; 
0x000000000047451f: clc; shr rax, 2; ret; 
0x0000000000485221: clc; sub rax, r8; ret; 
0x0000000000446b3b: clc; sub rax, rsi; ret; 
0x000000000042b7cb: clc; vzeroupper; ret; 
0x0000000000492689: cld; idiv bh; ret; 
0x000000000042fa22: cld; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000447ca6: cld; mov dword ptr [rdi], ecx; ret; 
0x0000000000446f38: cld; mov dword ptr [rdi], esi; ret; 
0x0000000000400ff0: cld; ret; 
0x00000000004477c2: cld; vzeroupper; ret; 
0x0000000000469245: cli; add cl, byte ptr [rax + 0x39]; ret 0x850f; 
0x000000000044c255: cli; cmp eax, 0x83497174; ret; 
0x000000000045d47e: cli; dec dword ptr [rax + 0x29]; ret; 
0x0000000000471b27: cli; dec dword ptr [rbx - 0x14f3db8c]; ret 0x5590; 
0x000000000045978f: cli; inc dword ptr [rbx - 0x76be0008]; ret 0x840f; 
0x00000000004557d5: cli; inc dword ptr [rcx - 0x77]; ret 0x5be9; 
0x00000000004524ed: cli; inc dword ptr [rcx - 0x77]; ret; 
0x000000000042fe28: cli; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000044bd0b: cli; setae al; ret; 
0x00000000004a6a0a: cli; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp; ret; 
0x000000000044d363: cmc; add byte ptr es:[rbp - 0xcf98b40], al; ret; 
0x00000000004a9749: cmc; mov ch, 0xab; ret; 
0x0000000000434c6a: cmc; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000042f6ae: cmc; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000446017: cmc; sub eax, edx; ret; 
0x00000000004a8d85: cmc; xlatb; ret 0x4e27; 
0x0000000000418fc9: cmovae eax, dword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000418fc8: cmovae rax, qword ptr [rdi + 0x10]; sub rax, qword ptr [rdi + 0x18]; ret; 
0x00000000004480e4: cmove eax, ecx; pop rbx; ret; 
0x0000000000471e81: cmove eax, ecx; ret; 
0x0000000000423713: cmove eax, edx; add rsp, 8; ret; 
0x00000000004480ac: cmove eax, edx; pop rbx; ret; 
0x000000000042384f: cmove eax, edx; ret; 
0x000000000047e738: cmove ecx, eax; mov rax, rcx; ret; 
0x0000000000471e80: cmove r8, rcx; ret; 
0x00000000004480e3: cmove rax, rcx; pop rbx; ret; 
0x0000000000423712: cmove rax, rdx; add rsp, 8; ret; 
0x00000000004480ab: cmove rax, rdx; pop rbx; ret; 
0x000000000042384e: cmove rax, rdx; ret; 
0x000000000047e737: cmove rcx, rax; mov rax, rcx; ret; 
0x0000000000422d4a: cmovne eax, ecx; ret; 
0x000000000044813c: cmovne eax, edx; pop rbx; ret; 
0x00000000004237d6: cmovne eax, edx; ret; 
0x0000000000440554: cmovne eax, edx; vzeroupper; ret; 
0x0000000000422d49: cmovne rax, rcx; ret; 
0x000000000044813b: cmovne rax, rdx; pop rbx; ret; 
0x00000000004237d5: cmovne rax, rdx; ret; 
0x0000000000440553: cmovne rax, rdx; vzeroupper; ret; 
0x000000000045a27d: cmovns eax, dword ptr [rbx + 0x149f0e7]; ror byte ptr [rax - 0x77], 1; ret 0x894c; 
0x0000000000450b4c: cmovs eax, edx; ret; 
0x0000000000455972: cmp al, 0x24; add byte ptr [rcx - 0x77], al; ret; 
0x000000000044b5ad: cmp al, 0xff; dec dword ptr [rax - 0x7f]; ret; 
0x000000000042b346: cmp al, dh; ret; 
0x000000000042b345: cmp al, r14b; ret; 
0x0000000000476d2b: cmp byte ptr [rax + 0x29], cl; ret 0x8d49; 
0x00000000004122ff: cmp byte ptr [rax + 0x29], cl; ret; 
0x0000000000412da9: cmp byte ptr [rax + 0x39], cl; ret 0x2175; 
0x00000000004016eb: cmp byte ptr [rax + 0x39], cl; ret 0x4f76; 
0x000000000041039e: cmp byte ptr [rax + 0x39], cl; ret; 
0x000000000042b387: cmp byte ptr [rax + 1], cl; clc; ret; 
0x0000000000470505: cmp byte ptr [rax + 1], cl; ret; 
0x000000000046ff90: cmp byte ptr [rax + 1], cl; ror byte ptr [rax + 0x39], cl; ret 0xf48; 
0x0000000000452aa4: cmp byte ptr [rax - 0x7d], cl; ret 0x4804; 
0x000000000042b376: cmp byte ptr [rax], ah; ret; 
0x00000000004400f0: cmp byte ptr [rax], dh; cmovne rax, rdx; ret; 
0x000000000042b366: cmp byte ptr [rax], dl; ret; 
0x000000000042b365: cmp byte ptr [rax], r10b; ret; 
0x000000000042b375: cmp byte ptr [rax], r12b; ret; 
0x00000000004400ef: cmp byte ptr [rax], sil; cmovne rax, rdx; ret; 
0x000000000048ab88: cmp byte ptr [rbx + 0x41], bl; pop rsi; ret; 
0x00000000004160c0: cmp byte ptr [rbx + 0x5d], bl; ret; 
0x00000000004b3e7b: cmp byte ptr [rbx + rax*4 + 7], al; or rax, 0x1370303; ret; 
0x00000000004b3e13: cmp byte ptr [rbx + rax*4 + 7], al; or rax, 0x34b0303; ret; 
0x00000000004b3e47: cmp byte ptr [rbx + rax*4 + 7], al; or rax, 0x35b0303; ret; 
0x0000000000480026: cmp byte ptr [rcx - 0x7d], cl; ret 0x4908; 
0x00000000004491b1: cmp byte ptr [rcx], al; add byte ptr [rax - 0x77], cl; ret 0x8b48; 
0x000000000042d780: cmp byte ptr [rdi], dl; ret 0x2373; 
0x000000000042d769: cmp byte ptr [rdi], dl; ret 0x3a73; 
0x000000000042d752: cmp byte ptr [rdi], dl; ret 0x5173; 
0x000000000042c20e: cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042cc6d: cmp byte ptr [rdi], dl; ret; 
0x0000000000488c62: cmp cl, byte ptr [rax - 0x7d]; ret 0xf08; 
0x0000000000404867: cmp cl, ch; ret 0xfffb; 
0x000000000040eaa1: cmp dword ptr [rax - 0x39], ecx; ret; 
0x00000000004347a8: cmp dword ptr [rbx - 1], -1; dec dword ptr [rax - 0x7f]; ret 0x80; 
0x0000000000488f0d: cmp dword ptr [rbx], esp; add byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000045e733: cmp dword ptr [rip + 0x39480001], ebx; ret; 
0x000000000047f8af: cmp eax, -1; cmove rax, rdx; ret; 
0x000000000044c42f: cmp eax, 0x83482f74; ret; 
0x000000000044c256: cmp eax, 0x83497174; ret; 
0x0000000000473524: cmp eax, 0x89000001; ret 0x8948; 
0x00000000004494d8: cmp eax, 0xfffff001; jae 0x494e0; ret; 
0x000000000044a568: cmp eax, 0xfffff001; jae 0x4a570; ret; 
0x000000000044a598: cmp eax, 0xfffff001; jae 0x4a5a0; ret; 
0x000000000044a5c8: cmp eax, 0xfffff001; jae 0x4a5d0; ret; 
0x000000000044bc7b: cmp eax, 0xfffff001; jae 0x4bc83; ret; 
0x000000000044bca8: cmp eax, 0xfffff001; jae 0x4bcb0; ret; 
0x00000000004754f8: cmp eax, 0xfffff001; jae 0x75500; ret; 
0x0000000000488528: cmp eax, 0xfffff001; jae 0x88530; ret; 
0x000000000044bdea: cmp eax, 4; je 0x4bdf0; ret; 
0x00000000004af2e5: cmp eax, dword ptr [rax]; add al, ch; ret 0xfff7; 
0x000000000044bd86: cmp ebx, 0xa; je 0x4bd8c; ret; 
0x000000000044e8b2: cmp ecx, dword ptr [rax - 0x7d]; ret; 
0x0000000000471e7e: cmp ecx, dword ptr [rdx + 0x4c]; cmove eax, ecx; ret; 
0x0000000000484222: cmp ecx, ecx; ret; 
0x000000000044bd0a: cmp edx, edi; setae al; ret; 
0x00000000004a8d84: cmp esi, ebp; xlatb; ret 0x4e27; 
0x000000000044bd85: cmp r11d, 0xa; je 0x4bd8c; ret; 
0x00000000004494d7: cmp rax, -0xfff; jae 0x494e0; ret; 
0x000000000044a567: cmp rax, -0xfff; jae 0x4a570; ret; 
0x000000000044a597: cmp rax, -0xfff; jae 0x4a5a0; ret; 
0x000000000044a5c7: cmp rax, -0xfff; jae 0x4a5d0; ret; 
0x000000000044bc7a: cmp rax, -0xfff; jae 0x4bc83; ret; 
0x000000000044bca7: cmp rax, -0xfff; jae 0x4bcb0; ret; 
0x00000000004754f7: cmp rax, -0xfff; jae 0x75500; ret; 
0x0000000000488527: cmp rax, -0xfff; jae 0x88530; ret; 
0x000000000047f8ae: cmp rax, -1; cmove rax, rdx; ret; 
0x0000000000471e7d: cmp rcx, qword ptr [rdx + 0x4c]; cmove eax, ecx; ret; 
0x000000000044bd09: cmp rdx, rdi; setae al; ret; 
0x000000000042d219: cmpsb byte ptr [rsi], byte ptr [rdi]; add eax, 0xc0310000; ret; 
0x00000000004421f1: dec byte ptr [r8 + 0x29]; ret 0x280f; 
0x00000000004421f2: dec byte ptr [rax + 0x29]; ret 0x280f; 
0x0000000000480cff: dec byte ptr [rax - 0x77]; fisttp word ptr [rax - 0x77]; ret 0x9de8; 
0x00000000004726d0: dec byte ptr [rax - 0x77]; ret; 
0x0000000000480c9d: dec byte ptr [rax - 0x7d]; ret; 
0x000000000044a812: dec byte ptr [rbx + rcx*4 + 0x5f]; or byte ptr [rcx - 0xa], al; ret; 
0x000000000040e446: dec byte ptr [rcx + 0xf]; scasd eax, dword ptr [rdi]; ret; 
0x0000000000456893: dec dword ptr [r8 - 0x7d]; ret 0x8801; 
0x0000000000442332: dec dword ptr [rax + 0x29]; ret 0x280f; 
0x00000000004829c1: dec dword ptr [rax + 0x29]; ret 0x8948; 
0x0000000000482b01: dec dword ptr [rax + 0x29]; ret 0x894c; 
0x000000000041e685: dec dword ptr [rax + 0x29]; ret 0x8d4c; 
0x000000000041120d: dec dword ptr [rax + 0x29]; ret; 
0x000000000041303d: dec dword ptr [rax + 0x39]; ret 0x860f; 
0x00000000004891c9: dec dword ptr [rax + 0x39]; ret 0xf48; 
0x000000000047630b: dec dword ptr [rax + 0x39]; ret; 
0x000000000046eda2: dec dword ptr [rax + 0xf]; add dword ptr [r8 - 0x7d], ecx; ret 0x8502; 
0x00000000004734b9: dec dword ptr [rax + 0xf]; mov ebp, 0xf80148c6; ret; 
0x000000000045afcb: dec dword ptr [rax + 0xf]; scasd eax, dword ptr [rdi]; ret 0x148; 
0x0000000000472821: dec dword ptr [rax + 1]; ret; 
0x000000000044945f: dec dword ptr [rax - 0x39]; ret 0; 
0x0000000000449404: dec dword ptr [rax - 0x39]; ret 0x8000; 
0x000000000045dce0: dec dword ptr [rax - 0x39]; ret 0xac20; 
0x0000000000449377: dec dword ptr [rax - 0x39]; ret 0xff80; 
0x0000000000468976: dec dword ptr [rax - 0x39]; ret 0xffa0; 
0x00000000004496f5: dec dword ptr [rax - 0x39]; ret 0xffc0; 
0x00000000004492cc: dec dword ptr [rax - 0x39]; ret 0xffff; 
0x0000000000403063: dec dword ptr [rax - 0x39]; ret; 
0x00000000004567a4: dec dword ptr [rax - 0x73]; add cl, byte ptr [rax + 0x39]; ret; 
0x000000000048c202: dec dword ptr [rax - 0x75]; add byte ptr [rcx + 1], cl; ret 0xef89; 
0x000000000041f784: dec dword ptr [rax - 0x77]; add eax, 0x29a0d4; ret; 
0x00000000004758de: dec dword ptr [rax - 0x77]; ret 0x1477; 
0x000000000041ef7f: dec dword ptr [rax - 0x77]; ret 0x2948; 
0x000000000046dcf6: dec dword ptr [rax - 0x77]; ret 0x29e8; 
0x000000000042432b: dec dword ptr [rax - 0x77]; ret 0x5ae9; 
0x000000000047583d: dec dword ptr [rax - 0x77]; ret 0x7577; 
0x000000000041ecfc: dec dword ptr [rax - 0x77]; ret 0x8548; 
0x0000000000423687: dec dword ptr [rax - 0x77]; ret 0x854d; 
0x000000000045adf2: dec dword ptr [rax - 0x77]; ret 0x870f; 
0x000000000046d988: dec dword ptr [rax - 0x77]; ret 0x8b44; 
0x00000000004491f6: dec dword ptr [rax - 0x77]; ret 0x8b48; 
0x000000000047866c: dec dword ptr [rax - 0x77]; ret 0x8d4c; 
0x0000000000423da6: dec dword ptr [rax - 0x77]; ret 0x90e9; 
0x000000000044a525: dec dword ptr [rax - 0x77]; ret 0xa076; 
0x0000000000449351: dec dword ptr [rax - 0x77]; ret 0xa0e9; 
0x000000000047cc87: dec dword ptr [rax - 0x77]; ret 0xa8e8; 
0x00000000004567bd: dec dword ptr [rax - 0x77]; ret 0xb2eb; 
0x000000000044933d: dec dword ptr [rax - 0x77]; ret 0xb4e9; 
0x00000000004241b8: dec dword ptr [rax - 0x77]; ret 0xb60f; 
0x000000000046ba99: dec dword ptr [rax - 0x77]; ret 0xb848; 
0x0000000000475e1c: dec dword ptr [rax - 0x77]; ret 0xefeb; 
0x000000000046fd3a: dec dword ptr [rax - 0x77]; ret 0xf41; 
0x000000000040587f: dec dword ptr [rax - 0x77]; ret 0xf748; 
0x0000000000401acd: dec dword ptr [rax - 0x77]; ret; 
0x000000000048755c: dec dword ptr [rax - 0x7d]; call 0x7c93bd65; ret; 
0x00000000004545c1: dec dword ptr [rax - 0x7d]; ret 0x4801; 
0x0000000000452cab: dec dword ptr [rax - 0x7d]; ret 0x4804; 
0x0000000000405dcb: dec dword ptr [rax - 0x7d]; ret 0x4901; 
0x0000000000456894: dec dword ptr [rax - 0x7d]; ret 0x8801; 
0x000000000048dff7: dec dword ptr [rax - 0x7d]; ret 0xe902; 
0x00000000004047cf: dec dword ptr [rax - 0x7d]; ret; 
0x0000000000459398: dec dword ptr [rax - 0x7d]; rol byte ptr [rcx], 0x83; ret 0x4801; 
0x00000000004347ac: dec dword ptr [rax - 0x7f]; ret 0x80; 
0x000000000044b5b0: dec dword ptr [rax - 0x7f]; ret; 
0x0000000000477037: dec dword ptr [rax - 9]; fmul dword ptr [rcx + 0x21]; ret 0x394c; 
0x000000000048e9f4: dec dword ptr [rax - 9]; ret; 
0x0000000000461be4: dec dword ptr [rbp + 0x63]; ret 0x20be; 
0x0000000000467e0d: dec dword ptr [rbp - 0x77]; ret 0x894c; 
0x000000000045c436: dec dword ptr [rbp - 0x7b]; dec dword ptr [rax - 0x77]; ret; 
0x0000000000423fe3: dec dword ptr [rbp - 0x7b]; test byte ptr [rdi], 0x84; ret; 
0x0000000000400e44: dec dword ptr [rbx + 0x2bafb115]; add bh, dh; ret 0; 
0x0000000000422cfd: dec dword ptr [rbx + 0x90c2454]; ret 0xbae9; 
0x000000000045cb34: dec dword ptr [rbx + rcx*4 + 0x15]; in al, dx; ret 0x25; 
0x0000000000471b28: dec dword ptr [rbx - 0x14f3db8c]; ret 0x5590; 
0x000000000046d885: dec dword ptr [rbx - 0x177cefbe]; xor byte ptr [rbx - 0x78f0f608], al; ret; 
0x0000000000461b3f: dec dword ptr [rcx + 0x39]; ret 0x850f; 
0x000000000047c329: dec dword ptr [rcx + 0x39]; ret 0x860f; 
0x0000000000460423: dec dword ptr [rcx + 0x39]; ret; 
0x000000000046ae27: dec dword ptr [rcx + 0x63]; ret 0x8545; 
0x000000000046b2a5: dec dword ptr [rcx + 0x63]; ret; 
0x0000000000489427: dec dword ptr [rcx - 0x73]; or byte ptr [rax - 0x77], r9b; ret; 
0x000000000040e2bf: dec dword ptr [rcx - 0x75]; add byte ptr [r8 - 0x7d], r9b; ret; 
0x000000000047c670: dec dword ptr [rcx - 0x77]; ret 0x13e9; 
0x0000000000404811: dec dword ptr [rcx - 0x77]; ret 0x149; 
0x000000000047d010: dec dword ptr [rcx - 0x77]; ret 0x9be9; 
0x000000000046adf4: dec dword ptr [rcx - 0x77]; ret 0xff31; 
0x0000000000460387: dec dword ptr [rcx - 0x77]; ret; 
0x000000000041c1b6: dec dword ptr [rcx - 0x7b]; ret; 
0x000000000046018f: dec dword ptr [rcx - 0x7d]; ret; 
0x000000000046068b: dec dword ptr [rdi + rcx + 0x48]; ret 0x958b; 
0x00000000004531af: dec dword ptr [rdi]; test byte ptr [rsi - 0x8fffffc], cl; ret 0; 
0x000000000045f96f: dec dword ptr [rdi]; test dword ptr [rsi - 0x16000007], esi; ret; 
0x000000000042128c: dec dword ptr [rdi]; xchg eax, ebp; ret 0xd020; 
0x0000000000442331: dec qword ptr [r8 + 0x29]; ret 0x280f; 
0x00000000004736a2: div byte ptr [rbp + 4]; xor rax, rax; ret; 
0x00000000004481b8: div ecx; mov eax, eax; ret; 
0x0000000000480d08: div edi; dec dword ptr [rax - 0x77]; ret; 
0x000000000040f7b7: fadd dword ptr [rax]; add byte ptr [rax], al; ret; 
0x0000000000465e43: fadd qword ptr [rcx + rcx*4 - 0x38]; ret; 
0x000000000048d119: fcomi st(3); ret; 
0x000000000044a3c1: fcomp dword ptr [rbx + 0x5d]; ret; 
0x00000000004a98f9: fcomp dword ptr [rdx + 0x21]; ret; 
0x000000000047281f: fdiv st(0), st(0); dec dword ptr [rax + 1]; ret; 
0x000000000048ad69: fdiv st(3); ret; 
0x00000000004464f8: fdivr st(7); ret; 
0x000000000040f058: fiadd dword ptr [rbp + 0x450f48c9]; ret 0x8348; 
0x00000000004596b5: fiadd dword ptr [rbx]; add byte ptr [rax + 0x63], cl; ret; 
0x0000000000488075: fidivr dword ptr [rax + 1]; ret; 
0x0000000000464c32: fild word ptr [rbp - 0x77]; ret 0x8b4c; 
0x0000000000419c2c: fimul dword ptr [rax + 0x21]; ret 0x8948; 
0x0000000000455359: fimul dword ptr [rax + 0x29]; ret 0x8348; 
0x0000000000480cf7: fimul dword ptr [rax + 0x39]; ret 0x7472; 
0x00000000004657cd: fimul dword ptr [rax + 0x39]; ret 0xe57f; 
0x000000000042a3a6: fimul dword ptr [rax + rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000450cef: fimul word ptr [rax + 1]; ret; 
0x0000000000483351: fisttp dword ptr [rax - 0x77]; ret; 
0x000000000046661c: fisttp dword ptr [rax - 0x7b]; rol byte ptr [rcx + 0xf], 0x94; ret; 
0x000000000047f4c6: fisttp dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ret; 
0x0000000000477f3e: fisttp dword ptr [rax - 0x7d]; ret; 
0x000000000048336b: fisttp dword ptr [rcx - 0x77]; ret 0x8b4a; 
0x0000000000455037: fisttp dword ptr [rcx - 0x7d]; ret; 
0x0000000000420e7b: fisttp dword ptr [rdi]; xchg eax, ebp; ret 0xd020; 
0x000000000047d5e4: fisttp dword ptr [rdi]; xchg eax, ebp; ret; 
0x0000000000405dee: fisttp qword ptr [rax - 0x7d]; ret 0x4401; 
0x0000000000480d02: fisttp word ptr [rax - 0x77]; ret 0x9de8; 
0x0000000000401933: fisttp word ptr [rax - 0x7d]; ret; 
0x000000000043f23d: fisttp word ptr [rip - 0x7cb80000]; ret 0x4910; 
0x000000000041b9bf: fisubr word ptr [rcx]; add byte ptr [rax + 0x39], cl; ret; 
0x000000000042b181: fldenv [rsi + 0xf]; xlatb; ret; 
0x000000000041ad2f: fmul dword ptr [rax + 0x39]; ret; 
0x0000000000412108: fmul dword ptr [rax - 0x77]; ret; 
0x000000000040e0d1: fmul dword ptr [rax - 0x7d]; ret 0x4801; 
0x0000000000489974: fmul dword ptr [rbx + rcx*4 + 0x34]; ret 0xf41; 
0x000000000047703a: fmul dword ptr [rcx + 0x21]; ret 0x394c; 
0x0000000000486c02: fmul qword ptr [rax - 0x77]; ret; 
0x0000000000424999: fmul qword ptr [rcx - 0x7d]; ret 0x7f10; 
0x0000000000438ebf: fmul qword ptr [rcx - 0x7d]; ret 0xf10; 
0x000000000040db49: fpatan; ret; 
0x00000000004a7887: fstp dword ptr [rbx + 0x4a315a58]; ret 0x1b49; 
0x00000000004a7c00: fstp st(0); ret 0xde5d; 
0x00000000004494e8: fsub dword ptr [rcx + rcx*4 + 1]; or rax, 0xffffffffffffffff; ret; 
0x0000000000449578: fsub dword ptr [rcx + rcx*4 + 2]; mov eax, 0xffffffff; ret; 
0x0000000000449828: fsub dword ptr [rcx + rcx*4 + 2]; mov rax, -1; ret; 
0x0000000000441064: fsub dword ptr [rsi + 0xf]; xlatb; ret; 
0x000000000044025c: fsub qword ptr [rsi + 0xf]; xlatb; ret; 
0x0000000000449b24: fsubr st(3); ret 0xf66; 
0x000000000047a171: fucomi st(3); ret 0x1f0f; 
0x0000000000471ff7: fucomip st(0); ret; 
0x000000000048b411: fucomip st(1); ret; 
0x0000000000434bea: hlt; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000042f89e: hlt; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000400b86: hlt; ret; 
0x0000000000446007: hlt; sub eax, edx; ret; 
0x000000000049268a: idiv bh; ret; 
0x0000000000450b46: idiv byte ptr [rdx - 1]; cmovs eax, edx; ret; 
0x00000000004524ec: idiv dl; inc dword ptr [rcx - 0x77]; ret; 
0x000000000045dcde: idiv edi; dec dword ptr [rax - 0x39]; ret 0xac20; 
0x000000000046a7c1: idiv edi; dec dword ptr [rax - 0x77]; ret; 
0x0000000000444b61: imul eax, dword ptr [rcx], 0; add dh, dh; ret 0x7502; 
0x0000000000468102: imul eax, dword ptr [rcx], 0xc7480000; ret 0xffe0; 
0x00000000004557d3: imul eax, ebx, 0x8941fffa; ret 0x5be9; 
0x0000000000459117: imul eax; ret; 
0x00000000004049a4: imul edi, edx, -1; dec dword ptr [rax - 0x7d]; ret; 
0x0000000000443fdc: imul esp, dword ptr [rsi + 0xf], 0x74; ret 0xff3; 
0x0000000000440cec: in al, 0x74; or dword ptr [rax - 1], ecx; ret 0xc148; 
0x0000000000434bca: in al, 0xf3; movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000447c7e: in al, 0xf3; ret; 
0x000000000045e3d0: in al, 0xf; lahf; ret; 
0x0000000000434fca: in al, dx; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000045cb38: in al, dx; ret 0x25; 
0x00000000004a7a23: in eax, 0x24; outsd dx, dword ptr es:[rsi]; ret 0x5ae4; 
0x00000000004846c2: in eax, 0x48; mov eax, esi; ret; 
0x00000000004a6cb9: in eax, 0x6a; mov eax, 0x45155e93; ret 0x591c; 
0x0000000000434c4a: in eax, 0xf3; movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000446822: in eax, dx; lea rax, [rcx - 1]; ret; 
0x000000000043504a: in eax, dx; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000446602: in eax, dx; ret; 
0x0000000000446972: in eax, dx; sub rax, 1; ret; 
0x000000000044a82c: inc byte ptr [rbp - 0x60f0be13]; ret 0x8545; 
0x0000000000455034: inc dword ptr [rbp + 0x31]; fisttp dword ptr [rcx - 0x7d]; ret; 
0x000000000048254c: inc dword ptr [rbp - 0x76b08a40]; ret; 
0x0000000000402790: inc dword ptr [rbp - 0x7aa48740]; ror byte ptr [rdi], 0x84; ret; 
0x000000000040d51b: inc dword ptr [rbx - 0x2f7cfe08]; dec dword ptr [rax - 0x7d]; ret; 
0x000000000048e269: inc dword ptr [rbx - 0x38b7f808]; ret 0xffff; 
0x0000000000459790: inc dword ptr [rbx - 0x76be0008]; ret 0x840f; 
0x000000000048c463: inc dword ptr [rbx - 0x7bf0bf1e]; ret; 
0x000000000044810b: inc dword ptr [rbx]; pop rbx; ret; 
0x00000000004600b2: inc dword ptr [rcx + 0x29]; ret 0x8545; 
0x0000000000480eb2: inc dword ptr [rcx + rbp - 0x40]; ret; 
0x00000000004557d6: inc dword ptr [rcx - 0x77]; ret 0x5be9; 
0x0000000000459793: inc dword ptr [rcx - 0x77]; ret 0x840f; 
0x00000000004524ee: inc dword ptr [rcx - 0x77]; ret; 
0x000000000043fa1d: inc dword ptr [rip - 0x7cb80000]; ret 0x4910; 
0x000000000048e042: inc dword ptr [rsi*2 + 0x8b80f]; add byte ptr [rax], al; ret; 
0x000000000045d475: insb byte ptr [rdi], dx; ret 0x4c40; 
0x000000000048fff2: insd dword ptr [rdi], dx; js 0x9006c; ret 0x8b48; 
0x00000000004a98df: insd dword ptr [rdi], dx; pop rbx; ret 0x6f9; 
0x00000000004a7c8d: insd dword ptr [rdi], dx; ret 0xb9b9; 
0x00000000004a8b9f: insd dword ptr [rdi], dx; test eax, 0x7d4c8c5d; ret 0xd8f; 
0x00000000004a9004: int 0x6b; ret; 
0x00000000004024a8: int 0x83; ret 0x8901; 
0x00000000004481b9: int1; mov eax, eax; ret; 
0x0000000000434a3b: int1; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042fe6f: int1; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000445fd7: int1; sub eax, edx; ret; 
0x00000000004a8e2d: iretd; ret 0x8b36; 
0x0000000000438943: ja 0x3893e; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x0000000000444127: ja 0x4412b; ret; 
0x0000000000444143: ja 0x44149; mov dword ptr [rdi], ecx; ret; 
0x0000000000444184: ja 0x4418e; mov qword ptr [rdi], rcx; ret; 
0x0000000000444209: ja 0x4421b; ret; 
0x000000000044425f: ja 0x44275; ret; 
0x00000000004442e1: ja 0x442fb; ret; 
0x0000000000444747: ja 0x4474b; lea rax, [rdi + 2]; ret; 
0x0000000000444899: ja 0x448ab; lea rax, [rdi + 0x10]; ret; 
0x000000000044490f: ja 0x44925; lea rax, [rdi + 0x14]; ret; 
0x0000000000444991: ja 0x449ab; lea rax, [rdi + 0x18]; ret; 
0x0000000000465e42: ja 0x65e20; mov eax, r9d; ret; 
0x00000000004a9324: ja 0xa92a9; ret 0x48f; 
0x000000000041874d: jae 0x18770; movzx eax, byte ptr [rax]; ret; 
0x00000000004494dd: jae 0x494e0; ret; 
0x000000000044a56d: jae 0x4a570; ret; 
0x000000000044a59d: jae 0x4a5a0; ret; 
0x000000000044a5cd: jae 0x4a5d0; ret; 
0x000000000044bc80: jae 0x4bc83; ret; 
0x000000000044bcad: jae 0x4bcb0; ret; 
0x00000000004754fd: jae 0x75500; ret; 
0x000000000047f8fb: jae 0x7f8a1; xor eax, eax; ret; 
0x0000000000488074: jae 0x88050; mov eax, 1; ret; 
0x000000000048852d: jae 0x88530; ret; 
0x00000000004acffa: jae 0xad006; ret; 
0x0000000000446c8d: jb 0x46c91; mov byte ptr [rdi], cl; ret; 
0x0000000000446e94: jb 0x46e99; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000447c95: jb 0x47c99; mov byte ptr [rdi], cl; ret; 
0x000000000042b386: jbe 0x2b3c0; add rax, rdi; ret; 
0x000000000042b396: jbe 0x2b3c0; lea rax, [rdi + rax + 0x10]; ret; 
0x000000000042b3a6: jbe 0x2b3c0; lea rax, [rdi + rax + 0x20]; ret; 
0x000000000042b3b6: jbe 0x2b3c0; lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000455f22: jbe 0x55f1a; ret; 
0x00000000004122fd: je 0x12323; cmp byte ptr [rax + 0x29], cl; ret; 
0x000000000041667b: je 0x165f8; mov eax, 0xffffffff; ret; 
0x000000000041686b: je 0x167e8; mov eax, 0xffffffff; ret; 
0x0000000000418f63: je 0x18f63; dec dword ptr [rax - 0x77]; ret; 
0x0000000000422d33: je 0x22d40; lea rax, [rdx - 0x10]; ret; 
0x0000000000440924: je 0x4092a; bsf eax, edx; ret; 
0x00000000004409cd: je 0x409e0; bsf rax, rdx; ret; 
0x000000000044864e: je 0x48658; xor eax, eax; ret; 
0x000000000044902e: je 0x4902b; dec dword ptr [rax - 0x77]; ret; 
0x000000000044bd89: je 0x4bd8c; ret; 
0x000000000044bded: je 0x4bdf0; ret; 
0x0000000000468c8c: je 0x68cb2; and byte ptr [rax + 1], cl; ret; 
0x0000000000471b2a: je 0x71b50; or al, 0xeb; ret 0x5590; 
0x00000000004737ac: je 0x737d0; bsf rax, rdx; ret; 
0x000000000047373c: je 0x737e0; bsf rax, rdx; ret; 
0x0000000000474800: je 0x74820; ret; 
0x0000000000474815: je 0x74830; add rax, 2; ret; 
0x0000000000480ead: je 0x80df6; sub eax, r8d; ret; 
0x00000000004854e8: je 0x8550e; or byte ptr [rax + 1], cl; ret; 
0x000000000048aaed: je 0x8ab13; adc byte ptr [rcx - 0x77], cl; ret; 
0x000000000048d088: je 0x8d06c; add rsp, 0x18; ret; 
0x000000000048d071: je 0x8d090; add rsp, 0x18; ret; 
0x000000000048d159: je 0x8d160; mov qword ptr [rdi + rsi*8], rdx; ret; 
0x00000000004a7a48: je 0xa7a0f; xor al, 0xd8; ret; 
0x00000000004a8782: je 0xa8748; ret 0xacfc; 
0x0000000000416a42: jg 0x16a7c; add byte ptr [rcx + rcx - 0xd], dh; ret; 
0x000000000042fa59: jg 0x2faaa; ret; 
0x000000000042fadf: jg 0x2fb28; ret; 
0x000000000042fc59: jg 0x2fcaa; ret 0x894c; 
0x000000000042fcdf: jg 0x2fd28; ret 0x894c; 
0x0000000000432429: jg 0x3247a; ret; 
0x00000000004324af: jg 0x324f8; ret; 
0x0000000000432629: jg 0x3267a; ret 0x894c; 
0x00000000004326af: jg 0x326f8; ret 0x894c; 
0x0000000000434a8f: jg 0x34ad8; ret 0xff2; 
0x0000000000434b1f: jg 0x34b68; ret; 
0x00000000004351cc: jg 0x351d5; ret; 
0x0000000000435226: jg 0x35237; ret; 
0x0000000000435296: jg 0x352a7; ret; 
0x0000000000435306: jg 0x35317; ret; 
0x0000000000435301: jg 0x3534a; or eax, 0xf7f0ff3; ret; 
0x0000000000435376: jg 0x35387; ret; 
0x00000000004353e6: jg 0x353f7; ret; 
0x0000000000435456: jg 0x35467; ret; 
0x00000000004354c6: jg 0x354d7; ret; 
0x0000000000435536: jg 0x35547; ret; 
0x00000000004355a6: jg 0x355b7; ret; 
0x0000000000435616: jg 0x35627; ret; 
0x0000000000435686: jg 0x35697; ret; 
0x0000000000435681: jg 0x356ca; add eax, 0xf7f0ff3; ret; 
0x00000000004356f6: jg 0x35707; ret; 
0x0000000000435766: jg 0x35777; ret; 
0x00000000004357d6: jg 0x357e7; ret; 
0x0000000000435846: jg 0x35857; ret; 
0x00000000004375af: jg 0x375f8; ret 0xff2; 
0x000000000043763f: jg 0x37688; ret; 
0x0000000000437cec: jg 0x37cf5; ret; 
0x0000000000437d46: jg 0x37d57; ret; 
0x0000000000437db6: jg 0x37dc7; ret; 
0x0000000000437e26: jg 0x37e37; ret; 
0x0000000000437e21: jg 0x37e6a; or eax, 0xf7f0ff3; ret; 
0x0000000000437e96: jg 0x37ea7; ret; 
0x0000000000437f06: jg 0x37f17; ret; 
0x0000000000437f76: jg 0x37f87; ret; 
0x0000000000437fe6: jg 0x37ff7; ret; 
0x0000000000438056: jg 0x38067; ret; 
0x00000000004380c6: jg 0x380d7; ret; 
0x0000000000438136: jg 0x38147; ret; 
0x00000000004381a6: jg 0x381b7; ret; 
0x00000000004381a1: jg 0x381ea; add eax, 0xf7f0ff3; ret; 
0x0000000000438216: jg 0x38227; ret; 
0x0000000000438286: jg 0x38297; ret; 
0x00000000004382f6: jg 0x38307; ret; 
0x0000000000438366: jg 0x38377; ret; 
0x00000000004384c4: jg 0x384cd; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x00000000004384d8: jg 0x384e1; vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x000000000043894a: jg 0x38944; ret; 
0x00000000004441f6: jg 0x441ff; ret; 
0x0000000000444206: jg 0x4420f; mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000044421a: jg 0x44223; mov word ptr [rdi + 0x10], cx; ret; 
0x0000000000444239: jg 0x44242; mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000444249: jg 0x44252; mov dword ptr [rdi + 0x10], ecx; ret; 
0x000000000044427a: jg 0x44283; mov qword ptr [rdi + 0xe], rcx; ret; 
0x000000000044429a: jg 0x442a3; mov qword ptr [rdi + 0xf], rcx; ret; 
0x00000000004442ba: jg 0x442c3; mov qword ptr [rdi + 0x10], rcx; ret; 
0x000000000044435b: jg 0x44364; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x000000000044437b: jg 0x44384; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x000000000044439b: jg 0x443a4; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x00000000004443bb: jg 0x443c4; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000444886: jg 0x4488f; lea rax, [rdi + 0xf]; ret; 
0x0000000000444a0f: jg 0x44a68; or eax, 0x1c478d48; ret; 
0x0000000000446c57: jg 0x46c60; vmovdqu xmmword ptr [rsi - 0x10], xmm0; ret; 
0x0000000000446c4d: jg 0x46c66; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x00000000004470e4: jg 0x47116; movups xmmword ptr [r11], xmm8; ret; 
0x00000000004471b2: jg 0x471e4; movups xmmword ptr [r11], xmm8; ret; 
0x000000000044728a: jg 0x47293; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x000000000044741b: jg 0x47440; vzeroupper; ret; 
0x0000000000447415: jg 0x47458; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x00000000004474c2: jg 0x474c7; vzeroupper; ret; 
0x000000000044754e: jg 0x47573; vzeroupper; ret; 
0x0000000000447548: jg 0x4758b; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x00000000004475de: jg 0x475e3; vzeroupper; ret; 
0x00000000004476f2: jg 0x476fb; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x00000000004478d6: jg 0x478fb; vzeroupper; ret; 
0x000000000044799c: jg 0x479a1; vzeroupper; ret; 
0x0000000000447a6f: jg 0x47a94; vzeroupper; ret; 
0x0000000000447b42: jg 0x47b47; vzeroupper; ret; 
0x0000000000447bac: jg 0x47bb5; ret; 
0x0000000000447bfc: jg 0x47c05; ret; 
0x0000000000447d04: jg 0x47d0d; vzeroupper; ret; 
0x0000000000447d54: jg 0x47d5d; vzeroupper; ret; 
0x0000000000447e13: jg 0x47e1c; vzeroupper; ret; 
0x0000000000447e91: jg 0x47e9a; vzeroupper; ret; 
0x0000000000447ef1: jg 0x47efa; vzeroupper; ret; 
0x0000000000447fdb: jg 0x47fe4; vzeroupper; ret; 
0x0000000000447fe9: jg 0x47ff2; vzeroupper; ret; 
0x0000000000448040: jg 0x4807b; ret 0x2b77; 
0x0000000000454038: jg 0x53fc3; ret 0xdb76; 
0x000000000045f032: jg 0x5f043; test byte ptr [rip - 0x7c000011], al; ret; 
0x0000000000469602: jg 0x69613; test byte ptr [rip - 0x7c000003], dl; ret; 
0x000000000046aa7a: jg 0x6aa8b; test byte ptr [rbp - 0x7c000018], bl; ret; 
0x000000000046ab77: jg 0x6ab88; test byte ptr [rax - 0x7c000019], ah; ret; 
0x000000000048d4d2: jge 0x8d4cc; leave; ret; 
0x000000000048d79c: jge 0x8d796; leave; ret; 
0x000000000048dad7: jge 0x8dad1; leave; ret; 
0x0000000000416f12: jl 0x16f29; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000041e95b: jl 0x1e953; ret 0x7508; 
0x0000000000438444: jl 0x3848e; adc dword ptr [rcx - 1], edi; ret; 
0x0000000000438480: jl 0x384ca; adc dword ptr [rcx - 1], ebx; ret; 
0x000000000043867e: jl 0x386c8; adc dword ptr [rcx - 1], edi; ret; 
0x00000000004387e5: jl 0x3882f; adc dword ptr [rcx + 7], edi; ret; 
0x0000000000438947: jl 0x38991; adc dword ptr [rdi - 8], edi; ret; 
0x0000000000446c0c: jl 0x46c56; adc dword ptr [rsi - 1], edx; ret; 
0x0000000000446c2d: jl 0x46c77; adc dword ptr [rsi - 1], edx; ret; 
0x0000000000446c40: jl 0x46c8a; adc dword ptr [rsi - 1], edx; ret; 
0x0000000000446d15: jl 0x46d5f; adc dword ptr [rsi - 1], edx; ret; 
0x0000000000446d6d: jl 0x46db7; adc dword ptr [rsi + 3], edx; ret; 
0x0000000000446e0a: jl 0x46e54; adc dword ptr [rsi + 7], edx; ret; 
0x0000000000404aa6: jl 0x4acc; sub byte ptr [rax - 0x7d], cl; ret; 
0x0000000000455f1d: jl 0x55f43; add byte ptr [rsi + rsi*2 - 0xa], sil; ret; 
0x000000000045664d: jl 0x56673; or al, 0xe9; ret; 
0x000000000045715d: jl 0x57183; add byte ptr [rdx + rdi*2 - 0xa], sil; ret; 
0x000000000045b147: jl 0x5b16d; and byte ptr [rax + 1], cl; ret; 
0x000000000045b906: jl 0x5b92c; xor byte ptr [rax + 0x39], cl; ret 0x8d48; 
0x00000000004689b5: jl 0x689db; adc byte ptr [rax - 0x7d], cl; ret; 
0x000000000047b565: jl 0x7b58b; or byte ptr [rax - 0x7d], cl; ret 0x101; 
0x000000000040d498: jl 0xd4be; or byte ptr [rcx - 0x77], cl; ret 0x8b4c; 
0x0000000000446ae1: jle 0x46b18; movsxd rax, ecx; ret; 
0x0000000000447414: jle 0x47495; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x0000000000447547: jle 0x475c8; movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x00000000004179ac: jne 0x179a0; lea eax, [rdx + rdi]; ret; 
0x0000000000418ecc: jne 0x18ecc; dec dword ptr [rax - 0x77]; ret; 
0x0000000000422aaa: jne 0x22a2f; ret; 
0x0000000000422db7: jne 0x22da0; sub rax, 0x10; ret; 
0x000000000042b337: jne 0x2b390; xor eax, eax; ret; 
0x000000000042b307: jne 0x2b3b0; xor eax, eax; ret; 
0x000000000042bfe4: jne 0x2bef0; ret; 
0x000000000042beea: jne 0x2bef0; vzeroupper; ret; 
0x000000000042d197: jne 0x2d7c3; xor eax, eax; ret; 
0x000000000042d01b: jne 0x2d7cf; xor eax, eax; ret; 
0x0000000000444c10: jne 0x44b00; lea rax, [rdi + 0xb]; ret; 
0x0000000000444bca: jne 0x44b00; lea rax, [rdi + 0xf]; ret; 
0x0000000000444b75: jne 0x44b00; lea rax, [rdi + 3]; ret; 
0x0000000000444b47: jne 0x44b00; lea rax, [rdi + 7]; ret; 
0x0000000000444c56: jne 0x44d20; lea rax, [rdi + 7]; ret; 
0x00000000004462d4: jne 0x464e0; xor eax, eax; ret; 
0x00000000004464d9: jne 0x464f5; xor eax, eax; ret; 
0x0000000000446601: jne 0x465f0; ret; 
0x00000000004466b1: jne 0x466a0; ret; 
0x0000000000446821: jne 0x46810; lea rax, [rcx - 1]; ret; 
0x0000000000446971: jne 0x46960; sub rax, 1; ret; 
0x0000000000447de4: jne 0x47dc7; vzeroupper; ret; 
0x0000000000447fa7: jne 0x47f82; vzeroupper; ret; 
0x0000000000449537: jne 0x49549; add rsp, 0x28; ret; 
0x0000000000449655: jne 0x49709; add rsp, 0x68; ret; 
0x0000000000449767: jne 0x497ab; add rsp, 0x58; ret; 
0x00000000004499e8: jne 0x49a99; add rsp, 0x78; ret; 
0x0000000000449af7: jne 0x49b43; add rsp, 0x68; ret; 
0x000000000044a466: jne 0x4a477; add rsp, 0x28; ret; 
0x000000000045ac6f: jne 0x5ac76; add rsp, 0x18; ret; 
0x000000000045aeb7: jne 0x5af03; add rsp, 0x148; ret; 
0x00000000004688b2: jne 0x688bc; add rsp, 0xd8; ret; 
0x0000000000471bec: jne 0x71be0; lea eax, [rdx + rdi]; ret; 
0x00000000004736a3: jne 0x736a9; xor rax, rax; ret; 
0x0000000000474363: jne 0x74369; xor rax, rax; ret; 
0x000000000047566a: jne 0x75729; add rsp, 0x78; ret; 
0x000000000047577c: jne 0x757c3; add rsp, 0x58; ret; 
0x00000000004758ae: jne 0x758cb; add rsp, 0x38; ret; 
0x000000000047e68a: jne 0x7e62b; mov eax, dword ptr [rdx + 4]; ret; 
0x000000000047f317: jne 0x7f328; mov rax, qword ptr [rip + 0x23d090]; ret; 
0x0000000000481cf5: jne 0x81d23; add rsp, 0x38; ret; 
0x0000000000481db5: jne 0x81dde; add rsp, 0x68; ret; 
0x0000000000481f16: jne 0x81f4e; add rsp, 0x78; ret; 
0x00000000004821e5: jne 0x8220e; add rsp, 0x68; ret; 
0x0000000000484221: jne 0x8425e; leave; ret; 
0x00000000004846c1: jne 0x846a8; mov rax, rsi; ret; 
0x0000000000484745: jne 0x84720; mov rax, rsi; ret; 
0x0000000000484ecd: jne 0x84ed4; add rsp, 0x38; ret; 
0x0000000000484fb0: jne 0x84fc4; add rsp, 0x38; ret; 
0x000000000048777b: jne 0x8777f; pop rbx; ret; 
0x000000000048830b: jne 0x8831c; add rsp, 0x38; ret; 
0x000000000048aa30: jne 0x8a960; add rsp, 0x38; ret; 
0x000000000048aed1: jne 0x8af08; mov rax, qword ptr [rsi + 0xb0]; ret; 
0x000000000048aee9: jne 0x8af08; xor eax, eax; ret; 
0x000000000048d100: jne 0x8d11c; mov rax, qword ptr [rax]; ret; 
0x000000000048d16f: jne 0x8d175; mov qword ptr [rax], rdx; ret; 
0x000000000048e044: jne 0x8e055; mov eax, 8; ret; 
0x000000000048e06f: jne 0x8e098; mov rax, qword ptr [rsi + 0x10]; ret; 
0x000000000048e089: jne 0x8e09e; xor eax, eax; ret; 
0x000000000048eecf: jne 0x8eef8; mov rax, qword ptr [rsi + 0x10]; ret; 
0x000000000048eee9: jne 0x8eefe; xor eax, eax; ret; 
0x000000000048f959: jne 0x8f978; xor eax, eax; ret; 
0x00000000004900b5: jne 0x90098; pop rbx; ret; 
0x000000000040dc3b: jne 0xdc5c; add rsp, 0x118; ret; 
0x000000000040f7b2: jne 0xf7bc; add rsp, 0xd8; ret; 
0x0000000000438440: jno 0x38440; vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000438946: jno 0x389c4; adc qword ptr [rdi - 8], rdi; ret; 
0x0000000000419161: jnp 0x19169; sub al, byte ptr [rax]; ret; 
0x0000000000468974: jnp 0x6896f; dec dword ptr [rax - 0x39]; ret 0xffa0; 
0x00000000004a7765: jnp 0xa7720; ret; 
0x00000000004243ef: jns 0x243f1; add byte ptr [rsi + rax*8 - 0xd], dh; ret; 
0x0000000000438447: jns 0x38448; ret; 
0x0000000000438681: jns 0x38682; ret; 
0x00000000004387e8: jns 0x387f1; ret; 
0x0000000000478ae0: jns 0x78ada; dec dword ptr [rax - 0x77]; ret; 
0x00000000004a686e: jns 0xa6802; ret 0xf869; 
0x0000000000404498: jo 0x4482; ret 0x1bb; 
0x000000000044a20d: jo 0x4a20c; dec dword ptr [rax - 0x77]; ret; 
0x000000000044bfc2: jo 0x4bfe4; ret; 
0x0000000000470a1a: jo 0x70a2c; mov qword ptr [rax + 0x40], rcx; ret; 
0x00000000004a78e4: jo 0xa7957; mov ebp, 0xfb67d10d; ret; 
0x00000000004ae934: jo 0xae939; ret 0xa01; 
0x0000000000457162: jp 0x5715a; ret; 
0x0000000000478a0a: jp 0x78a04; dec dword ptr [rax - 0x7d]; ret; 
0x00000000004718b9: js 0x718eb; add byte ptr [rdx + rax - 0xd], dh; ret; 
0x000000000047bbf2: js 0x7bc02; pop rbx; ret; 
0x000000000048fff3: js 0x9006c; ret 0x8b48; 
0x00000000004a8da3: lahf; mov dh, 0xc7; ret 0xe71f; 
0x000000000047e68b: lahf; mov eax, dword ptr [rdx + 4]; ret; 
0x0000000000418c6f: lahf; ret 0x3949; 
0x0000000000418d22: lahf; ret 0x48e9; 
0x000000000044a831: lahf; ret 0x8545; 
0x00000000004a65fd: lahf; ret 0x871e; 
0x0000000000448039: lahf; ret 0xea81; 
0x000000000048c6e1: lahf; ret 0xf45; 
0x000000000044a97b: lahf; ret; 
0x000000000043fe0d: lar eax, word ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000411c5b: lcall [rbx + 0x5d]; ret; 
0x000000000047fcb6: lcall [rbx + 0x64]; mov eax, dword ptr [rax]; ret; 
0x00000000004349a6: lddqu xmm0, xmmword ptr [rsi - 0x10]; movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x00000000004351c6: lddqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x00000000004179bb: lea eax, [r8 - 1]; ret; 
0x000000000048addc: lea eax, [rax + 8]; mov qword ptr [r10], r8; ret; 
0x000000000042b364: lea eax, [rax + rdi + 0x10]; ret; 
0x000000000042b374: lea eax, [rax + rdi + 0x20]; ret; 
0x000000000042b344: lea eax, [rax + rdi - 0x10]; ret; 
0x00000000004179bc: lea eax, [rax - 1]; ret; 
0x00000000004733cd: lea eax, [rcx + rsi]; ret; 
0x0000000000446824: lea eax, [rcx - 1]; ret; 
0x000000000044489c: lea eax, [rdi + 0x10]; ret; 
0x00000000004448b1: lea eax, [rdi + 0x11]; ret; 
0x00000000004448cf: lea eax, [rdi + 0x12]; ret; 
0x00000000004448ef: lea eax, [rdi + 0x13]; ret; 
0x0000000000444912: lea eax, [rdi + 0x14]; ret; 
0x0000000000444931: lea eax, [rdi + 0x15]; ret; 
0x0000000000444951: lea eax, [rdi + 0x16]; ret; 
0x0000000000444971: lea eax, [rdi + 0x17]; ret; 
0x0000000000444994: lea eax, [rdi + 0x18]; ret; 
0x00000000004449b9: lea eax, [rdi + 0x19]; ret; 
0x00000000004449d7: lea eax, [rdi + 0x1a]; ret; 
0x00000000004449f7: lea eax, [rdi + 0x1b]; ret; 
0x0000000000444a13: lea eax, [rdi + 0x1c]; ret; 
0x0000000000444a33: lea eax, [rdi + 0x1d]; ret; 
0x0000000000444a53: lea eax, [rdi + 0x1e]; ret; 
0x0000000000444a73: lea eax, [rdi + 0x1f]; ret; 
0x00000000004447ed: lea eax, [rdi + 0xa]; ret; 
0x000000000044480d: lea eax, [rdi + 0xb]; ret; 
0x000000000044482f: lea eax, [rdi + 0xc]; ret; 
0x000000000044484f: lea eax, [rdi + 0xd]; ret; 
0x000000000044486f: lea eax, [rdi + 0xe]; ret; 
0x0000000000444889: lea eax, [rdi + 0xf]; ret; 
0x0000000000444737: lea eax, [rdi + 1]; ret; 
0x000000000044474a: lea eax, [rdi + 2]; ret; 
0x0000000000444755: lea eax, [rdi + 3]; ret; 
0x0000000000444768: lea eax, [rdi + 4]; ret; 
0x000000000044477d: lea eax, [rdi + 5]; ret; 
0x000000000044479b: lea eax, [rdi + 6]; ret; 
0x00000000004447a7: lea eax, [rdi + 7]; ret; 
0x00000000004447ba: lea eax, [rdi + 8]; ret; 
0x00000000004447cf: lea eax, [rdi + 9]; ret; 
0x000000000042b399: lea eax, [rdi + rax + 0x10]; ret; 
0x000000000042b3a9: lea eax, [rdi + rax + 0x20]; ret; 
0x000000000042b2a3: lea eax, [rdi + rax + 0x30]; ret; 
0x0000000000473615: lea eax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x0000000000440307: lea eax, [rdi + rax]; ret; 
0x0000000000446b7a: lea eax, [rdi + rcx]; sub rax, rsi; ret; 
0x00000000004732c9: lea eax, [rdi + rsi]; ret; 
0x0000000000444723: lea eax, [rdi]; ret; 
0x0000000000443d0d: lea eax, [rdx + 0xa]; ret; 
0x0000000000443d2d: lea eax, [rdx + 0xb]; ret; 
0x0000000000443d4f: lea eax, [rdx + 0xc]; ret; 
0x0000000000443d6f: lea eax, [rdx + 0xd]; ret; 
0x0000000000443d8f: lea eax, [rdx + 0xe]; ret; 
0x0000000000443c1f: lea eax, [rdx + 0xf]; ret; 
0x0000000000443c47: lea eax, [rdx + 1]; ret; 
0x0000000000443c5d: lea eax, [rdx + 2]; ret; 
0x0000000000443c75: lea eax, [rdx + 3]; ret; 
0x0000000000443c8b: lea eax, [rdx + 4]; ret; 
0x0000000000443c9d: lea eax, [rdx + 5]; ret; 
0x0000000000443cbb: lea eax, [rdx + 6]; ret; 
0x0000000000443bc7: lea eax, [rdx + 7]; ret; 
0x0000000000443ccd: lea eax, [rdx + 8]; ret; 
0x0000000000443ced: lea eax, [rdx + 9]; ret; 
0x00000000004179ae: lea eax, [rdx + rdi]; ret; 
0x0000000000422d36: lea eax, [rdx - 0x10]; ret; 
0x0000000000443c35: lea eax, [rdx]; ret; 
0x00000000004247a8: lea eax, [rip + 0x1bb12]; cmove rax, rdx; ret; 
0x0000000000423848: lea eax, [rip + 0x1d0a2]; cmove rax, rdx; ret; 
0x000000000042435f: lea eax, [rip + 0x221ab]; cmove rax, rdx; ret; 
0x00000000004245a8: lea eax, [rip + 0x22862]; cmovne rax, rdx; ret; 
0x000000000042460f: lea eax, [rip + 0x22bab]; cmovne rax, rdx; ret; 
0x00000000004244af: lea eax, [rip + 0x22d1b]; cmovne rax, rdx; ret; 
0x000000000042472e: lea eax, [rip + 0x22ecc]; cmovne rax, rdx; ret; 
0x00000000004245ee: lea eax, [rip + 0x22ffc]; cmovne rax, rdx; ret; 
0x000000000042448e: lea eax, [rip + 0x2316c]; cmovne rax, rdx; ret; 
0x00000000004237cf: lea eax, [rip + 0x231db]; cmovne rax, rdx; ret; 
0x000000000044d351: lea eax, [rip + 0x26cfa9]; ret; 
0x000000000048506f: lea eax, [rip + 0x5b]; cmovne rax, rdx; ret; 
0x00000000004727e8: lea eax, [rip + 0x9f2]; cmove rax, rdx; ret; 
0x00000000004727b8: lea eax, [rip + 0xee2]; cmove rax, rdx; ret; 
0x000000000041f77f: lea eax, [rip - 0xa75]; mov qword ptr [rip + 0x29a0d4], rax; ret; 
0x000000000047f221: lea eax, [rsi + 1]; mov qword ptr [rip + 0x23d185], rax; ret; 
0x0000000000422d46: lea ecx, [rdx - 8]; cmovne rax, rcx; ret; 
0x0000000000473c64: lea edx, [rip - 0x2be2a]; cmove rax, rdx; ret; 
0x000000000046a51f: lea esp, [rax]; add byte ptr [rax + 0x39], cl; ret; 
0x000000000047e1a6: lea esp, [rbx + rdi*8 - 0x76b30001]; ret 0x2948; 
0x000000000048addb: lea rax, [rax + 8]; mov qword ptr [r10], r8; ret; 
0x000000000042b363: lea rax, [rax + rdi + 0x10]; ret; 
0x000000000042b373: lea rax, [rax + rdi + 0x20]; ret; 
0x000000000042b343: lea rax, [rax + rdi - 0x10]; ret; 
0x00000000004733cc: lea rax, [rcx + rsi]; ret; 
0x0000000000446823: lea rax, [rcx - 1]; ret; 
0x000000000044489b: lea rax, [rdi + 0x10]; ret; 
0x00000000004448b0: lea rax, [rdi + 0x11]; ret; 
0x00000000004448ce: lea rax, [rdi + 0x12]; ret; 
0x00000000004448ee: lea rax, [rdi + 0x13]; ret; 
0x0000000000444911: lea rax, [rdi + 0x14]; ret; 
0x0000000000444930: lea rax, [rdi + 0x15]; ret; 
0x0000000000444950: lea rax, [rdi + 0x16]; ret; 
0x0000000000444970: lea rax, [rdi + 0x17]; ret; 
0x0000000000444993: lea rax, [rdi + 0x18]; ret; 
0x00000000004449b8: lea rax, [rdi + 0x19]; ret; 
0x00000000004449d6: lea rax, [rdi + 0x1a]; ret; 
0x00000000004449f6: lea rax, [rdi + 0x1b]; ret; 
0x0000000000444a12: lea rax, [rdi + 0x1c]; ret; 
0x0000000000444a32: lea rax, [rdi + 0x1d]; ret; 
0x0000000000444a52: lea rax, [rdi + 0x1e]; ret; 
0x0000000000444a72: lea rax, [rdi + 0x1f]; ret; 
0x00000000004447ec: lea rax, [rdi + 0xa]; ret; 
0x000000000044480c: lea rax, [rdi + 0xb]; ret; 
0x000000000044482e: lea rax, [rdi + 0xc]; ret; 
0x000000000044484e: lea rax, [rdi + 0xd]; ret; 
0x000000000044486e: lea rax, [rdi + 0xe]; ret; 
0x0000000000444888: lea rax, [rdi + 0xf]; ret; 
0x0000000000444736: lea rax, [rdi + 1]; ret; 
0x0000000000444749: lea rax, [rdi + 2]; ret; 
0x0000000000444754: lea rax, [rdi + 3]; ret; 
0x0000000000444767: lea rax, [rdi + 4]; ret; 
0x000000000044477c: lea rax, [rdi + 5]; ret; 
0x000000000044479a: lea rax, [rdi + 6]; ret; 
0x00000000004447a6: lea rax, [rdi + 7]; ret; 
0x00000000004447b9: lea rax, [rdi + 8]; ret; 
0x00000000004447ce: lea rax, [rdi + 9]; ret; 
0x000000000042b398: lea rax, [rdi + rax + 0x10]; ret; 
0x000000000042b3a8: lea rax, [rdi + rax + 0x20]; ret; 
0x000000000042b2a2: lea rax, [rdi + rax + 0x30]; ret; 
0x0000000000473614: lea rax, [rdi + rax - 0x20]; vzeroupper; ret; 
0x0000000000440306: lea rax, [rdi + rax]; ret; 
0x0000000000446b79: lea rax, [rdi + rcx]; sub rax, rsi; ret; 
0x00000000004732c8: lea rax, [rdi + rsi]; ret; 
0x0000000000444722: lea rax, [rdi]; ret; 
0x0000000000443d0c: lea rax, [rdx + 0xa]; ret; 
0x0000000000443d2c: lea rax, [rdx + 0xb]; ret; 
0x0000000000443d4e: lea rax, [rdx + 0xc]; ret; 
0x0000000000443d6e: lea rax, [rdx + 0xd]; ret; 
0x0000000000443d8e: lea rax, [rdx + 0xe]; ret; 
0x0000000000443c1e: lea rax, [rdx + 0xf]; ret; 
0x0000000000443c46: lea rax, [rdx + 1]; ret; 
0x0000000000443c5c: lea rax, [rdx + 2]; ret; 
0x0000000000443c74: lea rax, [rdx + 3]; ret; 
0x0000000000443c8a: lea rax, [rdx + 4]; ret; 
0x0000000000443c9c: lea rax, [rdx + 5]; ret; 
0x0000000000443cba: lea rax, [rdx + 6]; ret; 
0x0000000000443bc6: lea rax, [rdx + 7]; ret; 
0x0000000000443ccc: lea rax, [rdx + 8]; ret; 
0x0000000000443cec: lea rax, [rdx + 9]; ret; 
0x0000000000422d35: lea rax, [rdx - 0x10]; ret; 
0x0000000000443c34: lea rax, [rdx]; ret; 
0x00000000004247a7: lea rax, [rip + 0x1bb12]; cmove rax, rdx; ret; 
0x0000000000423847: lea rax, [rip + 0x1d0a2]; cmove rax, rdx; ret; 
0x000000000042435e: lea rax, [rip + 0x221ab]; cmove rax, rdx; ret; 
0x00000000004245a7: lea rax, [rip + 0x22862]; cmovne rax, rdx; ret; 
0x000000000042460e: lea rax, [rip + 0x22bab]; cmovne rax, rdx; ret; 
0x00000000004244ae: lea rax, [rip + 0x22d1b]; cmovne rax, rdx; ret; 
0x000000000042472d: lea rax, [rip + 0x22ecc]; cmovne rax, rdx; ret; 
0x00000000004245ed: lea rax, [rip + 0x22ffc]; cmovne rax, rdx; ret; 
0x000000000042448d: lea rax, [rip + 0x2316c]; cmovne rax, rdx; ret; 
0x00000000004237ce: lea rax, [rip + 0x231db]; cmovne rax, rdx; ret; 
0x000000000044d350: lea rax, [rip + 0x26cfa9]; ret; 
0x000000000048506e: lea rax, [rip + 0x5b]; cmovne rax, rdx; ret; 
0x00000000004727e7: lea rax, [rip + 0x9f2]; cmove rax, rdx; ret; 
0x00000000004727b7: lea rax, [rip + 0xee2]; cmove rax, rdx; ret; 
0x000000000041f77e: lea rax, [rip - 0xa75]; mov qword ptr [rip + 0x29a0d4], rax; ret; 
0x000000000047f220: lea rax, [rsi + 1]; mov qword ptr [rip + 0x23d185], rax; ret; 
0x0000000000422d45: lea rcx, [rdx - 8]; cmovne rax, rcx; ret; 
0x0000000000473c63: lea rdx, [rip - 0x2be2a]; cmove rax, rdx; ret; 
0x0000000000446600: leave; jne 0x465f0; ret; 
0x00000000004466b0: leave; jne 0x466a0; ret; 
0x0000000000400c13: leave; ret; 
0x0000000000455790: lodsb al, byte ptr [rsi]; ret; 
0x0000000000482e52: lodsd eax, dword ptr [rsi]; ret; 
0x0000000000434a1a: loope 0x34a0f; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000043753a: loope 0x3752f; movq qword ptr [rdi - 0x10], mm1; ret; 
0x000000000044869e: loope 0x48693; ret; 
0x00000000004747fe: loope 0x7480f; je 0x74820; ret; 
0x000000000047c98b: loope 0x7c98c; dec dword ptr [rcx - 0x77]; ret; 
0x0000000000482ce7: loope 0x82d35; mov dword ptr [rdi], ecx; ret; 
0x0000000000482d18: loope 0x82d66; mov dword ptr [rdi - 8], ecx; ret; 
0x0000000000482d8d: loope 0x82ddb; mov dword ptr [rdi - 0x10], ecx; ret; 
0x00000000004900b6: loope 0x90113; ret; 
0x00000000004a68ca: mov ah, 0x13; ret; 
0x00000000004a6d70: mov ah, 0xa5; ret; 
0x00000000004a66c4: mov ah, bl; push rsi; ret; 
0x000000000048aed6: mov al, 0; add byte ptr [rax], al; ret; 
0x000000000046362b: mov al, byte ptr [rbx - 0x76ffffe6]; ret 0xc389; 
0x00000000004357e1: mov bh, 0x16; mov word ptr [rdi], dx; ret; 
0x0000000000457acf: mov bh, 0x47; or cl, byte ptr [rax + 0x39]; ret 0x1176; 
0x0000000000444b48: mov bh, 0x48; lea eax, [rdi + 7]; ret; 
0x00000000004a7ba4: mov bh, 0xb4; mov edi, dword ptr [rdx]; ret; 
0x000000000045ab2a: mov bh, bh; and eax, 0xf3087400; ret; 
0x000000000044e2fa: mov byte ptr [r8 - 0x7d], r9b; ret 0x4830; 
0x00000000004024a4: mov byte ptr [r9 - 0x77], r8b; int 0x83; ret 0x8901; 
0x000000000044bfaa: mov byte ptr [rax + 0x28], 1; ret; 
0x000000000044e2fb: mov byte ptr [rax - 0x7d], cl; ret 0x4830; 
0x000000000046eb87: mov byte ptr [rcx + 0xf], 0x4f; ret; 
0x00000000004024a5: mov byte ptr [rcx - 0x77], al; int 0x83; ret 0x8901; 
0x0000000000444898: mov byte ptr [rdi + 0x10], dh; lea rax, [rdi + 0x10]; ret; 
0x0000000000444208: mov byte ptr [rdi + 0x10], dh; ret; 
0x000000000044490e: mov byte ptr [rdi + 0x14], dh; lea rax, [rdi + 0x14]; ret; 
0x000000000044425e: mov byte ptr [rdi + 0x14], dh; ret; 
0x0000000000444990: mov byte ptr [rdi + 0x18], dh; lea rax, [rdi + 0x18]; ret; 
0x00000000004442e0: mov byte ptr [rdi + 0x18], dh; ret; 
0x0000000000444746: mov byte ptr [rdi + 2], dh; lea rax, [rdi + 2]; ret; 
0x0000000000444126: mov byte ptr [rdi + 2], dh; ret; 
0x0000000000444142: mov byte ptr [rdi + 4], dh; mov dword ptr [rdi], ecx; ret; 
0x0000000000444183: mov byte ptr [rdi + 8], dh; mov qword ptr [rdi], rcx; ret; 
0x000000000042f3fb: mov byte ptr [rdi - 1], dl; ret; 
0x0000000000412900: mov byte ptr [rdi], 0; mov rax, rdi; ret; 
0x0000000000438522: mov byte ptr [rdi], cl; ret; 
0x0000000000447e05: mov byte ptr [rdi], cl; vzeroupper; ret; 
0x0000000000444720: mov byte ptr [rdi], dh; lea rax, [rdi]; ret; 
0x0000000000444100: mov byte ptr [rdi], dh; ret; 
0x0000000000435853: mov byte ptr [rdi], dl; ret; 
0x0000000000443c59: mov byte ptr [rdx + 2], al; lea rax, [rdx + 2]; ret; 
0x00000000004424a9: mov byte ptr [rdx + 2], al; mov rax, rdi; ret; 
0x0000000000443c87: mov byte ptr [rdx + 4], al; lea rax, [rdx + 4]; ret; 
0x00000000004424c7: mov byte ptr [rdx + 4], al; mov rax, rdi; ret; 
0x0000000000443c32: mov byte ptr [rdx], al; lea rax, [rdx]; ret; 
0x0000000000442482: mov byte ptr [rdx], al; mov rax, rdi; ret; 
0x000000000048b900: mov byte ptr [rip + 0x2308a9], 8; ret; 
0x00000000004a974a: mov ch, 0xab; ret; 
0x000000000040e928: mov cl, 0x35; ret 0x2ade; 
0x000000000043ad05: mov cl, byte ptr [rbx - 0x37d67dfc]; ret; 
0x000000000042bf64: mov cl, byte ptr [rsi + rdx - 1]; sub eax, ecx; ret; 
0x0000000000438520: mov cl, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x00000000004a8e2c: mov cs, edi; ret 0x8b36; 
0x00000000004680b2: mov cs, word ptr [rdx - 0x77000000]; ror byte ptr [rcx - 0x77], cl; ret; 
0x000000000043f28e: mov cs, word ptr [rip - 0x7cb80000]; ret 0xe910; 
0x0000000000418750: mov dh, 0; ret; 
0x0000000000435851: mov dh, 0x16; mov byte ptr [rdi], dl; ret; 
0x000000000042bab4: mov dh, 0x16; sub eax, edx; ret; 
0x000000000046eb9c: mov dh, 0x40; add dword ptr [rcx - 0x77], eax; ret 0xe883; 
0x000000000040da69: mov dh, 0x40; or dword ptr [rax + rax*8 - 0x38b79f8c], eax; ret 0xfff0; 
0x0000000000456892: mov dh, 0x41; dec dword ptr [rax - 0x7d]; ret 0x8801; 
0x00000000004694db: mov dh, 0x46; or al, 0x83; ret; 
0x000000000045e0d9: mov dh, 0x47; or al, 0x83; ret; 
0x00000000004a7b62: mov dh, 0x4e; ret 0x474c; 
0x0000000000445fe5: mov dh, 0x56; sub eax, edx; ret; 
0x0000000000463348: mov dh, 0x67; or al, 0x89; ret 0xc689; 
0x0000000000405f9a: mov dh, 0x73; add dword ptr [rax - 0x77], ecx; ret; 
0x000000000040ef04: mov dh, 0x73; add dword ptr [rax - 0x7d], ecx; ret; 
0x0000000000478c4f: mov dh, 0x87; adc eax, 0x89000003; ret 0xe8c0; 
0x0000000000475802: mov dh, 0xc0; add rsp, 0x58; ret; 
0x000000000048835d: mov dh, 0xc0; neg eax; ret; 
0x00000000004480f1: mov dh, 0xc1; pop rbx; ret; 
0x00000000004a8da4: mov dh, 0xc7; ret 0xe71f; 
0x000000000042bada: mov dh, 0xd2; sub eax, edx; ret; 
0x0000000000446f19: mov dh, 0xe; mov byte ptr [rdi], cl; ret; 
0x000000000042bf74: mov dh, 0xe; sub eax, ecx; ret; 
0x0000000000412bc1: mov dh, 2; ret; 
0x0000000000425bf4: mov dh, 7; sub eax, ecx; ret; 
0x000000000044869c: mov dh, byte ptr [rcx - 0xd]; ret; 
0x0000000000490d31: mov dl, 0x22; add byte ptr [rax + 0x39], cl; ret; 
0x000000000040eaad: mov dl, 0x6b; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000413702: mov dl, 0x6b; add byte ptr [rax - 0x77], cl; ret 0x294c; 
0x0000000000413088: mov dl, 0x6b; add byte ptr [rax - 0x77], cl; ret 0x294d; 
0x000000000042f480: mov dl, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x0000000000438516: mov dword ptr [r9 - 2], ecx; ret; 
0x0000000000438501: mov dword ptr [r9 - 4], ecx; ret; 
0x000000000044bf41: mov dword ptr [rax + 0x10], ecx; mov qword ptr [rax + 8], rdx; ret; 
0x00000000004709d9: mov dword ptr [rax + 0x10], edx; mov qword ptr [rax + 0x40], rcx; ret; 
0x0000000000470a19: mov dword ptr [rax + 0x10], esi; mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000044bfa7: mov dword ptr [rax + 0x20], ecx; mov byte ptr [rax + 0x28], 1; ret; 
0x000000000044bfc1: mov dword ptr [rax + 0x20], esi; ret; 
0x00000000004709dd: mov dword ptr [rax + 0x40], ecx; ret; 
0x0000000000450a7f: mov dword ptr [rax + 0x50], ecx; mov dword ptr [rax + 0x54], edx; ret; 
0x0000000000450a82: mov dword ptr [rax + 0x54], edx; ret; 
0x000000000044bf45: mov dword ptr [rax + 8], edx; ret; 
0x0000000000465f5d: mov dword ptr [rax], 0x16; mov eax, edx; ret; 
0x000000000044a4e8: mov dword ptr [rax], 0x16; mov rax, -1; ret; 
0x000000000040f292: mov dword ptr [rax], 0x16; xor eax, eax; ret; 
0x0000000000484ded: mov dword ptr [rax], edi; pop rbx; ret; 
0x0000000000484d3d: mov dword ptr [rax], edx; add rsp, 8; ret; 
0x0000000000484de1: mov dword ptr [rax], edx; pop rbx; ret; 
0x000000000048d172: mov dword ptr [rax], edx; ret; 
0x000000000047590d: mov dword ptr [rax], edx; xor eax, eax; ret; 
0x0000000000488385: mov dword ptr [rbx + 0x18], eax; pop rbx; ret; 
0x0000000000488459: mov dword ptr [rbx + 0x20], eax; pop rbx; ret; 
0x0000000000458767: mov dword ptr [rbx + 8], eax; pop rbx; ret; 
0x0000000000400d9e: mov dword ptr [rcx + rax*2], 0x72f2a30f; ret 0xfe83; 
0x0000000000450dd5: mov dword ptr [rcx - 0x7d], 0x940f07fc; ret 0x1f0f; 
0x0000000000438517: mov dword ptr [rcx - 2], ecx; ret; 
0x0000000000438502: mov dword ptr [rcx - 4], ecx; ret; 
0x00000000004384f1: mov dword ptr [rcx - 8], ecx; ret; 
0x00000000004494ea: mov dword ptr [rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x00000000004448ad: mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x11]; ret; 
0x00000000004448eb: mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x13]; ret; 
0x000000000044496d: mov dword ptr [rdi + 0x10], ecx; lea rax, [rdi + 0x17]; ret; 
0x000000000044425b: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x14], dh; ret; 
0x00000000004442dd: mov dword ptr [rdi + 0x10], ecx; mov byte ptr [rdi + 0x18], dh; ret; 
0x000000000044421d: mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000444320: mov dword ptr [rdi + 0x10], edx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000444340: mov dword ptr [rdi + 0x10], edx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000444301: mov dword ptr [rdi + 0x10], edx; mov word ptr [rdi + 0x18], cx; ret; 
0x00000000004449d3: mov dword ptr [rdi + 0x17], ecx; lea rax, [rdi + 0x1a]; ret; 
0x0000000000444323: mov dword ptr [rdi + 0x17], ecx; ret; 
0x0000000000416443: mov dword ptr [rdi + 0x18], eax; mov qword ptr [rdi + 8], rax; ret; 
0x00000000004449b5: mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x19]; ret; 
0x00000000004449f3: mov dword ptr [rdi + 0x18], ecx; lea rax, [rdi + 0x1b]; ret; 
0x0000000000444305: mov dword ptr [rdi + 0x18], ecx; ret; 
0x000000000047b5d0: mov dword ptr [rdi + 0x2f4], ecx; mov qword ptr [rdi + 0x308], rax; ret; 
0x000000000047b5d7: mov dword ptr [rdi + 0x308], eax; ret; 
0x0000000000416473: mov dword ptr [rdi + 0x48], edx; mov qword ptr [rdi + 8], rax; ret; 
0x000000000048d1b1: mov dword ptr [rdi + 0x98], esi; ret; 
0x000000000044492d: mov dword ptr [rdi + 0xe], ecx; lea rax, [rdi + 0x15]; ret; 
0x000000000044427d: mov dword ptr [rdi + 0xe], ecx; ret; 
0x00000000004448cb: mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x12]; ret; 
0x000000000044494d: mov dword ptr [rdi + 0xf], ecx; lea rax, [rdi + 0x16]; ret; 
0x000000000044423b: mov dword ptr [rdi + 0xf], ecx; ret; 
0x0000000000435695: mov dword ptr [rdi + 1], edx; mov dword ptr [rdi], ecx; ret; 
0x00000000004354d8: mov dword ptr [rdi + 1], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000435778: mov dword ptr [rdi + 1], edx; mov word ptr [rdi], cx; ret; 
0x0000000000435625: mov dword ptr [rdi + 2], edx; mov dword ptr [rdi], ecx; ret; 
0x0000000000435468: mov dword ptr [rdi + 2], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000444797: mov dword ptr [rdi + 3], edx; lea rax, [rdi + 6]; ret; 
0x00000000004355b5: mov dword ptr [rdi + 3], edx; mov dword ptr [rdi], ecx; ret; 
0x00000000004353f8: mov dword ptr [rdi + 3], edx; mov qword ptr [rdi], rcx; ret; 
0x0000000000444167: mov dword ptr [rdi + 3], edx; ret; 
0x0000000000444159: mov dword ptr [rdi + 4], edx; ret; 
0x000000000044482b: mov dword ptr [rdi + 5], edx; lea rax, [rdi + 0xc]; ret; 
0x0000000000435318: mov dword ptr [rdi + 5], edx; mov qword ptr [rdi], rcx; ret; 
0x00000000004441cb: mov dword ptr [rdi + 5], edx; ret; 
0x000000000044484b: mov dword ptr [rdi + 6], edx; lea rax, [rdi + 0xd]; ret; 
0x00000000004352a8: mov dword ptr [rdi + 6], edx; mov qword ptr [rdi], rcx; ret; 
0x00000000004441db: mov dword ptr [rdi + 6], edx; ret; 
0x00000000004447e9: mov dword ptr [rdi + 7], edx; lea rax, [rdi + 0xa]; ret; 
0x000000000044486b: mov dword ptr [rdi + 7], edx; lea rax, [rdi + 0xe]; ret; 
0x0000000000435238: mov dword ptr [rdi + 7], edx; mov qword ptr [rdi], rcx; ret; 
0x00000000004441a9: mov dword ptr [rdi + 7], edx; ret; 
0x000000000048460e: mov dword ptr [rdi + 8], eax; mov eax, 2; ret; 
0x0000000000416447: mov dword ptr [rdi + 8], eax; ret; 
0x0000000000482e24: mov dword ptr [rdi + 8], ecx; ret; 
0x0000000000444809: mov dword ptr [rdi + 8], edx; lea rax, [rdi + 0xb]; ret; 
0x00000000004447cb: mov dword ptr [rdi + 8], edx; lea rax, [rdi + 9]; ret; 
0x000000000044419b: mov dword ptr [rdi + 8], edx; ret; 
0x0000000000447cab: mov dword ptr [rdi + rdx - 2], ecx; mov word ptr [rdi], cx; ret; 
0x0000000000446f45: mov dword ptr [rdi + rdx - 2], ecx; mov word ptr [rdi], si; ret; 
0x0000000000447ca3: mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], ecx; ret; 
0x0000000000446f35: mov dword ptr [rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x0000000000447c9b: mov dword ptr [rdi + rdx - 8], ecx; mov qword ptr [rdi], rcx; ret; 
0x0000000000446f27: mov dword ptr [rdi + rdx - 8], ecx; mov qword ptr [rdi], rsi; ret; 
0x000000000048d15c: mov dword ptr [rdi + rsi*8], edx; ret; 
0x000000000042f145: mov dword ptr [rdi - 0x10], ebx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042f183: mov dword ptr [rdi - 0x10], ebx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000482d8f: mov dword ptr [rdi - 0x10], ecx; ret; 
0x000000000042f4cc: mov dword ptr [rdi - 0xa], ecx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000434ce8: mov dword ptr [rdi - 0xa], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000042f6ac: mov dword ptr [rdi - 0xb], ecx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042f89c: mov dword ptr [rdi - 0xc], ecx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042fa6d: mov dword ptr [rdi - 0xd], ecx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434b59: mov dword ptr [rdi - 0xd], edx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042fc6d: mov dword ptr [rdi - 0xe], ecx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434ac9: mov dword ptr [rdi - 0xe], edx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042fe6d: mov dword ptr [rdi - 0xf], ecx; mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042f84d: mov dword ptr [rdi - 2], ecx; ret; 
0x000000000042f665: mov dword ptr [rdi - 2], edx; ret; 
0x000000000042fc29: mov dword ptr [rdi - 4], ecx; ret; 
0x000000000042f2ff: mov dword ptr [rdi - 4], edx; ret; 
0x000000000042f149: mov dword ptr [rdi - 8], ecx; ret; 
0x000000000042f187: mov dword ptr [rdi - 8], edx; ret; 
0x000000000042f2fc: mov dword ptr [rdi - 9], eax; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042f3f8: mov dword ptr [rdi - 9], ecx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000042f344: mov dword ptr [rdi - 9], ecx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000434d68: mov dword ptr [rdi - 9], edx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000444765: mov dword ptr [rdi], ecx; lea rax, [rdi + 4]; ret; 
0x00000000004447b7: mov dword ptr [rdi], ecx; lea rax, [rdi + 8]; ret; 
0x0000000000444124: mov dword ptr [rdi], ecx; mov byte ptr [rdi + 2], dh; ret; 
0x0000000000444165: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 3], edx; ret; 
0x00000000004441a7: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 7], edx; ret; 
0x00000000004441b7: mov dword ptr [rdi], ecx; mov dword ptr [rdi + 8], edx; ret; 
0x0000000000446c77: mov dword ptr [rdi], ecx; mov dword ptr [rsi - 4], ecx; ret; 
0x00000000004441c8: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 5], rdx; ret; 
0x00000000004441d8: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 6], rdx; ret; 
0x00000000004441e8: mov dword ptr [rdi], ecx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000444156: mov dword ptr [rdi], ecx; mov word ptr [rdi + 4], dx; ret; 
0x0000000000444198: mov dword ptr [rdi], ecx; mov word ptr [rdi + 8], dx; ret; 
0x0000000000446c83: mov dword ptr [rdi], ecx; mov word ptr [rsi - 2], cx; ret; 
0x000000000043523c: mov dword ptr [rdi], ecx; ret; 
0x0000000000447e1f: mov dword ptr [rdi], ecx; vzeroupper; ret; 
0x0000000000444734: mov dword ptr [rdi], edx; lea rax, [rdi + 1]; ret; 
0x0000000000444752: mov dword ptr [rdi], edx; lea rax, [rdi + 3]; ret; 
0x00000000004447a4: mov dword ptr [rdi], edx; lea rax, [rdi + 7]; ret; 
0x0000000000435544: mov dword ptr [rdi], edx; ret; 
0x00000000004384ff: mov dword ptr [rdi], esi; mov dword ptr [r9 - 4], ecx; ret; 
0x00000000004384ee: mov dword ptr [rdi], esi; mov qword ptr [r9 - 8], rcx; ret; 
0x0000000000438513: mov dword ptr [rdi], esi; mov word ptr [r9 - 2], cx; ret; 
0x0000000000446f2c: mov dword ptr [rdi], esi; ret; 
0x0000000000443cb7: mov dword ptr [rdx + 3], eax; lea rax, [rdx + 6]; ret; 
0x00000000004424e7: mov dword ptr [rdx + 3], eax; mov rax, rdi; ret; 
0x0000000000443c99: mov dword ptr [rdx + 4], eax; lea rax, [rdx + 5]; ret; 
0x00000000004424d9: mov dword ptr [rdx + 4], eax; mov rax, rdi; ret; 
0x0000000000443d4b: mov dword ptr [rdx + 5], eax; lea rax, [rdx + 0xc]; ret; 
0x0000000000443cc9: mov dword ptr [rdx + 5], eax; lea rax, [rdx + 8]; ret; 
0x00000000004424f9: mov dword ptr [rdx + 5], eax; mov rax, rdi; ret; 
0x0000000000443d6b: mov dword ptr [rdx + 6], eax; lea rax, [rdx + 0xd]; ret; 
0x0000000000443ce9: mov dword ptr [rdx + 6], eax; lea rax, [rdx + 9]; ret; 
0x0000000000442509: mov dword ptr [rdx + 6], eax; mov rax, rdi; ret; 
0x0000000000443d09: mov dword ptr [rdx + 7], eax; lea rax, [rdx + 0xa]; ret; 
0x0000000000443d8b: mov dword ptr [rdx + 7], eax; lea rax, [rdx + 0xe]; ret; 
0x0000000000442519: mov dword ptr [rdx + 7], eax; mov rax, rdi; ret; 
0x0000000000443d29: mov dword ptr [rdx + 8], eax; lea rax, [rdx + 0xb]; ret; 
0x0000000000443c1b: mov dword ptr [rdx + 8], eax; lea rax, [rdx + 0xf]; ret; 
0x000000000044246b: mov dword ptr [rdx + 8], eax; mov rax, rdi; ret; 
0x0000000000443c44: mov dword ptr [rdx], eax; lea rax, [rdx + 1]; ret; 
0x0000000000443c72: mov dword ptr [rdx], eax; lea rax, [rdx + 3]; ret; 
0x0000000000443bc4: mov dword ptr [rdx], eax; lea rax, [rdx + 7]; ret; 
0x000000000044957a: mov dword ptr [rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000000484498: mov dword ptr [rdx], eax; mov eax, 1; ret; 
0x00000000004845f5: mov dword ptr [rdx], eax; mov eax, 2; ret; 
0x000000000044982a: mov dword ptr [rdx], eax; mov rax, -1; ret; 
0x0000000000442414: mov dword ptr [rdx], eax; mov rax, rdi; ret; 
0x0000000000484dcd: mov dword ptr [rdx], eax; pop rbx; ret; 
0x00000000004182d8: mov dword ptr [rdx], eax; ret; 
0x00000000004848f8: mov dword ptr [rip + 0x23776a], eax; ret; 
0x00000000004848dd: mov dword ptr [rip + 0x237785], eax; add rsp, 8; ret; 
0x000000000047f2e1: mov dword ptr [rip + 0x23d0c9], eax; add rsp, 8; ret; 
0x000000000047f225: mov dword ptr [rip + 0x23d185], eax; ret; 
0x000000000044d386: mov dword ptr [rip + 0x26b72c], edx; pop rbx; ret; 
0x000000000041f786: mov dword ptr [rip + 0x29a0d4], eax; ret; 
0x00000000004191be: mov dword ptr [rip + 0x2a0648], eax; ret; 
0x000000000041917f: mov dword ptr [rip + 0x2a0663], eax; ret; 
0x000000000041915f: mov dword ptr [rip + 0x2a067b], eax; ret; 
0x0000000000419055: mov dword ptr [rip + 0x2a07ed], eax; ret; 
0x0000000000419045: mov dword ptr [rip + 0x2a07f5], eax; ret; 
0x0000000000418ff5: mov dword ptr [rip + 0x2a07fd], eax; ret; 
0x0000000000418fe5: mov dword ptr [rip + 0x2a0815], eax; ret; 
0x00000000004191d4: mov dword ptr [rip + 0x2a2bba], eax; ret; 
0x0000000000446c86: mov dword ptr [rsi - 2], ecx; ret; 
0x0000000000446c79: mov dword ptr [rsi - 4], ecx; ret; 
0x00000000004787f1: mov dword ptr [rsi], 0xffffffff; xor eax, eax; ret; 
0x000000000048d19e: mov dword ptr [rsi], eax; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000047f392: mov dword ptr [rsi], eax; ret; 
0x000000000047e6d9: mov dword ptr [rsi], edi; mov rax, rcx; ret; 
0x0000000000465f5c: mov dword ptr fs:[rax], 0x16; mov eax, edx; ret; 
0x000000000044a4e7: mov dword ptr fs:[rax], 0x16; mov rax, -1; ret; 
0x000000000040f291: mov dword ptr fs:[rax], 0x16; xor eax, eax; ret; 
0x000000000047590c: mov dword ptr fs:[rax], edx; xor eax, eax; ret; 
0x00000000004494e9: mov dword ptr fs:[rcx], eax; or rax, 0xffffffffffffffff; ret; 
0x0000000000449579: mov dword ptr fs:[rdx], eax; mov eax, 0xffffffff; ret; 
0x0000000000449829: mov dword ptr fs:[rdx], eax; mov rax, -1; ret; 
0x0000000000446f34: mov dword ptr ss:[rdi + rdx - 4], ecx; mov dword ptr [rdi], esi; ret; 
0x000000000042f660: mov dx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x0000000000444110: mov dx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x0000000000423460: mov eax, 0x16; ret; 
0x0000000000485290: mov eax, 0x27; syscall; ret; 
0x0000000000448187: mov eax, 0x40; pop rbx; ret; 
0x00000000004a6cbb: mov eax, 0x45155e93; ret 0x591c; 
0x0000000000448180: mov eax, 0x60; pop rbx; ret; 
0x0000000000475520: mov eax, 0x66; syscall; ret; 
0x0000000000475540: mov eax, 0x68; syscall; ret; 
0x0000000000475530: mov eax, 0x6b; syscall; ret; 
0x0000000000475550: mov eax, 0x6c; syscall; ret; 
0x000000000044815d: mov eax, 0x80; pop rbx; ret; 
0x000000000048996f: mov eax, 0x89000003; fmul dword ptr [rbx + rcx*4 + 0x34]; ret 0xf41; 
0x000000000046c781: mov eax, 0x8900001d; ret 0x349; 
0x0000000000486b84: mov eax, 0x89fd8945; ret 0xe283; 
0x00000000004a6178: mov eax, 0xbcbbbab9; mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x0000000000474dc0: mov eax, 0xc9; syscall; ret; 
0x0000000000412dd3: mov eax, 0xffffffff; pop rbx; ret; 
0x0000000000411c1b: mov eax, 0xffffffff; ret; 
0x000000000046863f: mov eax, 1; ret; 
0x0000000000474613: mov eax, 2; ret; 
0x0000000000474871: mov eax, 3; ret; 
0x0000000000474881: mov eax, 4; ret; 
0x0000000000474891: mov eax, 5; ret; 
0x00000000004748a1: mov eax, 6; ret; 
0x00000000004748b1: mov eax, 7; ret; 
0x000000000044e820: mov eax, 8; ret; 
0x0000000000471ea4: mov eax, dword ptr [rax + 0x4c]; ret; 
0x0000000000481a31: mov eax, dword ptr [rax + 8]; ret; 
0x000000000045ab6f: mov eax, dword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000048adc1: mov eax, dword ptr [rax]; mov qword ptr [r10], r8; ret; 
0x000000000045ab6c: mov eax, dword ptr [rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000047fcb9: mov eax, dword ptr [rax]; ret; 
0x000000000043e9d2: mov eax, dword ptr [rcx + rax*4]; sub eax, edx; ret; 
0x00000000004182e0: mov eax, dword ptr [rdi + 0x10]; sub eax, dword ptr [rsi + 0x10]; ret; 
0x0000000000418308: mov eax, dword ptr [rdi + 0x10]; sub eax, edx; ret; 
0x0000000000471ea1: mov eax, dword ptr [rdi + 0x48]; mov eax, dword ptr [rax + 0x4c]; ret; 
0x0000000000418631: mov eax, dword ptr [rdi + 0x68]; ret; 
0x000000000048d131: mov eax, dword ptr [rdi + 0x90]; ret; 
0x000000000048d181: mov eax, dword ptr [rdi + 0x98]; ret; 
0x000000000048d1c1: mov eax, dword ptr [rdi + 0xa0]; ret; 
0x000000000048d221: mov eax, dword ptr [rdi + 0xa8]; ret; 
0x000000000048d211: mov eax, dword ptr [rdi + 0xb0]; ret; 
0x000000000048d1d1: mov eax, dword ptr [rdi + 0xb8]; ret; 
0x00000000004182d5: mov eax, dword ptr [rdi]; mov qword ptr [rdx], rax; ret; 
0x000000000047e68c: mov eax, dword ptr [rdx + 4]; ret; 
0x000000000043ad06: mov eax, dword ptr [rdx + rax*4]; sub eax, ecx; ret; 
0x0000000000485490: mov eax, dword ptr [rip + 0x23742a]; ret; 
0x000000000047f38b: mov eax, dword ptr [rip + 0x23d017]; mov qword ptr [rsi], rax; ret; 
0x000000000047f31a: mov eax, dword ptr [rip + 0x23d090]; ret; 
0x00000000004579d1: mov eax, dword ptr [rip + 0x2644a1]; ret; 
0x000000000044f471: mov eax, dword ptr [rip + 0x26d4b1]; ret; 
0x0000000000418611: mov eax, dword ptr [rip + 0x2a0b09]; ret; 
0x000000000048e072: mov eax, dword ptr [rsi + 0x10]; ret; 
0x000000000048af01: mov eax, dword ptr [rsi + 0xa8]; ret; 
0x000000000048aed4: mov eax, dword ptr [rsi + 0xb0]; ret; 
0x000000000048aef1: mov eax, dword ptr [rsi + 0xb8]; ret; 
0x000000000048e091: mov eax, dword ptr [rsi + 8]; ret; 
0x000000000048d1f6: mov eax, dword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000048a96a: mov eax, dword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000047fcb8: mov eax, dword ptr fs:[rax]; ret; 
0x00000000004481a2: mov eax, eax; ret; 
0x0000000000473a71: mov eax, eax; vzeroupper; ret; 
0x00000000004129db: mov eax, ebx; pop rbx; ret; 
0x00000000004842c7: mov eax, ecx; adc eax, eax; ret; 
0x0000000000465e45: mov eax, ecx; ret; 
0x0000000000412904: mov eax, edi; ret; 
0x000000000041a715: mov eax, edx; add rsp, 8; ret; 
0x00000000004481a6: mov eax, edx; pop rbx; ret; 
0x000000000041a721: mov eax, edx; ret; 
0x000000000041dbdd: mov eax, esi; pop rbx; ret; 
0x000000000041dc11: mov eax, esi; ret; 
0x0000000000465e44: mov eax, r9d; ret; 
0x000000000044d56b: mov ebp, 0x890026e8; ret 0xe083; 
0x000000000049f0a4: mov ebp, 0xc000000f; sldt word ptr [rax]; ret; 
0x00000000004a617d: mov ebp, 0xc1c0bfbe; ret 0xc4c3; 
0x0000000000473238: mov ebp, 0xf80148c0; ret; 
0x00000000004734bc: mov ebp, 0xf80148c6; ret; 
0x00000000004a78e6: mov ebp, 0xfb67d10d; ret; 
0x000000000046c189: mov ebp, 0xfffffae8; add byte ptr [rcx - 0x77], al; ret 0x1674; 
0x000000000048d653: mov ebp, dword ptr [rbp]; mov rsp, rcx; ret; 
0x00000000004004cb: mov ebp, dword ptr [rbx]; add byte ptr [rsi - 0x70], ah; ret; 
0x000000000046be33: mov ebx, 0x89000025; ret 0x349; 
0x000000000044d391: mov ebx, 0x89000281; ret; 
0x000000000044bd84: mov ebx, 0xafb8341; je 0x4bd8c; ret; 
0x00000000004a617b: mov ebx, 0xbfbebdbc; rol cl, 0xc2; ret; 
0x000000000047566c: mov ecx, 0x48000000; add esp, 0x78; ret; 
0x00000000004a6179: mov ecx, 0xbdbcbbba; mov esi, 0xc2c1c0bf; ret; 
0x0000000000446f02: mov ecx, edx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000045f4ca: mov edi, 0x440f48c0; ret 0xae9; 
0x000000000048d4d1: mov edi, dword ptr [rbp - 8]; leave; ret; 
0x00000000004a7ba6: mov edi, dword ptr [rdx]; ret; 
0x000000000044d372: mov edx, 0x89000281; ret; 
0x00000000004049ec: mov edx, 0x8949ffff; ret 0x149; 
0x000000000045ab4f: mov edx, 0xffffffe0; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000450b47: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000000000043d0fd: mov edx, dword ptr [rcx + rdx*4]; sub eax, edx; ret; 
0x000000000042f661: mov edx, dword ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x0000000000435700: mov edx, dword ptr [rsi]; mov dword ptr [rdi], edx; ret; 
0x0000000000435541: mov edx, dword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x0000000000444111: mov edx, dword ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x00000000004531b2: mov es, word ptr [rax + rax]; add bh, dh; ret 0; 
0x000000000044fbd2: mov esi, 0x83480147; ret; 
0x0000000000461fe1: mov esi, 0x8900000b; ret 0x349; 
0x000000000046b8e5: mov esi, 0x8900002b; ret 0x349; 
0x0000000000454e7e: mov esi, 0x89fffacc; ret 0xe283; 
0x00000000004a617e: mov esi, 0xc2c1c0bf; ret; 
0x00000000004a6a06: mov esi, 0xfa1fb992; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp; ret; 
0x000000000040d33b: mov esp, 0x24448b48; sub byte ptr [rax - 0x7d], cl; ret; 
0x000000000042b341: mov esp, 0x448d48c0; cmp al, dh; ret; 
0x000000000042b371: mov esp, 0x448d48c0; cmp byte ptr [rax], ah; ret; 
0x000000000042b361: mov esp, 0x448d48c0; cmp byte ptr [rax], dl; ret; 
0x000000000040480f: mov esp, 0x8949ffff; ret 0x149; 
0x000000000042b42b: mov esp, 0xf80148c0; add rax, rcx; ret; 
0x000000000042b351: mov esp, 0xf80148c0; ret; 
0x000000000042b842: mov esp, 0xf80148c0; vzeroupper; ret; 
0x000000000048d657: mov esp, ecx; ret; 
0x0000000000400b85: mov esp, esi; ret; 
0x000000000045292d: mov fs, word ptr [rbx]; add eax, 0x29480000; ret 0x349; 
0x000000000048adc3: mov qword ptr [r10], r8; ret; 
0x00000000004384f0: mov qword ptr [r9 - 8], rcx; ret; 
0x000000000044bf40: mov qword ptr [rax + 0x10], rcx; mov qword ptr [rax + 8], rdx; ret; 
0x00000000004709d8: mov qword ptr [rax + 0x10], rdx; mov qword ptr [rax + 0x40], rcx; ret; 
0x0000000000470a18: mov qword ptr [rax + 0x10], rsi; mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000044bfa6: mov qword ptr [rax + 0x20], rcx; mov byte ptr [rax + 0x28], 1; ret; 
0x000000000044bfc0: mov qword ptr [rax + 0x20], rsi; ret; 
0x00000000004709dc: mov qword ptr [rax + 0x40], rcx; ret; 
0x000000000044bf44: mov qword ptr [rax + 8], rdx; ret; 
0x0000000000484dec: mov qword ptr [rax], rdi; pop rbx; ret; 
0x0000000000484d3c: mov qword ptr [rax], rdx; add rsp, 8; ret; 
0x0000000000484de0: mov qword ptr [rax], rdx; pop rbx; ret; 
0x000000000048d171: mov qword ptr [rax], rdx; ret; 
0x0000000000488384: mov qword ptr [rbx + 0x18], rax; pop rbx; ret; 
0x0000000000488458: mov qword ptr [rbx + 0x20], rax; pop rbx; ret; 
0x0000000000482e9e: mov qword ptr [rdi + 0x10], r9; ret; 
0x000000000044496c: mov qword ptr [rdi + 0x10], rcx; lea rax, [rdi + 0x17]; ret; 
0x00000000004442dc: mov qword ptr [rdi + 0x10], rcx; mov byte ptr [rdi + 0x18], dh; ret; 
0x00000000004442bc: mov qword ptr [rdi + 0x10], rcx; ret; 
0x000000000044431f: mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x17], ecx; ret; 
0x000000000044433f: mov qword ptr [rdi + 0x10], rdx; mov dword ptr [rdi + 0x18], ecx; ret; 
0x0000000000444300: mov qword ptr [rdi + 0x10], rdx; mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000416442: mov qword ptr [rdi + 0x18], rax; mov qword ptr [rdi + 8], rax; ret; 
0x000000000047b5d6: mov qword ptr [rdi + 0x308], rax; ret; 
0x0000000000416472: mov qword ptr [rdi + 0x48], rdx; mov qword ptr [rdi + 8], rax; ret; 
0x000000000048d1b0: mov qword ptr [rdi + 0x98], rsi; ret; 
0x000000000044492c: mov qword ptr [rdi + 0xe], rcx; lea rax, [rdi + 0x15]; ret; 
0x000000000044427c: mov qword ptr [rdi + 0xe], rcx; ret; 
0x000000000044494c: mov qword ptr [rdi + 0xf], rcx; lea rax, [rdi + 0x16]; ret; 
0x000000000044429c: mov qword ptr [rdi + 0xf], rcx; ret; 
0x00000000004354d7: mov qword ptr [rdi + 1], rdx; mov qword ptr [rdi], rcx; ret; 
0x0000000000435467: mov qword ptr [rdi + 2], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004353f7: mov qword ptr [rdi + 3], rdx; mov qword ptr [rdi], rcx; ret; 
0x000000000044482a: mov qword ptr [rdi + 5], rdx; lea rax, [rdi + 0xc]; ret; 
0x0000000000435317: mov qword ptr [rdi + 5], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004441ca: mov qword ptr [rdi + 5], rdx; ret; 
0x000000000044484a: mov qword ptr [rdi + 6], rdx; lea rax, [rdi + 0xd]; ret; 
0x00000000004352a7: mov qword ptr [rdi + 6], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004441da: mov qword ptr [rdi + 6], rdx; ret; 
0x000000000044486a: mov qword ptr [rdi + 7], rdx; lea rax, [rdi + 0xe]; ret; 
0x0000000000435237: mov qword ptr [rdi + 7], rdx; mov qword ptr [rdi], rcx; ret; 
0x00000000004441ea: mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000482e23: mov qword ptr [rdi + 8], r9; ret; 
0x000000000048460d: mov qword ptr [rdi + 8], rax; mov eax, 2; ret; 
0x0000000000416446: mov qword ptr [rdi + 8], rax; ret; 
0x0000000000447c9a: mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rcx; ret; 
0x0000000000446f26: mov qword ptr [rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x000000000048d15b: mov qword ptr [rdi + rsi*8], rdx; ret; 
0x000000000042f144: mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042f182: mov qword ptr [rdi - 0x10], r11; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000482d8e: mov qword ptr [rdi - 0x10], r9; ret; 
0x000000000042f4cb: mov qword ptr [rdi - 0xa], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000434ce7: mov qword ptr [rdi - 0xa], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x000000000042f6ab: mov qword ptr [rdi - 0xb], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042f89b: mov qword ptr [rdi - 0xc], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042fa6c: mov qword ptr [rdi - 0xd], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434b58: mov qword ptr [rdi - 0xd], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042fc6c: mov qword ptr [rdi - 0xe], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000434ac8: mov qword ptr [rdi - 0xe], rdx; mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042fe6c: mov qword ptr [rdi - 0xf], rcx; mov qword ptr [rdi - 8], rdx; ret; 
0x0000000000482d19: mov qword ptr [rdi - 8], r9; ret; 
0x000000000042f148: mov qword ptr [rdi - 8], rcx; ret; 
0x000000000042f186: mov qword ptr [rdi - 8], rdx; ret; 
0x000000000042f2fb: mov qword ptr [rdi - 9], r8; mov dword ptr [rdi - 4], edx; ret; 
0x000000000042f3f7: mov qword ptr [rdi - 9], rcx; mov byte ptr [rdi - 1], dl; ret; 
0x000000000042f343: mov qword ptr [rdi - 9], rcx; mov dword ptr [rdi - 4], edx; ret; 
0x0000000000434d67: mov qword ptr [rdi - 9], rdx; mov dword ptr [rdi - 4], ecx; ret; 
0x0000000000482ce8: mov qword ptr [rdi], r9; ret; 
0x00000000004447b6: mov qword ptr [rdi], rcx; lea rax, [rdi + 8]; ret; 
0x00000000004441a6: mov qword ptr [rdi], rcx; mov dword ptr [rdi + 7], edx; ret; 
0x00000000004441b6: mov qword ptr [rdi], rcx; mov dword ptr [rdi + 8], edx; ret; 
0x00000000004441c7: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 5], rdx; ret; 
0x00000000004441d7: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 6], rdx; ret; 
0x00000000004441e7: mov qword ptr [rdi], rcx; mov qword ptr [rdi + 7], rdx; ret; 
0x0000000000444197: mov qword ptr [rdi], rcx; mov word ptr [rdi + 8], dx; ret; 
0x000000000043523b: mov qword ptr [rdi], rcx; ret; 
0x0000000000447e1e: mov qword ptr [rdi], rcx; vzeroupper; ret; 
0x00000000004447a3: mov qword ptr [rdi], rdx; lea rax, [rdi + 7]; ret; 
0x0000000000435543: mov qword ptr [rdi], rdx; ret; 
0x00000000004384ed: mov qword ptr [rdi], rsi; mov qword ptr [r9 - 8], rcx; ret; 
0x0000000000446f2b: mov qword ptr [rdi], rsi; ret; 
0x0000000000443d4a: mov qword ptr [rdx + 5], rax; lea rax, [rdx + 0xc]; ret; 
0x000000000044253a: mov qword ptr [rdx + 5], rax; mov rax, rdi; ret; 
0x0000000000443d6a: mov qword ptr [rdx + 6], rax; lea rax, [rdx + 0xd]; ret; 
0x000000000044255a: mov qword ptr [rdx + 6], rax; mov rax, rdi; ret; 
0x0000000000443d8a: mov qword ptr [rdx + 7], rax; lea rax, [rdx + 0xe]; ret; 
0x000000000044257a: mov qword ptr [rdx + 7], rax; mov rax, rdi; ret; 
0x0000000000443c1a: mov qword ptr [rdx + 8], rax; lea rax, [rdx + 0xf]; ret; 
0x000000000044246a: mov qword ptr [rdx + 8], rax; mov rax, rdi; ret; 
0x0000000000443bc3: mov qword ptr [rdx], rax; lea rax, [rdx + 7]; ret; 
0x0000000000442413: mov qword ptr [rdx], rax; mov rax, rdi; ret; 
0x0000000000484dcc: mov qword ptr [rdx], rax; pop rbx; ret; 
0x00000000004182d7: mov qword ptr [rdx], rax; ret; 
0x00000000004848f7: mov qword ptr [rip + 0x23776a], rax; ret; 
0x00000000004848dc: mov qword ptr [rip + 0x237785], rax; add rsp, 8; ret; 
0x000000000047f2e0: mov qword ptr [rip + 0x23d0c9], rax; add rsp, 8; ret; 
0x000000000047f224: mov qword ptr [rip + 0x23d185], rax; ret; 
0x000000000041f785: mov qword ptr [rip + 0x29a0d4], rax; ret; 
0x000000000041917e: mov qword ptr [rip + 0x2a0663], rax; ret; 
0x000000000041915e: mov qword ptr [rip + 0x2a067b], rax; ret; 
0x0000000000419054: mov qword ptr [rip + 0x2a07ed], rax; ret; 
0x0000000000419044: mov qword ptr [rip + 0x2a07f5], rax; ret; 
0x0000000000418ff4: mov qword ptr [rip + 0x2a07fd], rax; ret; 
0x0000000000418fe4: mov qword ptr [rip + 0x2a0815], rax; ret; 
0x00000000004787f0: mov qword ptr [rsi], -1; xor eax, eax; ret; 
0x000000000047f391: mov qword ptr [rsi], rax; ret; 
0x000000000047e6d8: mov qword ptr [rsi], rdi; mov rax, rcx; ret; 
0x000000000045ab55: mov qword ptr fs:[rdx], rax; ret; 
0x0000000000446f25: mov qword ptr ss:[rdi + rdx - 8], rcx; mov qword ptr [rdi], rsi; ret; 
0x000000000048d4d0: mov r15, qword ptr [rbp - 8]; leave; ret; 
0x000000000048adc0: mov r8, qword ptr [r8]; mov qword ptr [r10], r8; ret; 
0x0000000000417870: mov rax, -1; ret; 
0x0000000000474850: mov rax, 1; ret; 
0x0000000000474860: mov rax, 2; ret; 
0x0000000000474870: mov rax, 3; ret; 
0x0000000000474880: mov rax, 4; ret; 
0x0000000000474890: mov rax, 5; ret; 
0x00000000004748a0: mov rax, 6; ret; 
0x00000000004748b0: mov rax, 7; ret; 
0x0000000000471ea3: mov rax, qword ptr [rax + 0x4c]; ret; 
0x0000000000481a30: mov rax, qword ptr [rax + 8]; ret; 
0x000000000045ab6e: mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000045ab6b: mov rax, qword ptr [rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x000000000048d102: mov rax, qword ptr [rax]; ret; 
0x0000000000471ea0: mov rax, qword ptr [rdi + 0x48]; mov eax, dword ptr [rax + 0x4c]; ret; 
0x0000000000418630: mov rax, qword ptr [rdi + 0x68]; ret; 
0x000000000048d130: mov rax, qword ptr [rdi + 0x90]; ret; 
0x000000000048d180: mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000048d1c0: mov rax, qword ptr [rdi + 0xa0]; ret; 
0x000000000048d220: mov rax, qword ptr [rdi + 0xa8]; ret; 
0x000000000048d210: mov rax, qword ptr [rdi + 0xb0]; ret; 
0x000000000048d1d0: mov rax, qword ptr [rdi + 0xb8]; ret; 
0x00000000004182d4: mov rax, qword ptr [rdi]; mov qword ptr [rdx], rax; ret; 
0x000000000047f38a: mov rax, qword ptr [rip + 0x23d017]; mov qword ptr [rsi], rax; ret; 
0x000000000047f319: mov rax, qword ptr [rip + 0x23d090]; ret; 
0x00000000004579d0: mov rax, qword ptr [rip + 0x2644a1]; ret; 
0x000000000044f470: mov rax, qword ptr [rip + 0x26d4b1]; ret; 
0x0000000000418610: mov rax, qword ptr [rip + 0x2a0b09]; ret; 
0x000000000048e071: mov rax, qword ptr [rsi + 0x10]; ret; 
0x000000000048af00: mov rax, qword ptr [rsi + 0xa8]; ret; 
0x000000000048aed3: mov rax, qword ptr [rsi + 0xb0]; ret; 
0x000000000048aef0: mov rax, qword ptr [rsi + 0xb8]; ret; 
0x000000000048e090: mov rax, qword ptr [rsi + 8]; ret; 
0x000000000048d1f5: mov rax, qword ptr [rsp + 0x10]; add rsp, 0x28; ret; 
0x000000000048a969: mov rax, qword ptr [rsp]; add rsp, 0x38; ret; 
0x000000000045ab6a: mov rax, qword ptr fs:[rax]; mov rax, qword ptr [rax + rdi*8 + 0x80]; ret; 
0x0000000000473a70: mov rax, r8; vzeroupper; ret; 
0x00000000004129da: mov rax, rbx; pop rbx; ret; 
0x000000000047e6db: mov rax, rcx; ret; 
0x0000000000412903: mov rax, rdi; ret; 
0x000000000041a714: mov rax, rdx; add rsp, 8; ret; 
0x00000000004481a5: mov rax, rdx; pop rbx; ret; 
0x000000000041a720: mov rax, rdx; ret; 
0x000000000041dbdc: mov rax, rsi; pop rbx; ret; 
0x000000000041dc10: mov rax, rsi; ret; 
0x000000000048d652: mov rbp, qword ptr [rbp]; mov rsp, rcx; ret; 
0x0000000000446f01: mov rcx, rdx; rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000045ab4e: mov rdx, -0x20; mov qword ptr fs:[rdx], rax; ret; 
0x0000000000435540: mov rdx, qword ptr [rsi]; mov qword ptr [rdi], rdx; ret; 
0x000000000048d656: mov rsp, rcx; ret; 
0x0000000000400b84: mov rsp, rsi; ret; 
0x00000000004206ee: mov ss, word ptr [rcx + 0x39480029]; ret; 
0x0000000000438515: mov word ptr [r9 - 2], cx; ret; 
0x00000000004448ac: mov word ptr [rdi + 0x10], cx; lea rax, [rdi + 0x11]; ret; 
0x000000000044421c: mov word ptr [rdi + 0x10], cx; ret; 
0x00000000004449b4: mov word ptr [rdi + 0x18], cx; lea rax, [rdi + 0x19]; ret; 
0x0000000000444304: mov word ptr [rdi + 0x18], cx; ret; 
0x0000000000435777: mov word ptr [rdi + 1], dx; mov word ptr [rdi], cx; ret; 
0x0000000000444158: mov word ptr [rdi + 4], dx; ret; 
0x00000000004447ca: mov word ptr [rdi + 8], dx; lea rax, [rdi + 9]; ret; 
0x000000000044419a: mov word ptr [rdi + 8], dx; ret; 
0x0000000000447caa: mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], cx; ret; 
0x0000000000446f44: mov word ptr [rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x000000000042f84c: mov word ptr [rdi - 2], cx; ret; 
0x000000000042f664: mov word ptr [rdi - 2], dx; ret; 
0x0000000000444123: mov word ptr [rdi], cx; mov byte ptr [rdi + 2], dh; ret; 
0x0000000000446c82: mov word ptr [rdi], cx; mov word ptr [rsi - 2], cx; ret; 
0x000000000043577b: mov word ptr [rdi], cx; ret; 
0x0000000000447e34: mov word ptr [rdi], cx; vzeroupper; ret; 
0x0000000000444733: mov word ptr [rdi], dx; lea rax, [rdi + 1]; ret; 
0x00000000004357e3: mov word ptr [rdi], dx; ret; 
0x0000000000438512: mov word ptr [rdi], si; mov word ptr [r9 - 2], cx; ret; 
0x0000000000446f49: mov word ptr [rdi], si; ret; 
0x0000000000443c98: mov word ptr [rdx + 4], ax; lea rax, [rdx + 5]; ret; 
0x00000000004424d8: mov word ptr [rdx + 4], ax; mov rax, rdi; ret; 
0x0000000000443c43: mov word ptr [rdx], ax; lea rax, [rdx + 1]; ret; 
0x0000000000442493: mov word ptr [rdx], ax; mov rax, rdi; ret; 
0x0000000000446c85: mov word ptr [rsi - 2], cx; ret; 
0x0000000000446f43: mov word ptr ss:[rdi + rdx - 2], cx; mov word ptr [rdi], si; ret; 
0x000000000044bf3c: movabs al, byte ptr [0x4810488948ffffff]; mov dword ptr [rax + 8], edx; ret; 
0x0000000000447417: movabs al, byte ptr [0x77f8c5237f7ec1c4]; ret; 
0x00000000004441f0: movdqu xmm0, xmmword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000444a6d: movdqu xmmword ptr [rdi + 0x10], xmm2; lea rax, [rdi + 0x1f]; ret; 
0x00000000004443bd: movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x00000000004352ff: movdqu xmmword ptr [rdi + 0xd], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000444a0d: movdqu xmmword ptr [rdi + 0xd], xmm2; lea rax, [rdi + 0x1c]; ret; 
0x000000000044435d: movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x000000000043528f: movdqu xmmword ptr [rdi + 0xe], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000444a2d: movdqu xmmword ptr [rdi + 0xe], xmm2; lea rax, [rdi + 0x1d]; ret; 
0x000000000044437d: movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000444a4d: movdqu xmmword ptr [rdi + 0xf], xmm2; lea rax, [rdi + 0x1e]; ret; 
0x000000000044439d: movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x000000000043567f: movdqu xmmword ptr [rdi + 5], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043560f: movdqu xmmword ptr [rdi + 6], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x000000000043559f: movdqu xmmword ptr [rdi + 7], xmm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000447c17: movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x0000000000447ba4: movdqu xmmword ptr [rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000447c1d: movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x00000000004349ab: movdqu xmmword ptr [rdi - 0x10], xmm0; ret; 
0x0000000000434a1b: movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000434f46: movdqu xmmword ptr [rdi - 0x15], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000434ec6: movdqu xmmword ptr [rdi - 0x16], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000434e46: movdqu xmmword ptr [rdi - 0x17], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000434dc6: movdqu xmmword ptr [rdi - 0x18], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000434b36: movdqu xmmword ptr [rdi - 0x1d], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000434aa6: movdqu xmmword ptr [rdi - 0x1e], xmm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000444884: movdqu xmmword ptr [rdi], xmm0; lea rax, [rdi + 0xf]; ret; 
0x0000000000444204: movdqu xmmword ptr [rdi], xmm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x0000000000444247: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000444237: movdqu xmmword ptr [rdi], xmm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x00000000004442b8: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000444278: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000444298: movdqu xmmword ptr [rdi], xmm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000444218: movdqu xmmword ptr [rdi], xmm0; mov word ptr [rdi + 0x10], cx; ret; 
0x00000000004443b9: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x0000000000444359: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x0000000000444379: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x0000000000444399: movdqu xmmword ptr [rdi], xmm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x00000000004351ca: movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000435224: movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000447ba3: movdqu xmmword ptr fs:[rdi + rdx - 0x10], xmm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x00000000004441f1: movq mm0, qword ptr [rsi]; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000444a6e: movq qword ptr [rdi + 0x10], mm2; lea rax, [rdi + 0x1f]; ret; 
0x00000000004443be: movq qword ptr [rdi + 0x10], mm2; ret; 
0x0000000000435300: movq qword ptr [rdi + 0xd], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000444a0e: movq qword ptr [rdi + 0xd], mm2; lea rax, [rdi + 0x1c]; ret; 
0x000000000044435e: movq qword ptr [rdi + 0xd], mm2; ret; 
0x0000000000435290: movq qword ptr [rdi + 0xe], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000444a2e: movq qword ptr [rdi + 0xe], mm2; lea rax, [rdi + 0x1d]; ret; 
0x000000000044437e: movq qword ptr [rdi + 0xe], mm2; ret; 
0x0000000000444a4e: movq qword ptr [rdi + 0xf], mm2; lea rax, [rdi + 0x1e]; ret; 
0x000000000044439e: movq qword ptr [rdi + 0xf], mm2; ret; 
0x0000000000435680: movq qword ptr [rdi + 5], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000435610: movq qword ptr [rdi + 6], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x00000000004355a0: movq qword ptr [rdi + 7], mm0; movdqu xmmword ptr [rdi], xmm1; ret; 
0x0000000000447c18: movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi + rdx - 0x20], xmm0; ret; 
0x0000000000447ba5: movq qword ptr [rdi + rdx - 0x10], mm0; movdqu xmmword ptr [rdi], xmm0; ret; 
0x0000000000447c1e: movq qword ptr [rdi + rdx - 0x20], mm0; ret; 
0x00000000004349ac: movq qword ptr [rdi - 0x10], mm0; ret; 
0x0000000000434a1c: movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000434f47: movq qword ptr [rdi - 0x15], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000434ec7: movq qword ptr [rdi - 0x16], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000434e47: movq qword ptr [rdi - 0x17], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000434dc7: movq qword ptr [rdi - 0x18], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000434b37: movq qword ptr [rdi - 0x1d], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000434aa7: movq qword ptr [rdi - 0x1e], mm0; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000444885: movq qword ptr [rdi], mm0; lea rax, [rdi + 0xf]; ret; 
0x0000000000444205: movq qword ptr [rdi], mm0; mov byte ptr [rdi + 0x10], dh; ret; 
0x0000000000444248: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0x10], ecx; ret; 
0x0000000000444238: movq qword ptr [rdi], mm0; mov dword ptr [rdi + 0xf], ecx; ret; 
0x00000000004442b9: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0x10], rcx; ret; 
0x0000000000444279: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0xe], rcx; ret; 
0x0000000000444299: movq qword ptr [rdi], mm0; mov qword ptr [rdi + 0xf], rcx; ret; 
0x0000000000444219: movq qword ptr [rdi], mm0; mov word ptr [rdi + 0x10], cx; ret; 
0x00000000004443ba: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0x10], xmm2; ret; 
0x000000000044435a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x000000000044437a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xe], xmm2; ret; 
0x000000000044439a: movq qword ptr [rdi], mm0; movdqu xmmword ptr [rdi + 0xf], xmm2; ret; 
0x00000000004351cb: movq qword ptr [rdi], mm0; ret; 
0x0000000000435225: movq qword ptr [rdi], mm1; ret; 
0x000000000044d398: movsb byte ptr [rdi], byte ptr [rsi]; add dword ptr [rdx], 0x39d23100; ret; 
0x0000000000446ea5: movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x0000000000446e97: movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x000000000047f8fc: movsb byte ptr [rdi], byte ptr [rsi]; xor eax, eax; ret; 
0x00000000004782e7: movsd dword ptr [rdi], dword ptr [rsi]; ret 2; 
0x0000000000482d42: movsd dword ptr [rdi], dword ptr [rsi]; ret; 
0x0000000000480e2b: movsx eax, cl; neg eax; ret; 
0x0000000000480ed0: movsx eax, dl; sub eax, ecx; ret; 
0x0000000000419181: movsxd rax, dword ptr [rsi]; sub al, byte ptr [rax]; ret; 
0x0000000000446ae4: movsxd rax, ecx; ret; 
0x0000000000423d36: movsxd rcx, dword ptr [rax - 0x7d]; ret 0xe901; 
0x0000000000445f9c: movsxd rsi, esi; ret 0x7520; 
0x000000000044705f: movups xmmword ptr [r11], xmm4; ret; 
0x00000000004470e6: movups xmmword ptr [r11], xmm8; ret; 
0x00000000004470e7: movups xmmword ptr [rbx], xmm0; ret; 
0x0000000000447060: movups xmmword ptr [rbx], xmm4; ret; 
0x000000000044705b: movups xmmword ptr [rcx - 0x30], xmm0; movups xmmword ptr [r11], xmm4; ret; 
0x000000000044705a: movups xmmword ptr [rcx - 0x30], xmm8; movups xmmword ptr [r11], xmm4; ret; 
0x00000000004470e2: movups xmmword ptr [rdi + 0x30], xmm7; movups xmmword ptr [r11], xmm8; ret; 
0x0000000000446e42: movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000446fc4: movups xmmword ptr [rdi + rdx - 0x10], xmm2; movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x0000000000446fc9: movups xmmword ptr [rdi + rdx - 0x20], xmm3; ret; 
0x0000000000446fa6: movups xmmword ptr [rdi + rdx - 0x40], xmm7; ret; 
0x0000000000446e3f: movups xmmword ptr [rdi], xmm0; movups xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000475801: movzx eax, al; add rsp, 0x58; ret; 
0x000000000048835c: movzx eax, al; neg eax; ret; 
0x000000000041874f: movzx eax, byte ptr [rax]; ret; 
0x0000000000425bd8: movzx eax, byte ptr [rdi + rdx]; sub eax, ecx; ret; 
0x0000000000425bf3: movzx eax, byte ptr [rdi]; sub eax, ecx; ret; 
0x0000000000412bc0: movzx eax, byte ptr [rdx]; ret; 
0x00000000004480f0: movzx eax, cl; pop rbx; ret; 
0x000000000042d094: movzx ecx, byte ptr [rsi - 1]; sub eax, ecx; ret; 
0x0000000000446f18: movzx ecx, byte ptr [rsi]; mov byte ptr [rdi], cl; ret; 
0x000000000042bf73: movzx ecx, byte ptr [rsi]; sub eax, ecx; ret; 
0x0000000000425db1: movzx edx, byte ptr [rdx + rcx]; sub eax, edx; ret; 
0x000000000042a228: movzx edx, byte ptr [rsi + rcx]; sub eax, edx; ret; 
0x0000000000425c43: movzx edx, byte ptr [rsi + rdx]; sub eax, edx; ret; 
0x0000000000445fc4: movzx edx, byte ptr [rsi - 0x10]; sub eax, edx; ret; 
0x0000000000446024: movzx edx, byte ptr [rsi - 0xa]; sub eax, edx; ret; 
0x0000000000445ff4: movzx edx, byte ptr [rsi - 0xd]; sub eax, edx; ret; 
0x0000000000445fe4: movzx edx, byte ptr [rsi - 0xe]; sub eax, edx; ret; 
0x0000000000435170: movzx edx, byte ptr [rsi - 1]; mov byte ptr [rdi - 1], dl; ret; 
0x000000000042ce47: movzx edx, byte ptr [rsi - 1]; sub eax, edx; ret; 
0x0000000000445fab: movzx edx, byte ptr [rsi - 9]; sub eax, edx; ret; 
0x0000000000435850: movzx edx, byte ptr [rsi]; mov byte ptr [rdi], dl; ret; 
0x000000000042bab3: movzx edx, byte ptr [rsi]; sub eax, edx; ret; 
0x000000000042bad9: movzx edx, dl; sub eax, edx; ret; 
0x00000000004350f0: movzx edx, word ptr [rsi - 2]; mov word ptr [rdi - 2], dx; ret; 
0x00000000004357e0: movzx edx, word ptr [rsi]; mov word ptr [rdi], dx; ret; 
0x000000000041878f: neg eax; ret; 
0x00000000004236db: nop dword ptr [rax + rax]; mov eax, 0x16; ret; 
0x000000000041876b: nop dword ptr [rax + rax]; mov eax, 0xffffffff; ret; 
0x000000000041786b: nop dword ptr [rax + rax]; mov rax, -1; ret; 
0x0000000000400aa3: nop dword ptr [rax + rax]; pop rbp; ret; 
0x0000000000484b9b: nop dword ptr [rax + rax]; pop rbx; ret; 
0x00000000004464fb: nop dword ptr [rax + rax]; xor eax, eax; ret; 
0x000000000047481c: nop dword ptr [rax]; add rax, 1; ret; 
0x000000000042345d: nop dword ptr [rax]; mov eax, 0x16; ret; 
0x0000000000471e85: nop dword ptr [rax]; mov eax, 0xffffffff; ret; 
0x000000000048548c: nop dword ptr [rax]; mov eax, dword ptr [rip + 0x23742a]; ret; 
0x000000000044f46d: nop dword ptr [rax]; mov rax, qword ptr [rip + 0x26d4b1]; ret; 
0x000000000041a71c: nop dword ptr [rax]; mov rax, rdx; ret; 
0x000000000047bb4c: nop dword ptr [rax]; or byte ptr [rdi + 0x315], 4; ret; 
0x0000000000400ae5: nop dword ptr [rax]; pop rbp; ret; 
0x000000000044871c: nop dword ptr [rax]; pop rbx; ret; 
0x000000000042bf3d: nop dword ptr [rax]; ret; 
0x0000000000416c25: nop dword ptr [rax]; xor eax, eax; ret; 
0x00000000004236da: nop word ptr [rax + rax]; mov eax, 0x16; ret; 
0x000000000047baaa: nop word ptr [rax + rax]; mov eax, 0xffffffff; ret; 
0x0000000000484b9a: nop word ptr [rax + rax]; pop rbx; ret; 
0x00000000004482fa: nop word ptr [rax + rax]; xor eax, eax; ret; 
0x0000000000487cff: nop; add rsp, 8; ret; 
0x00000000004191d3: nop; mov dword ptr [rip + 0x2a2bba], eax; ret; 
0x0000000000416aef: nop; mov eax, 0xffffffff; ret; 
0x0000000000419053: nop; mov qword ptr [rip + 0x2a07ed], rax; ret; 
0x0000000000419043: nop; mov qword ptr [rip + 0x2a07f5], rax; ret; 
0x0000000000418ff3: nop; mov qword ptr [rip + 0x2a07fd], rax; ret; 
0x0000000000418fe3: nop; mov qword ptr [rip + 0x2a0815], rax; ret; 
0x000000000048d17f: nop; mov rax, qword ptr [rdi + 0x98]; ret; 
0x000000000048aeef: nop; mov rax, qword ptr [rsi + 0xb8]; ret; 
0x000000000048e08f: nop; mov rax, qword ptr [rsi + 8]; ret; 
0x0000000000400b92: nop; pop rbp; ret; 
0x00000000004004cf: nop; ret; 
0x000000000041475f: nop; xor eax, eax; ret; 
0x000000000042a3a7: or al, 0; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043f3df: or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042a3d5: or al, 0; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000473c48: or al, 0; add byte ptr [rbx + rax - 0xd], dh; ret; 
0x000000000046bd8c: or al, 0; add byte ptr [rcx + 1], al; ret 0x8b48; 
0x000000000046ebb3: or al, 0x7e; ret 0x8944; 
0x000000000045e0db: or al, 0x83; ret; 
0x000000000046334a: or al, 0x89; ret 0xc689; 
0x000000000044811b: or al, 0x89; ret 0xe283; 
0x0000000000411398: or al, 0xe8; ret 0xec; 
0x000000000045664f: or al, 0xe9; ret; 
0x0000000000471b2c: or al, 0xeb; ret 0x5590; 
0x0000000000435373: or al, 0xf3; movq qword ptr [rdi], mm1; ret; 
0x0000000000466aad: or al, 0xf6; ret 0xf01; 
0x0000000000422d01: or al, 9; ret 0xbae9; 
0x000000000042a587: or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043df71: or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042a5b5: or al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000040aafc: or al, byte ptr [rbx - 0x7bf0fd07]; ret 0x18; 
0x000000000040766d: or al, byte ptr [rbx - 0x7bf0fd07]; ret; 
0x000000000044c566: or al, byte ptr [rcx + rcx*8 - 0x7cb7ed8c]; ret 0x4801; 
0x00000000004b3e2b: or al, byte ptr [rcx]; ret; 
0x000000000040add8: or al, ch; ret 0xffb2; 
0x0000000000408397: or al, ch; ret; 
0x000000000041cf67: or al, ch; xchg eax, ebx; ret 0xffff; 
0x0000000000424430: or bh, dh; ret 0; 
0x000000000048e89d: or bl, ch; adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000435533: or bl, dh; movq qword ptr [rdi], mm1; ret; 
0x000000000044a337: or bl, dh; ret; 
0x000000000044fcc6: or byte ptr [r15], 0x8e; ret 1; 
0x0000000000411571: or byte ptr [r8 + 0x29], r9b; ret; 
0x000000000040e16d: or byte ptr [r8 + 0x39], cl; ret; 
0x00000000004917a9: or byte ptr [r8 + 0x7a840f01], bpl; add eax, 0x89490000; ret 0x8349; 
0x000000000048460f: or byte ptr [r8 + 2], r15b; ret; 
0x000000000041dcd2: or byte ptr [r8 - 0x75], cl; or byte ptr [rbx + 0x94807e0], r8b; ret; 
0x000000000047f925: or byte ptr [r8 - 0x7b], cl; sal byte ptr [rsp + rsi + 0x48], 0x89; ret; 
0x0000000000478cb2: or byte ptr [r8 - 0x7b], r9b; ror byte ptr [rdi], 0x84; ret; 
0x0000000000484654: or byte ptr [r9 + 0x2b802], r9b; add byte ptr [rax], al; ret; 
0x0000000000442527: or byte ptr [r9 - 0x76b7f7be], cl; clc; ret; 
0x0000000000411572: or byte ptr [rax + 0x29], cl; ret; 
0x0000000000452928: or byte ptr [rax + 0x39], cl; ret 0x8e0f; 
0x000000000040e16e: or byte ptr [rax + 0x39], cl; ret; 
0x00000000004917aa: or byte ptr [rax + 0x7a840f01], ch; add eax, 0x89490000; ret 0x8349; 
0x00000000004acff6: or byte ptr [rax + 0xb], cl; add dh, byte ptr [rbx + 0xa]; ret; 
0x00000000004197f6: or byte ptr [rax + 0xf], cl; scasd eax, dword ptr [rdi]; ret 0x8948; 
0x000000000047d721: or byte ptr [rax + 1], cl; ret; 
0x0000000000484610: or byte ptr [rax + 2], bh; ret; 
0x0000000000419093: or byte ptr [rax - 0x75], cl; adc byte ptr [rcx - 0x7d], al; ret; 
0x000000000041dcd3: or byte ptr [rax - 0x75], cl; or byte ptr [rbx + 0x94807e0], r8b; ret; 
0x000000000044246d: or byte ptr [rax - 0x77], cl; clc; ret; 
0x000000000047f7e0: or byte ptr [rax - 0x77], cl; ret; 
0x000000000048942a: or byte ptr [rax - 0x77], r9b; ret; 
0x0000000000478cb3: or byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x000000000048967e: or byte ptr [rax - 0x7b], cl; sal byte ptr [rax + rax*8 + 0x49], 0x83; ret 0xf608; 
0x000000000047f926: or byte ptr [rax - 0x7b], cl; sal byte ptr [rsp + rsi + 0x48], 0x89; ret; 
0x00000000004896d7: or byte ptr [rax - 0x7b], cl; sal byte ptr [rsp + rsi*4 + 0x48], 0x83; ret 0xf608; 
0x000000000047b567: or byte ptr [rax - 0x7d], cl; ret 0x101; 
0x000000000047dbd2: or byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000044c420: or byte ptr [rax - 0x7d], cl; ret 0xf01; 
0x000000000044ab52: or byte ptr [rax - 0x7d], cl; ret; 
0x000000000041a3bb: or byte ptr [rax], al; add byte ptr [rax + 0x39], cl; ret 0x840f; 
0x000000000042a857: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043e111: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042a795: or byte ptr [rax], al; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000044e821: or byte ptr [rax], al; add byte ptr [rax], al; ret; 
0x000000000043f7ce: or byte ptr [rax], r8b; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000048d0ff: or byte ptr [rbp + 0x1a], dh; mov rax, qword ptr [rax]; ret; 
0x00000000004859db: or byte ptr [rbp + 0x39481e04], cl; ret 0x830f; 
0x0000000000482a91: or byte ptr [rbp + 0x39], cl; ret 0x8b48; 
0x00000000004856f6: or byte ptr [rbp + 0x440f4cf6], al; ret; 
0x000000000048d16e: or byte ptr [rbp + 4], dh; mov qword ptr [rax], rdx; ret; 
0x0000000000482713: or byte ptr [rbp + rcx*4 + 0x24], cl; ret 0x8d4a; 
0x0000000000492113: or byte ptr [rbp - 0x77], cl; ret; 
0x000000000044a1bc: or byte ptr [rbp - 0x7b], cl; test byte ptr [rdi], 0x94; ret 0xc221; 
0x0000000000449cd3: or byte ptr [rbp - 0x7b], cl; test byte ptr [rdi], 0x94; ret 0xca21; 
0x0000000000401bf5: or byte ptr [rbx + 0x5d], bl; ret; 
0x000000000044b00e: or byte ptr [rbx + 0x94801e2], al; ret 0x8949; 
0x000000000041dcd7: or byte ptr [rbx + 0x94807e0], al; ret; 
0x000000000041dcd6: or byte ptr [rbx + 0x94807e0], r8b; ret; 
0x000000000040fd69: or byte ptr [rbx - 0x76fefbbe], al; ret 0xe281; 
0x000000000048b903: or byte ptr [rbx], ah; add byte ptr [rax], cl; ret; 
0x000000000047b5d9: or byte ptr [rbx], al; add byte ptr [rax], al; ret; 
0x00000000004843fb: or byte ptr [rcx + 0x29], cl; ret 0x894c; 
0x0000000000484655: or byte ptr [rcx + 0x2b802], cl; add byte ptr [rax], al; ret; 
0x000000000048157d: or byte ptr [rcx + 0x33], cl; add byte ptr [r8 + 9], r9b; ret 0x840f; 
0x0000000000479102: or byte ptr [rcx + 0x33], cl; add dword ptr [rax + 9], ecx; ret 0x1475; 
0x00000000004790d4: or byte ptr [rcx + 0x33], cl; add dword ptr [rax + 9], ecx; ret 0xe75; 
0x000000000048821b: or byte ptr [rcx + 1], cl; ret 0x894c; 
0x000000000044b07b: or byte ptr [rcx - 0x75], cl; add al, byte ptr [rbx + 0x94801e0]; ret 0x8949; 
0x0000000000442528: or byte ptr [rcx - 0x76b7f7be], cl; clc; ret; 
0x000000000040d49a: or byte ptr [rcx - 0x77], cl; ret 0x8b4c; 
0x0000000000420868: or byte ptr [rcx - 0x77], cl; ret; 
0x000000000041cd96: or byte ptr [rcx - 0xa], al; ret 0xf04; 
0x000000000044a816: or byte ptr [rcx - 0xa], al; ret; 
0x000000000047bb50: or byte ptr [rdi + 0x315], 4; ret; 
0x000000000047baa0: or byte ptr [rdi + 0x315], 4; xor eax, eax; ret; 
0x000000000044fcc7: or byte ptr [rdi], 0x8e; ret 1; 
0x000000000044b582: or byte ptr [rdi], ah; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000483053: or byte ptr [rdi], cl; xchg eax, edx; ret 0x8949; 
0x0000000000401251: or byte ptr [rdi], cl; xchg eax, esp; ret 0xd284; 
0x0000000000457ad1: or cl, byte ptr [rax + 0x39]; ret 0x1176; 
0x0000000000410ad4: or cl, byte ptr [rax + 1]; ret 0x8948; 
0x00000000004239d2: or cl, byte ptr [rax - 0x7d]; ret 0x4801; 
0x000000000045d4ce: or cl, byte ptr [rax - 0x7d]; ret 0x8d04; 
0x00000000004103c7: or cl, byte ptr [rax - 0x7d]; ret; 
0x000000000047b575: or cl, ch; ret; 
0x0000000000435453: or dh, bl; movq qword ptr [rdi], mm1; ret; 
0x000000000048f4a5: or dh, bl; ret; 
0x000000000044ce1c: or dh, dh; ret 0x8902; 
0x000000000041a9b7: or dh, dh; ret 0xf02; 
0x000000000040da6b: or dword ptr [rax + rax*8 - 0x38b79f8c], eax; ret 0xfff0; 
0x000000000045a6ce: or dword ptr [rax - 0x7d], ecx; ret 0x4101; 
0x0000000000440cee: or dword ptr [rax - 1], ecx; ret 0xc148; 
0x000000000042a767: or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043f67f: or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042a6a5: or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x0000000000488a60: or dword ptr [rax], eax; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000045e9e5: or dword ptr [rax], eax; add byte ptr [rcx - 0x77], cl; ret; 
0x0000000000418613: or dword ptr [rbx], ecx; sub al, byte ptr [rax]; ret; 
0x000000000047fc96: or dword ptr [rip + 0x23a54b], 1; pop rbx; ret; 
0x00000000004b3e28: or eax, 0x10a0303; ret; 
0x00000000004b3e80: or eax, 0x1370303; ret; 
0x0000000000444a11: or eax, 0x1c478d48; ret; 
0x00000000004b3e18: or eax, 0x34b0303; ret; 
0x00000000004b3e4c: or eax, 0x35b0303; ret; 
0x000000000046f0c2: or eax, 0x401f0f08; add byte ptr [rax - 0x7d], cl; ret 0x4404; 
0x000000000046e92a: or eax, 0x401f0f08; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000045a7da: or eax, 0x441f0f; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000440302: or eax, 0x48c0bc0f; lea eax, [rdi + rax]; ret; 
0x0000000000444358: or eax, 0x77f0ff3; movdqu xmmword ptr [rdi + 0xd], xmm2; ret; 
0x000000000042a2b7: or eax, 0x83480000; ret 0x4910; 
0x000000000043dc31: or eax, 0x83480000; ret 0xe910; 
0x000000000042a2e5: or eax, 0x83480000; ret 0xeb10; 
0x0000000000474482: or eax, 0xc2bc0f48; shr rax, 2; ret; 
0x000000000049edf9: or eax, 0xdbf0000; add byte ptr [rax], al; ret 0xd; 
0x0000000000454205: or eax, 0xea810000; ret 0; 
0x0000000000435303: or eax, 0xf7f0ff3; ret; 
0x00000000004494ed: or eax, 0xffffffff; ret; 
0x000000000042bf39: or eax, 1; ret; 
0x000000000042a497: or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x000000000043ddd1: or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042a4c5: or eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x00000000004acff8: or eax, dword ptr [rdx]; jae 0xad006; ret; 
0x00000000004b515a: or eax, dword ptr [rdx]; ret 0xe0a; 
0x00000000004354c3: or ebx, esi; movq qword ptr [rdi], mm1; ret; 
0x0000000000414776: or ebx, esi; ret; 
0x000000000042324f: or ecx, dword ptr [rax + 0x63]; ret; 
0x0000000000413667: or ecx, dword ptr [rax + 1]; ret 0x8949; 
0x00000000004105e8: or ecx, dword ptr [rax - 0x7b]; ror byte ptr [rdi], 0x94; ret 0xdaf7; 
0x0000000000490f7f: or ecx, dword ptr [rax - 0x7d]; ret 0x4810; 
0x000000000042418c: or ecx, dword ptr [rax - 0x7d]; ret; 
0x00000000004828f3: or ecx, dword ptr [rbp + 0x39]; ret 0x860f; 
0x00000000004353e3: or esi, ebx; movq qword ptr [rdi], mm1; ret; 
0x000000000045af54: or esi, ebx; ret; 
0x0000000000435532: or r11b, r14b; movq qword ptr [rdi], mm1; ret; 
0x00000000004354c2: or r11d, r14d; movq qword ptr [rdi], mm1; ret; 
0x0000000000435452: or r14b, r11b; movq qword ptr [rdi], mm1; ret; 
0x00000000004353e2: or r14d, r11d; movq qword ptr [rdi], mm1; ret; 
0x00000000004b5159: or r8d, dword ptr [r10]; ret 0xe0a; 
0x0000000000457ad0: or r9b, byte ptr [r8 + 0x39]; ret 0x1176; 
0x00000000004b3e7f: or rax, 0x1370303; ret; 
0x00000000004b3e17: or rax, 0x34b0303; ret; 
0x00000000004b3e4b: or rax, 0x35b0303; ret; 
0x000000000046f0c1: or rax, 0x401f0f08; add byte ptr [rax - 0x7d], cl; ret 0x4404; 
0x000000000046e929: or rax, 0x401f0f08; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x00000000004494ec: or rax, 0xffffffffffffffff; ret; 
0x00000000004acff7: or rax, qword ptr [rdx]; jae 0xad006; ret; 
0x0000000000422db8: out 0x48, eax; sub eax, 0x10; ret; 
0x0000000000434cca: out 0xf3, al; movq qword ptr [rdi - 0x10], mm1; ret; 
0x0000000000434d4a: out 0xf3, eax; movq qword ptr [rdi - 0x10], mm1; ret; 
0x00000000004a9748: out 0xf5, eax; mov ch, 0xab; ret; 
0x0000000000461be2: out 0xff, eax; dec dword ptr [rbp + 0x63]; ret 0x20be; 
0x0000000000402b8d: out 1, al; add byte ptr [rax - 0x77], cl; ret 0x8548; 
0x000000000047613e: out 2, al; add byte ptr [rax + 9], cl; ret 0x850f; 
0x00000000004350da: out dx, al; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x000000000043515a: out dx, eax; movdqu xmmword ptr [rdi - 0x10], xmm1; ret; 
0x0000000000446743: out dx, eax; ret 0xf66; 
0x000000000048ab07: out dx, eax; xor byte ptr [rax - 0x77], cl; ret 0x2148; 
0x00000000004a9323: outsb dx, byte ptr [rsi]; ja 0xa92a9; ret 0x48f; 
0x000000000047d720: outsb dx, byte ptr [rsi]; or byte ptr [rax + 1], cl; ret; 
0x00000000004a7064: outsb dx, byte ptr [rsi]; sahf; ret 0x38ae; 
0x0000000000424998: outsd dx, dword ptr [rsi]; fmul qword ptr [rcx - 0x7d]; ret 0x7f10; 
0x0000000000438ebe: outsd dx, dword ptr [rsi]; fmul qword ptr [rcx - 0x7d]; ret 0xf10; 
0x000000000042d61d: outsd dx, dword ptr [rsi]; push rdi; ret 0xff3; 
0x000000000042d57d: outsd dx, dword ptr [rsi]; push rdi; ret; 
0x00000000004633ed: outsd dx, dword ptr [rsi]; ret 0x290f; 
0x000000000041a30a: outsd dx, dword ptr [rsi]; ret 0x4466; 
0x000000000046616d: outsd dx, dword ptr [rsi]; ret 0x4ce8; 
0x00000000004a7a26: outsd dx, dword ptr [rsi]; ret 0x5ae4; 
0x0000000000419d42: outsd dx, dword ptr [rsi]; ret 0x8348; 
0x0000000000463416: outsd dx, dword ptr [rsi]; ret 0xa3e8; 
0x0000000000466149: outsd dx, dword ptr [rsi]; ret 0xe583; 
0x000000000047335a: outsd dx, dword ptr [rsi]; ret 0xf66; 
0x00000000004466ec: outsd dx, dword ptr [rsi]; ret; 
0x00000000004a7a25: outsd dx, dword ptr es:[rsi]; ret 0x5ae4; 
0x0000000000474814: pcmpeqb mm3, qword ptr [rcx]; add rax, 2; ret; 
0x00000000004747ff: pcmpeqb mm3, qword ptr [rsi]; ret; 
0x00000000004a8e25: pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f]; mov cs, edi; ret 0x8b36; 
0x00000000004a8e26: pcmpeqw mm5, qword ptr [rbp - 0x5f]; mov cs, edi; ret 0x8b36; 
0x0000000000447e06: pextrw edi, mm0, 0x77; ret; 
0x000000000044bd35: pop r10; ret; 
0x000000000040daf9: pop r12; pop r13; ret; 
0x0000000000405e04: pop r12; ret; 
0x0000000000410130: pop r13; pop r14; ret; 
0x000000000040dafb: pop r13; ret; 
0x0000000000400693: pop r14; pop r15; ret; 
0x000000000040f89d: pop r14; pop rbp; ret; 
0x0000000000410132: pop r14; ret; 
0x0000000000402604: pop r15; pop rbp; ret; 
0x0000000000400695: pop r15; ret; 
0x0000000000492112: pop rax; or byte ptr [rbp - 0x77], cl; ret; 
0x00000000004155a4: pop rax; ret; 
0x0000000000486b83: pop rbp; mov eax, 0x89fd8945; ret 0xe283; 
0x0000000000405e03: pop rbp; pop r12; ret; 
0x0000000000410131: pop rbp; pop r14; ret; 
0x0000000000484408: pop rbp; pop rbx; ret; 
0x0000000000400aa8: pop rbp; ret; 
0x0000000000448156: pop rbx; and eax, 0x7ff80000; ret; 
0x000000000047fcb7: pop rbx; mov eax, dword ptr fs:[rax]; ret; 
0x00000000004481a1: pop rbx; mov eax, eax; ret; 
0x0000000000457b2c: pop rbx; pop r12; ret; 
0x000000000048ab89: pop rbx; pop r14; ret; 
0x0000000000401bf6: pop rbx; pop rbp; ret; 
0x00000000004a98e0: pop rbx; ret 0x6f9; 
0x0000000000400de8: pop rbx; ret; 
0x00000000004a7b61: pop rdi; mov dh, 0x4e; ret 0x474c; 
0x000000000044a815: pop rdi; or byte ptr [rcx - 0xa], al; ret; 
0x0000000000402605: pop rdi; pop rbp; ret; 
0x000000000046faad: pop rdi; ret 0xfffd; 
0x0000000000438bfd: pop rdi; ret 5; 
0x0000000000400696: pop rdi; ret; 
0x000000000042ab26: pop rdx; add eax, 0x83480000; ret 0x4910; 
0x00000000004a8781: pop rdx; je 0xa8748; ret 0xacfc; 
0x000000000044bd34: pop rdx; pop r10; ret; 
0x0000000000481b77: pop rdx; pop rbx; ret; 
0x000000000044bd59: pop rdx; pop rsi; ret; 
0x000000000044bd36: pop rdx; ret; 
0x0000000000400694: pop rsi; pop r15; ret; 
0x000000000040f89e: pop rsi; pop rbp; ret; 
0x0000000000410133: pop rsi; ret; 
0x000000000043e450: pop rsp; add eax, 0x83480000; ret 0xe910; 
0x000000000040dafa: pop rsp; pop r13; ret; 
0x0000000000401da3: pop rsp; ret; 
0x000000000048c6ce: popfq; ret 0xf45; 
0x0000000000435222: psllq mm1, qword ptr [r15]; jg 0x35237; ret; 
0x0000000000437d42: psllq mm1, qword ptr [r15]; jg 0x37d57; ret; 
0x0000000000435223: psllq mm1, qword ptr [rdi]; jg 0x35237; ret; 
0x0000000000437d43: psllq mm1, qword ptr [rdi]; jg 0x37d57; ret; 
0x000000000045e1d2: push -0x7c000003; ret; 
0x0000000000444b54: push -0x9ffffff; ret 0x7501; 
0x0000000000479a85: push 0x48b4901; and al, 0x83; ret; 
0x00000000004a9322: push 0x6e; ja 0xa92a9; ret 0x48f; 
0x00000000004848fa: push 0x77; and eax, dword ptr [rax]; ret; 
0x00000000004464d8: push qword ptr [rbp + 0x1a]; xor eax, eax; ret; 
0x000000000042bee9: push qword ptr [rbp + 4]; vzeroupper; ret; 
0x000000000041712d: push qword ptr [rbp + rax - 0xa]; ret 0x7401; 
0x00000000004718fe: push qword ptr [rbp + rax - 0xa]; ret 0x7408; 
0x0000000000417596: push qword ptr [rbp + rcx - 0x18]; ret 0x8a; 
0x00000000004494dc: push qword ptr [rbx + 1]; ret; 
0x000000000047a16f: push qword ptr [rcx]; fucomi st(3); ret 0x1f0f; 
0x0000000000454f83: push qword ptr [rcx]; ror byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000475484: push qword ptr [rdi + rax*2 - 0x77]; ret 0xe283; 
0x0000000000411396: push qword ptr [rsp + rcx - 0x18]; ret 0xec; 
0x0000000000418311: push rax; adc byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x000000000041c39d: push rax; adc dh, dh; ret 0xf0f; 
0x0000000000400f30: push rax; and byte ptr [rax + 1], cl; ret 0xb70f; 
0x0000000000467e0a: push rax; call 0xffffffff89547e0f; ret 0x894c; 
0x0000000000470504: push rax; cmp byte ptr [rax + 1], cl; ret; 
0x0000000000450a81: push rax; mov dword ptr [rax + 0x54], edx; ret; 
0x000000000044b00d: push rax; or byte ptr [rbx + 0x94801e2], al; ret 0x8949; 
0x000000000041cd95: push rax; or byte ptr [rcx - 0xa], al; ret 0xf04; 
0x000000000044ce1b: push rax; or dh, dh; ret 0x8902; 
0x000000000041dad2: push rax; or dh, dh; ret 0xf02; 
0x0000000000488505: push rax; pop rbx; ret; 
0x0000000000450a83: push rax; push rsp; ret; 
0x00000000004943f3: push rax; ret; 
0x0000000000418306: push rax; sbb byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x000000000048ca32: push rbp; add byte ptr [rax + 0x63], cl; ret 0xbc80; 
0x000000000047fad8: push rbp; add dword ptr [rax + 0x39], ecx; ret 0x1272; 
0x000000000041039d: push rbp; cmp byte ptr [rax + 0x39], cl; ret; 
0x0000000000459e47: push rbp; ret; 
0x0000000000410946: push rbx; adc byte ptr [rax + 1], cl; ret 0x2b48; 
0x000000000040107f: push rbx; adc byte ptr [rax - 0x7d], cl; ret; 
0x0000000000412da8: push rbx; cmp byte ptr [rax + 0x39], cl; ret 0x2175; 
0x000000000044b21f: push rbx; ret; 
0x000000000041e9b2: push rcx; adc byte ptr [rax + 0x39], cl; ret 0x1f77; 
0x000000000041aceb: push rcx; adc byte ptr [rax + 0x39], cl; ret 0x870f; 
0x000000000041b067: push rcx; adc byte ptr [rax + 0x39], cl; ret 0xb277; 
0x000000000045e646: push rcx; cmp byte ptr [rax + 0x39], cl; ret; 
0x00000000004156ab: push rcx; ret 0xffff; 
0x00000000004197fd: push rcx; sbb byte ptr [rcx + 1], cl; ret 0x8d48; 
0x000000000044482c: push rdi; add eax, 0xc478d48; ret; 
0x000000000042f188: push rdi; clc; ret; 
0x000000000042f300: push rdi; cld; ret; 
0x0000000000416474: push rdi; mov qword ptr [rdi + 8], rax; ret; 
0x0000000000434aca: push rdi; mov qword ptr [rdi - 8], rcx; ret; 
0x00000000004843fa: push rdi; or byte ptr [rcx + 0x29], cl; ret 0x894c; 
0x000000000048821a: push rdi; or byte ptr [rcx + 1], cl; ret 0x894c; 
0x000000000041a9b6: push rdi; or dh, dh; ret 0xf02; 
0x0000000000444a10: push rdi; or eax, 0x1c478d48; ret; 
0x000000000042d61e: push rdi; ret 0xff3; 
0x00000000004235e5: push rdi; ret; 
0x000000000045dd23: push rdi; sbb byte ptr [rax + 0x39], cl; ret 0x850f; 
0x0000000000419120: push rdi; sbb byte ptr [rax + 0x39], cl; ret; 
0x000000000042b338: push rdi; xor eax, eax; ret; 
0x0000000000444163: push rsi; add ecx, dword ptr [rcx + 0x357890f]; ret; 
0x00000000004a66c6: push rsi; ret; 
0x0000000000445fe6: push rsi; sub eax, edx; ret; 
0x0000000000488ffc: push rsp; ret 0x4808; 
0x0000000000481481: push rsp; ret 0xeb30; 
0x0000000000450a84: push rsp; ret; 
0x000000000043d410: pushfq; adc eax, 0x83480000; ret 0xe910; 
0x000000000042a2e4: pushfq; or eax, 0x83480000; ret 0xeb10; 
0x000000000048c707: pushfq; ret 0xf45; 
0x0000000000477e82: pushfq; ret 2; 
0x0000000000405e20: rcr byte ptr [rbp + 0x41], 0x5c; ret; 
0x0000000000465f0f: rcr byte ptr [rbp + 0x41], 1; pop rsp; ret; 
0x0000000000484407: rcr byte ptr [rbp + 0x5b], 1; ret; 
0x000000000040ffd2: rcr byte ptr [rbx + 0x5d], 1; ret; 
0x000000000043d8ec: rcr dword ptr [rdx], 0xf; xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x000000000043d40c: rcr dword ptr [rdx], 0xf; xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000043e5ec: rcr dword ptr [rdx], 0xf; xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x0000000000446ea4: rep movsb byte ptr [rdi], byte ptr [rsi]; cld; ret; 
0x0000000000446e96: rep movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000447bca: rep stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x000000000041ec91: rep stosq qword ptr [rdi], rax; pop rbx; ret; 
0x00000000004006c7: ret 0; 
0x000000000047b56a: ret 0x101; 
0x000000000049f200: ret 0x10; 
0x00000000004843dc: ret 0x114d; 
0x0000000000457ad4: ret 0x1176; 
0x000000000047fadc: ret 0x1272; 
0x000000000047c673: ret 0x13e9; 
0x000000000048aba1: ret 0x145; 
0x0000000000483886: ret 0x1474; 
0x0000000000479108: ret 0x1475; 
0x00000000004758e1: ret 0x1477; 
0x0000000000445f78: ret 0x148; 
0x0000000000404814: ret 0x149; 
0x0000000000438a3f: ret 0x14d; 
0x000000000040b09a: ret 0x14f; 
0x000000000040a29a: ret 0x15d; 
0x000000000046c191: ret 0x1674; 
0x00000000004493de: ret 0x16e9; 
0x000000000042b816: ret 0x1776; 
0x000000000042716a: ret 0x17; 
0x000000000043897c: ret 0x180f; 
0x000000000042b3a5: ret 0x1876; 
0x000000000040ab02: ret 0x18; 
0x0000000000406b9a: ret 0x194; 
0x0000000000457acb: ret 0x1a72; 
0x00000000004a90fa: ret 0x1ad4; 
0x00000000004a788d: ret 0x1b49; 
0x0000000000407cc2: ret 0x1b; 
0x000000000040449a: ret 0x1bb; 
0x000000000048ec6f: ret 0x1be8; 
0x000000000042463a: ret 0x1c6; 
0x000000000045cc49: ret 0x1ce9; 
0x00000000004a0ed0: ret 0x1d4; 
0x00000000004a1668: ret 0x1d5; 
0x0000000000400c41: ret 0x1d89; 
0x00000000004661ba: ret 0x1e4; 
0x000000000040eba2: ret 0x1f0f; 
0x000000000041e9b6: ret 0x1f77; 
0x0000000000459ebd: ret 0x1fe9; 
0x000000000045ab17: ret 0x200; 
0x0000000000477c8b: ret 0x2041; 
0x0000000000449e9c: ret 0x2044; 
0x0000000000461be7: ret 0x20be; 
0x000000000048ab0b: ret 0x2148; 
0x000000000041381d: ret 0x214c; 
0x0000000000412dac: ret 0x2175; 
0x000000000047e878: ret 0x2275; 
0x0000000000440ce8: ret 0x2288; 
0x0000000000490674: ret 0x22; 
0x000000000042474a: ret 0x22a; 
0x000000000042d782: ret 0x2373; 
0x000000000047ad92: ret 0x241a; 
0x00000000004765f2: ret 0x2424; 
0x000000000047263a: ret 0x2459; 
0x0000000000476591: ret 0x2462; 
0x000000000049fed8: ret 0x24; 
0x000000000044a1c4: ret 0x24e9; 
0x0000000000415f5d: ret 0x2501; 
0x0000000000467294: ret 0x2504; 
0x0000000000423663: ret 0x2575; 
0x000000000045cb39: ret 0x25; 
0x000000000048c5a1: ret 0x25e9; 
0x0000000000457aaa: ret 0x2643; 
0x000000000044c7f9: ret 0x26; 
0x000000000044ca72: ret 0x26db; 
0x000000000044b6ea: ret 0x2706; 
0x00000000004737e6: ret 0x2774; 
0x000000000042ef56: ret 0x280f; 
0x000000000042b395: ret 0x2876; 
0x000000000047e8f7: ret 0x28f5; 
0x00000000004633ee: ret 0x290f; 
0x0000000000411567: ret 0x2948; 
0x000000000046632a: ret 0x2949; 
0x000000000040f0b0: ret 0x294c; 
0x000000000041308d: ret 0x294d; 
0x000000000042442a: ret 0x2979; 
0x000000000041df4c: ret 0x29; 
0x000000000041e81a: ret 0x29b0; 
0x000000000046dcf9: ret 0x29e8; 
0x0000000000419f9a: ret 0x2a1d; 
0x0000000000419692: ret 0x2a26; 
0x0000000000415b4a: ret 0x2a61; 
0x0000000000410510: ret 0x2a; 
0x000000000042114a: ret 0x2ab; 
0x000000000040e92a: ret 0x2ade; 
0x000000000041094a: ret 0x2b48; 
0x0000000000422d8b: ret 0x2b74; 
0x000000000041ecd2: ret 0x2b75; 
0x0000000000448042: ret 0x2b77; 
0x00000000004009b5: ret 0x2b8; 
0x000000000048c58f: ret 0x2be9; 
0x000000000041f51e: ret 0x2c75; 
0x000000000041e34a: ret 0x2d9; 
0x000000000046f105: ret 0x2e66; 
0x000000000044c11e: ret 0x2f75; 
0x0000000000467e55: ret 0x30be; 
0x00000000004a03c8: ret 0x33; 
0x0000000000452934: ret 0x349; 
0x000000000048a940: ret 0x3575; 
0x000000000047b23a: ret 0x3774; 
0x000000000042b7f6: ret 0x3776; 
0x00000000004a89da: ret 0x3827; 
0x000000000046ff8e: ret 0x3873; 
0x000000000042b385: ret 0x3876; 
0x0000000000416a0b: ret 0x389; 
0x00000000004a7066: ret 0x38ae; 
0x000000000048e252: ret 0x38e8; 
0x0000000000489518: ret 0x3901; 
0x0000000000480ffd: ret 0x3934; 
0x000000000046d74f: ret 0x3941; 
0x00000000004111f1: ret 0x3948; 
0x0000000000411fad: ret 0x3949; 
0x000000000041edfc: ret 0x394c; 
0x0000000000468dfd: ret 0x394d; 
0x00000000004465f2: ret 0x3a01; 
0x000000000042d76b: ret 0x3a73; 
0x0000000000488063: ret 0x3a83; 
0x0000000000447011: ret 0x3b48; 
0x0000000000449b7f: ret 0x3b8; 
0x0000000000414009: ret 0x3c75; 
0x00000000004767e8: ret 0x3d01; 
0x000000000040e94a: ret 0x3d3; 
0x000000000047f268: ret 0x3d73; 
0x00000000004205d1: ret 0x3d83; 
0x0000000000480fbd: ret 0x3d; 
0x000000000041c92f: ret 0x3de9; 
0x000000000047b09a: ret 0x3e80; 
0x000000000045a2cb: ret 0x4002; 
0x00000000004569fa: ret 0x403; 
0x000000000040d28d: ret 0x4074; 
0x0000000000473dd1: ret 0x408d; 
0x000000000044c36a: ret 0x4101; 
0x00000000004604b8: ret 0x4108; 
0x0000000000460c6d: ret 0x4110; 
0x0000000000481496: ret 0x4118; 
0x0000000000481037: ret 0x4134; 
0x00000000004530e7: ret 0x415f; 
0x0000000000450b4e: ret 0x41c3; 
0x0000000000425dea: ret 0x4266; 
0x0000000000453e5a: ret 0x431; 
0x0000000000470a63: ret 0x4389; 
0x0000000000405df1: ret 0x4401; 
0x00000000004686ab: ret 0x4404; 
0x0000000000481816: ret 0x4418; 
0x000000000041a30b: ret 0x4466; 
0x000000000041dca3: ret 0x4473; 
0x00000000004520d0: ret 0x44a; 
0x00000000004a7b64: ret 0x474c; 
0x000000000040e0d4: ret 0x4801; 
0x00000000004121a6: ret 0x4803; 
0x0000000000422671: ret 0x4804; 
0x0000000000440c73: ret 0x4808; 
0x0000000000402fb6: ret 0x480a; 
0x000000000041c348: ret 0x4810; 
0x000000000045887c: ret 0x4811; 
0x000000000045dbb7: ret 0x481e; 
0x000000000045dbd7: ret 0x4820; 
0x000000000044e2fe: ret 0x4830; 
0x0000000000425cf6: ret 0x4840; 
0x000000000044db99: ret 0x486; 
0x0000000000440928: ret 0x48c3; 
0x0000000000418d23: ret 0x48e9; 
0x00000000004a9326: ret 0x48f; 
0x0000000000405d8c: ret 0x4901; 
0x000000000045558b: ret 0x4902; 
0x0000000000419362: ret 0x4908; 
0x000000000042a2bc: ret 0x4910; 
0x000000000045a719: ret 0x4c01; 
0x000000000041e64a: ret 0x4c07; 
0x000000000045d476: ret 0x4c40; 
0x000000000046616e: ret 0x4ce8; 
0x000000000041d306: ret 0x4d01; 
0x000000000045bf38: ret 0x4d10; 
0x00000000004026bf: ret 0x4de8; 
0x00000000004a8d87: ret 0x4e27; 
0x00000000004016ee: ret 0x4f76; 
0x000000000044ee8f: ret 0x5089; 
0x000000000044bf87: ret 0x508b; 
0x000000000042d754: ret 0x5173; 
0x0000000000449dd7: ret 0x5488; 
0x00000000004a6fec: ret 0x5508; 
0x0000000000471b2e: ret 0x5590; 
0x000000000042b7d6: ret 0x5776; 
0x00000000004a92b8: ret 0x5803; 
0x00000000004555f1: ret 0x5841; 
0x00000000004879d5: ret 0x5876; 
0x000000000040e6e3: ret 0x589; 
0x00000000004a6cc0: ret 0x591c; 
0x00000000004a7a27: ret 0x5ae4; 
0x000000000042432e: ret 0x5ae9; 
0x00000000004557d9: ret 0x5be9; 
0x000000000040f3ea: ret 0x5d5b; 
0x00000000004a9752: ret 0x62c1; 
0x000000000047c4e0: ret 0x6349; 
0x00000000004851f4: ret 0x637f; 
0x0000000000458853: ret 0x6411; 
0x0000000000423bf5: ret 0x65e8; 
0x000000000045b431: ret 0x6601; 
0x000000000042b311: ret 0x6620; 
0x00000000004237d8: ret 0x66c3; 
0x000000000047faee: ret 0x674; 
0x000000000042b7c6: ret 0x6776; 
0x00000000004a6cdf: ret 0x67b2; 
0x0000000000416fb5: ret 0x6874; 
0x000000000044948a: ret 0x6ae9; 
0x00000000004a98e1: ret 0x6f9; 
0x0000000000420f62: ret 0x72b; 
0x000000000045ea2a: ret 0x73; 
0x0000000000417131: ret 0x7401; 
0x000000000042263a: ret 0x7402; 
0x000000000047c54a: ret 0x7403; 
0x000000000044a501: ret 0x7404; 
0x0000000000471902: ret 0x7408; 
0x00000000004128bd: ret 0x7420; 
0x0000000000464344: ret 0x7450; 
0x0000000000480cfa: ret 0x7472; 
0x0000000000444b59: ret 0x7501; 
0x0000000000444b66: ret 0x7502; 
0x0000000000444b73: ret 0x7504; 
0x000000000041e95d: ret 0x7508; 
0x0000000000444b2b: ret 0x7510; 
0x0000000000444b38: ret 0x7520; 
0x000000000042465e: ret 0x7540; 
0x0000000000475840: ret 0x7577; 
0x000000000042c642: ret 0x7677; 
0x0000000000482972: ret 0x777; 
0x0000000000484236: ret 0x77f; 
0x0000000000402e11: ret 0x7ce9; 
0x000000000042b2b1: ret 0x7e20; 
0x000000000042b72c: ret 0x7e40; 
0x000000000042499c: ret 0x7f10; 
0x000000000046d958: ret 0x7f3c; 
0x0000000000425b79: ret 0x8000; 
0x000000000048df12: ret 0x8001; 
0x0000000000432f1e: ret 0x80; 
0x0000000000476c8e: ret 0x8116; 
0x000000000045fc8b: ret 0x8148; 
0x000000000048e468: ret 0x8166; 
0x000000000041d030: ret 0x820f; 
0x0000000000454e13: ret 0x8301; 
0x000000000047d267: ret 0x8303; 
0x000000000042c210: ret 0x830f; 
0x000000000045da84: ret 0x8341; 
0x0000000000402c3b: ret 0x8348; 
0x0000000000446a70: ret 0x8349; 
0x000000000047f0df: ret 0x8364; 
0x0000000000475c39: ret 0x8401; 
0x0000000000471246: ret 0x840; 
0x0000000000411fb5: ret 0x840f; 
0x0000000000453b60: ret 0x841; 
0x000000000048b1be: ret 0x8440; 
0x0000000000479c87: ret 0x848b; 
0x000000000046eda9: ret 0x8502; 
0x0000000000413142: ret 0x850f; 
0x00000000004581b3: ret 0x8511; 
0x000000000044a832: ret 0x8545; 
0x0000000000402b92: ret 0x8548; 
0x0000000000476dac: ret 0x8549; 
0x000000000042368a: ret 0x854d; 
0x0000000000405c61: ret 0x8575; 
0x0000000000401422: ret 0x860f; 
0x000000000041acef: ret 0x870f; 
0x00000000004a65fe: ret 0x871e; 
0x000000000046d95f: ret 0x875; 
0x000000000042b3b5: ret 0x876; 
0x0000000000402cbc: ret 0x8801; 
0x0000000000451e5d: ret 0x8804; 
0x0000000000479913: ret 0x882e; 
0x000000000045b482: ret 0x8841; 
0x000000000047e1ce: ret 0x8844; 
0x000000000045a9aa: ret 0x88e8; 
0x00000000004024aa: ret 0x8901; 
0x000000000044ce1e: ret 0x8902; 
0x000000000041243a: ret 0x8908; 
0x000000000045da76: ret 0x8941; 
0x000000000041f5bf: ret 0x8944; 
0x0000000000403e7f: ret 0x8948; 
0x000000000041366a: ret 0x8949; 
0x0000000000410c61: ret 0x894c; 
0x00000000004833eb: ret 0x894e; 
0x000000000041759a: ret 0x8a; 
0x0000000000450729: ret 0x8b01; 
0x000000000046f3fa: ret 0x8b04; 
0x00000000004759d3: ret 0x8b05; 
0x000000000046f2ab: ret 0x8b08; 
0x00000000004a8e2e: ret 0x8b36; 
0x000000000041d511: ret 0x8b41; 
0x000000000046d98b: ret 0x8b44; 
0x0000000000413a93: ret 0x8b48; 
0x0000000000411416: ret 0x8b49; 
0x000000000048336e: ret 0x8b4a; 
0x000000000040d49d: ret 0x8b4c; 
0x0000000000487c00: ret 0x8b; 
0x0000000000464bad: ret 0x8c0f; 
0x000000000045d4d1: ret 0x8d04; 
0x000000000048c3bf: ret 0x8d0f; 
0x000000000041cc0c: ret 0x8d44; 
0x0000000000419801: ret 0x8d48; 
0x000000000046808c: ret 0x8d49; 
0x0000000000482717: ret 0x8d4a; 
0x000000000041dd24: ret 0x8d4c; 
0x000000000045da92: ret 0x8d89; 
0x000000000045292b: ret 0x8e0f; 
0x000000000045dd3a: ret 0x8f0f; 
0x00000000004400f5: ret 0x90c3; 
0x0000000000423da9: ret 0x90e9; 
0x0000000000477d4e: ret 0x9174; 
0x000000000048affb: ret 0x9272; 
0x000000000041b00d: ret 0x948; 
0x00000000004733a8: ret 0x94c; 
0x0000000000484c22: ret 0x950f; 
0x0000000000448e10: ret 0x9572; 
0x00000000004a7c53: ret 0x9576; 
0x000000000046068f: ret 0x958b; 
0x00000000004225ce: ret 0x976; 
0x00000000004a98b9: ret 0x990e; 
0x000000000047d013: ret 0x9be9; 
0x0000000000480d05: ret 0x9de8; 
0x00000000004870e5: ret 0x9eb; 
0x00000000004ae936: ret 0xa01; 
0x000000000044a528: ret 0xa076; 
0x0000000000449354: ret 0xa0e9; 
0x0000000000463417: ret 0xa3e8; 
0x000000000048c47e: ret 0xa4e9; 
0x00000000004a7943: ret 0xa514; 
0x000000000048c57d: ret 0xa5e9; 
0x000000000047cc8a: ret 0xa8e8; 
0x000000000049ea00: ret 0xa; 
0x000000000044b4cd: ret 0xabe; 
0x000000000040fc96: ret 0xac20; 
0x00000000004a7dc7: ret 0xac65; 
0x00000000004a8784: ret 0xacfc; 
0x000000000045f4cf: ret 0xae9; 
0x00000000004234ca: ret 0xaeeb; 
0x00000000004abf7f: ret 0xb00e; 
0x000000000041187d: ret 0xb074; 
0x000000000041b06b: ret 0xb277; 
0x000000000046517e: ret 0xb2c8; 
0x00000000004563bb: ret 0xb2eb; 
0x0000000000449340: ret 0xb4e9; 
0x000000000045dab6: ret 0xb589; 
0x0000000000489ef5: ret 0xb5e8; 
0x0000000000402c75: ret 0xb60f; 
0x0000000000400f34: ret 0xb70f; 
0x000000000046ba9c: ret 0xb848; 
0x000000000047af3a: ret 0xb850; 
0x0000000000469cf5: ret 0xb8; 
0x000000000048e2d2: ret 0xb8e8; 
0x00000000004a7c8e: ret 0xb9b9; 
0x000000000046d2d5: ret 0xb9e9; 
0x000000000046ee84: ret 0xba41; 
0x0000000000422d03: ret 0xbae9; 
0x00000000004564f2: ret 0xbaeb; 
0x000000000048ca36: ret 0xbc80; 
0x000000000045daa2: ret 0xbd89; 
0x0000000000464aed: ret 0xbde8; 
0x0000000000480e42: ret 0xbe0f; 
0x00000000004a79e4: ret 0xbe57; 
0x0000000000425a39: ret 0xc000; 
0x00000000004031a6: ret 0xc031; 
0x000000000045889e: ret 0xc083; 
0x000000000042b170: ret 0xc085; 
0x000000000040e116: ret 0xc148; 
0x000000000041b189: ret 0xc183; 
0x0000000000404948: ret 0xc189; 
0x000000000044a1c2: ret 0xc221; 
0x000000000041f5fb: ret 0xc275; 
0x00000000004767e6: ret 0xc283; 
0x000000000042d624: ret 0xc2b2; 
0x00000000004480ae: ret 0xc35b; 
0x0000000000457c8d: ret 0xc389; 
0x000000000041f5fd: ret 0xc3f3; 
0x00000000004a6182: ret 0xc4c3; 
0x00000000004a7598: ret 0xc4ff; 
0x000000000042b791: ret 0xc540; 
0x0000000000457d56: ret 0xc589; 
0x000000000046334c: ret 0xc689; 
0x0000000000441030: ret 0xc748; 
0x000000000047f0bd: ret 0xc74; 
0x0000000000468f48: ret 0xc789; 
0x0000000000480ed2: ret 0xc829; 
0x0000000000461d22: ret 0xc839; 
0x00000000004169fc: ret 0xc883; 
0x0000000000460767: ret 0xc985; 
0x000000000046f393: ret 0xc9eb; 
0x0000000000440c41: ret 0xc9ff; 
0x00000000004008d1: ret 0xca21; 
0x000000000047828f: ret 0xcbe9; 
0x00000000004a702a: ret 0xcca7; 
0x00000000004a910d: ret 0xcd11; 
0x0000000000405152: ret 0xce80; 
0x0000000000420e7e: ret 0xd020; 
0x000000000040df26: ret 0xd021; 
0x00000000004641cb: ret 0xd120; 
0x0000000000401254: ret 0xd284; 
0x000000000045784a: ret 0xd285; 
0x000000000048e9b8: ret 0xd2e8; 
0x0000000000479d16: ret 0xd348; 
0x000000000044f807: ret 0xd5e9; 
0x000000000048128f: ret 0xd75; 
0x000000000045ce76: ret 0xd774; 
0x00000000004a8ba5: ret 0xd8f; 
0x000000000049ee00: ret 0xd; 
0x000000000040058f: ret 0xda80; 
0x000000000040ff83: ret 0xdaf7; 
0x000000000045403a: ret 0xdb76; 
0x00000000004a8c86: ret 0xdcd9; 
0x00000000004a7c02: ret 0xde5d; 
0x00000000004a6991: ret 0xde9e; 
0x00000000004258f9: ret 0xe000; 
0x0000000000444ae9: ret 0xe074; 
0x000000000044d570: ret 0xe083; 
0x00000000004b515c: ret 0xe0a; 
0x000000000048c641: ret 0xe1e9; 
0x000000000044d3a2: ret 0xe1eb; 
0x000000000040db30: ret 0xe281; 
0x0000000000400c75: ret 0xe283; 
0x00000000004730b8: ret 0xe575; 
0x00000000004657d0: ret 0xe57f; 
0x000000000046614a: ret 0xe583; 
0x00000000004480a2: ret 0xe680; 
0x000000000046682f: ret 0xe683; 
0x00000000004a8da6: ret 0xe71f; 
0x00000000004790da: ret 0xe75; 
0x0000000000422db6: ret 0xe775; 
0x0000000000465e03: ret 0xe7e9; 
0x000000000042bdf5: ret 0xe883; 
0x0000000000478c56: ret 0xe8c0; 
0x0000000000402f4a: ret 0xe901; 
0x0000000000402f8f: ret 0xe902; 
0x0000000000440cd6: ret 0xe908; 
0x000000000043d276: ret 0xe910; 
0x000000000045e2fd: ret 0xe920; 
0x00000000004a7107: ret 0xe970; 
0x000000000044803a: ret 0xea81; 
0x000000000040dbfd: ret 0xeab8; 
0x0000000000400c5d: ret 0xeac1; 
0x000000000047d916: ret 0xeb01; 
0x000000000046f2c3: ret 0xeb04; 
0x000000000042a2ea: ret 0xeb10; 
0x0000000000481482: ret 0xeb30; 
0x00000000004a98b8: ret 0xec2; 
0x000000000041139a: ret 0xec; 
0x000000000045ce00: ret 0xed75; 
0x00000000004a955a: ret 0xef32; 
0x000000000048c208: ret 0xef89; 
0x0000000000475e1f: ret 0xefeb; 
0x00000000004257b9: ret 0xf000; 
0x0000000000405635: ret 0xf01; 
0x000000000041a9b9: ret 0xf02; 
0x000000000041cd99: ret 0xf04; 
0x0000000000411b03: ret 0xf08; 
0x000000000041ac89: ret 0xf0f; 
0x000000000040e42e: ret 0xf10; 
0x000000000046664b: ret 0xf20; 
0x000000000041cf03: ret 0xf275; 
0x0000000000480d40: ret 0xf2e8; 
0x0000000000463706: ret 0xf3f; 
0x0000000000466bd3: ret 0xf40; 
0x000000000046fd3d: ret 0xf41; 
0x000000000048c6bc: ret 0xf45; 
0x00000000004239a9: ret 0xf475; 
0x00000000004516e6: ret 0xf48; 
0x00000000004004fd: ret 0xf49; 
0x0000000000466bb9: ret 0xf50; 
0x0000000000489686: ret 0xf608; 
0x0000000000475495: ret 0xf631; 
0x0000000000425d76: ret 0xf66; 
0x000000000047ad67: ret 0xf675; 
0x000000000046fdfc: ret 0xf741; 
0x0000000000405882: ret 0xf748; 
0x000000000048295c: ret 0xf749; 
0x0000000000425679: ret 0xf800; 
0x00000000004a6870: ret 0xf869; 
0x0000000000418733: ret 0xf8b; 
0x0000000000463701: ret 0xf8c1; 
0x0000000000440556: ret 0xf8c5; 
0x00000000004483e4: ret 0xf8e9; 
0x0000000000493f94: ret 0xf98e; 
0x0000000000464fe2: ret 0xf9b4; 
0x00000000004290de: ret 0xf; 
0x000000000049471c: ret 0xfa05; 
0x0000000000494714: ret 0xfa06; 
0x000000000049470c: ret 0xfa07; 
0x0000000000494704: ret 0xfa08; 
0x00000000004946fc: ret 0xfa09; 
0x0000000000494508: ret 0xfa11; 
0x0000000000494a00: ret 0xfa38; 
0x000000000041f2e2: ret 0xfae9; 
0x00000000004596ca: ret 0xfb50; 
0x000000000041f8ca: ret 0xfbe9; 
0x0000000000425539: ret 0xfc00; 
0x0000000000424451: ret 0xfc3; 
0x00000000004771ba: ret 0xfd32; 
0x00000000004713ea: ret 0xfd72; 
0x00000000004253f9: ret 0xfe00; 
0x0000000000400da5: ret 0xfe83; 
0x00000000004252b9: ret 0xff00; 
0x000000000044d51b: ret 0xff25; 
0x0000000000434a91: ret 0xff2; 
0x000000000042bfb9: ret 0xff2d; 
0x000000000046adf7: ret 0xff31; 
0x0000000000425d1a: ret 0xff3; 
0x000000000041c21a: ret 0xff3c; 
0x000000000041b91a: ret 0xff45; 
0x0000000000425179: ret 0xff80; 
0x00000000004663d1: ret 0xff83; 
0x0000000000453fcc: ret 0xff85; 
0x000000000045d462: ret 0xffa0; 
0x000000000042365a: ret 0xffa5; 
0x000000000040b0da: ret 0xffaf; 
0x000000000040adda: ret 0xffb2; 
0x000000000044f75a: ret 0xffb3; 
0x0000000000410f17: ret 0xffb8; 
0x000000000040dc4a: ret 0xffc0; 
0x0000000000485cda: ret 0xffc7; 
0x0000000000423368: ret 0xffdf; 
0x0000000000424ef9: ret 0xffe0; 
0x000000000046223e: ret 0xffe6; 
0x0000000000468069: ret 0xffe8; 
0x00000000004493f5: ret 0xffe9; 
0x000000000040f111: ret 0xffef; 
0x000000000040da72: ret 0xfff0; 
0x000000000046a7e0: ret 0xfff1; 
0x0000000000485856: ret 0xfff7; 
0x0000000000424c79: ret 0xfff8; 
0x0000000000422d82: ret 0xfff; 
0x000000000041c838: ret 0xfffa; 
0x0000000000404869: ret 0xfffb; 
0x0000000000424b39: ret 0xfffc; 
0x00000000004181b5: ret 0xfffd; 
0x00000000004249f9: ret 0xfffe; 
0x00000000004156ac: ret 0xffff; 
0x000000000042ba05: ret 1; 
0x000000000042ba2b: ret 2; 
0x000000000040fa24: ret 3; 
0x0000000000409f38: ret 4; 
0x0000000000438bfe: ret 5; 
0x000000000049e5a8: ret 6; 
0x000000000042a87a: ret 7; 
0x0000000000409f98: ret 8; 
0x000000000044559a: ret 9; 
0x0000000000400416: ret; 
0x0000000000491446: retf 0x2283; add byte ptr [rax - 0x77], cl; ret 0x8348; 
0x000000000047e875: retf 0x394c; ret 0x2275; 
0x00000000004a7062: retf 0x6ee8; sahf; ret 0x38ae; 
0x000000000042a28f: retf 0x8349; ret 0x7f10; 
0x000000000043d4d7: retf 0x8349; ret 0xf10; 
0x0000000000447fa6: retf 0xd975; vzeroupper; ret; 
0x000000000042a2b6: retf 0xd; add byte ptr [rax - 0x7d], cl; ret 0x4910; 
0x0000000000447de3: retf 0xe175; vzeroupper; ret; 
0x00000000004734f6: retf 0xfdc5; xlatb; ret; 
0x0000000000418f62: retf 0xfe74; dec dword ptr [rax - 0x77]; ret; 
0x00000000004545be: retf 0xfffa; dec dword ptr [rax - 0x7d]; ret 0x4801; 
0x000000000044bd6d: retf; add al, byte ptr [rcx + 0x39]; ret; 
0x00000000004a6feb: retf; ret 0x5508; 
0x0000000000455771: retf; ret; 
0x000000000042b30e: rol bl, 0x83; ret 0x6620; 
0x000000000044705d: rol byte ptr [r9 + 0xf], 1; adc dword ptr [rbx], esp; ret; 
0x0000000000425cf2: rol byte ptr [rax + 0x48], 0x83; ret 0x4840; 
0x00000000004737e2: rol byte ptr [rax + 0x49], 0x39; ret 0x2774; 
0x00000000004a28a0: rol byte ptr [rax + rax], 0; ret 4; 
0x0000000000400d9a: rol byte ptr [rax + rcx*2], 0x83; mov dword ptr [rcx + rax*2], 0x72f2a30f; ret 0xfe83; 
0x0000000000479c81: rol byte ptr [rax], 0; add byte ptr [rcx - 0x77], cl; ret 0x848b; 
0x000000000044ce2b: rol byte ptr [rax], 0; add dh, dh; ret 0x7404; 
0x000000000042b552: rol byte ptr [rbp + 0x664975c0], 0xf; xlatb; ret 0xc085; 
0x000000000045f4c5: rol byte ptr [rbp - 0x40f0b737], 1; ror byte ptr [rax + 0xf], 0x44; ret 0xae9; 
0x00000000004826bb: rol byte ptr [rbx - 0x177cfd20], 1; ret; 
0x00000000004530e1: rol byte ptr [rbx - 0x76befb08], 1; ret 0x415f; 
0x0000000000474872: rol byte ptr [rbx], 0; add byte ptr [rax], al; ret; 
0x000000000046661f: rol byte ptr [rcx + 0xf], 0x94; ret; 
0x000000000044705e: rol byte ptr [rcx + 0xf], 1; adc dword ptr [rbx], esp; ret; 
0x000000000046d2d2: rol byte ptr [rcx - 0x77], 1; ret 0xb9e9; 
0x0000000000474852: rol byte ptr [rcx], 0; add byte ptr [rax], al; ret; 
0x000000000045939b: rol byte ptr [rcx], 0x83; ret 0x4801; 
0x00000000004483c7: rol byte ptr [rcx], 0x83; ret 0xf01; 
0x00000000004483e0: rol byte ptr [rcx], 0xf; scasd eax, dword ptr [rdi]; ret 0xf8e9; 
0x00000000004748b2: rol byte ptr [rdi], 0; add byte ptr [rax], al; ret; 
0x0000000000474862: rol byte ptr [rdx], 0; add byte ptr [rax], al; ret; 
0x00000000004748a2: rol byte ptr [rsi], 0; add byte ptr [rax], al; ret; 
0x00000000004a6180: rol cl, 0xc2; ret; 
0x00000000004747fc: rol dword ptr [rax + 0x1e740fe1], 1; ret; 
0x000000000045494a: rol dword ptr [rdx], 0; add byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x000000000048a928: ror byte ptr [rax + 0x21], cl; ret 0xc148; 
0x0000000000440a87: ror byte ptr [rax + 0x29], 1; clc; ret; 
0x00000000004110ce: ror byte ptr [rax + 0x29], 1; ret; 
0x000000000044bd08: ror byte ptr [rax + 0x39], 0xfa; setae al; ret; 
0x000000000041dbd3: ror byte ptr [rax + 0x39], 1; ret; 
0x000000000046ff93: ror byte ptr [rax + 0x39], cl; ret 0xf48; 
0x000000000047c80a: ror byte ptr [rax + 0x39], cl; ret; 
0x000000000045f4cb: ror byte ptr [rax + 0xf], 0x44; ret 0xae9; 
0x000000000042b42c: ror byte ptr [rax + 1], 0xf8; add rax, rcx; ret; 
0x000000000042b352: ror byte ptr [rax + 1], 0xf8; ret; 
0x000000000042b843: ror byte ptr [rax + 1], 0xf8; vzeroupper; ret; 
0x00000000004059d3: ror byte ptr [rax + 1], 1; ret; 
0x000000000049eca8: ror byte ptr [rax + rax], 0; ret; 
0x000000000048318c: ror byte ptr [rax - 0x3f], 0xe0; add ecx, dword ptr [rbp - 0x77]; ret 0x8d48; 
0x00000000004663ca: ror byte ptr [rax - 0x3f], 0xe2; and byte ptr [rax + 9], cl; ret 0xff83; 
0x000000000040eabd: ror byte ptr [rax - 0x3f], 1; call 0x648e36c8; ret; 
0x0000000000474911: ror byte ptr [rax - 0x3f], 1; call 0x78000e1b; ret; 
0x00000000004749c9: ror byte ptr [rax - 0x3f], 1; call 0x78000ed3; ret; 
0x00000000004749ed: ror byte ptr [rax - 0x3f], 1; call 0x78000ef7; ret; 
0x0000000000474a0d: ror byte ptr [rax - 0x3f], 1; call 0x78000f17; ret; 
0x0000000000474a5b: ror byte ptr [rax - 0x3f], 1; call 0x78000f65; ret; 
0x0000000000474afa: ror byte ptr [rax - 0x3f], 1; call 0x78001004; ret; 
0x0000000000474c7e: ror byte ptr [rax - 0x3f], 1; call 0x78001188; ret; 
0x0000000000474ca2: ror byte ptr [rax - 0x3f], 1; call 0x780011ac; ret; 
0x0000000000474cc2: ror byte ptr [rax - 0x3f], 1; call 0x780011cc; ret; 
0x0000000000474ce2: ror byte ptr [rax - 0x3f], 1; call 0x780011ec; ret; 
0x0000000000474d19: ror byte ptr [rax - 0x3f], 1; call 0x78001223; ret; 
0x0000000000474d3d: ror byte ptr [rax - 0x3f], 1; call 0x78001247; ret; 
0x0000000000474d5d: ror byte ptr [rax - 0x3f], 1; call 0x78001267; ret; 
0x0000000000474dab: ror byte ptr [rax - 0x3f], 1; call 0x780012b5; ret; 
0x000000000044cf77: ror byte ptr [rax - 0x73], 0x3d; adc byte ptr [rcx + 0xf480004], 0x44; ret; 
0x000000000042b342: ror byte ptr [rax - 0x73], 0x44; cmp al, dh; ret; 
0x000000000042b372: ror byte ptr [rax - 0x73], 0x44; cmp byte ptr [rax], ah; ret; 
0x000000000042b362: ror byte ptr [rax - 0x73], 0x44; cmp byte ptr [rax], dl; ret; 
0x0000000000422d7e: ror byte ptr [rax - 0x73], 0x44; ret 0xfff; 
0x000000000048460c: ror byte ptr [rax - 0x77], 1; or byte ptr [r8 + 2], r15b; ret; 
0x000000000048a93d: ror byte ptr [rax - 0x77], 1; ret 0x3575; 
0x000000000045a284: ror byte ptr [rax - 0x77], 1; ret 0x894c; 
0x0000000000413a90: ror byte ptr [rax - 0x77], 1; ret 0x8b48; 
0x0000000000481e8a: ror byte ptr [rax - 0x77], 1; ret 0xc148; 
0x000000000040db2d: ror byte ptr [rax - 0x77], 1; ret 0xe281; 
0x0000000000411310: ror byte ptr [rax - 0x77], 1; ret; 
0x0000000000484c1c: ror byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x94; ret 0x950f; 
0x0000000000475803: ror byte ptr [rax - 0x7d], 0xc4; pop rax; ret; 
0x000000000040ebb0: ror byte ptr [rax - 0x7d], 1; ret 0x4801; 
0x0000000000454f85: ror byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000489515: ror byte ptr [rax], 0x83; ret 0x3901; 
0x000000000046efd2: ror byte ptr [rbp + 0x39441704], cl; ret 0xf49; 
0x00000000004845f4: ror byte ptr [rcx + 0x2b802], 1; add byte ptr [rax], al; ret; 
0x00000000004680b8: ror byte ptr [rcx - 0x77], cl; ret; 
0x000000000044bbfc: ror byte ptr [rdi], 0x44; ret 0x66c3; 
0x0000000000466bcb: ror byte ptr [rdi], 0x84; ret 0x17; 
0x0000000000450787: ror byte ptr [rdi], 0x84; ret 0xfffc; 
0x0000000000402796: ror byte ptr [rdi], 0x84; ret; 
0x000000000044c85f: ror byte ptr [rdi], 0x85; ret 0xfffe; 
0x000000000047d9f2: ror byte ptr [rdi], 0x85; ret 2; 
0x000000000042271f: ror byte ptr [rdi], 0x85; ret; 
0x0000000000467769: ror byte ptr [rdi], 0x8f; ret 7; 
0x0000000000480fba: ror byte ptr [rdi], 0x94; ret 0x3d; 
0x000000000046d955: ror byte ptr [rdi], 0x94; ret 0x7f3c; 
0x0000000000484c1f: ror byte ptr [rdi], 0x94; ret 0x950f; 
0x0000000000446b2e: ror byte ptr [rdi], 0x94; ret 0xc085; 
0x00000000004105eb: ror byte ptr [rdi], 0x94; ret 0xdaf7; 
0x000000000047f4c9: ror byte ptr [rdi], 0x94; ret; 
0x000000000040ff80: ror byte ptr [rdi], 0x95; ret 0xdaf7; 
0x0000000000422d7b: ror byte ptr [rdi], 0xb6; ror byte ptr [rax - 0x73], 0x44; ret 0xfff; 
0x0000000000446fa5: ror byte ptr [rdi], 1; adc dword ptr [rdi + rdx - 0x40], edi; ret; 
0x000000000048521e: ror dword ptr [rax + 1], 0xf8; sub rax, r8; ret; 
0x0000000000446b38: ror dword ptr [rax + 1], 0xf8; sub rax, rsi; ret; 
0x000000000046f586: ror dword ptr [rax - 0x75], 4; ret 0x8548; 
0x00000000004234c7: ror dword ptr [rax - 0x77], 1; ret 0xaeeb; 
0x0000000000479d13: ror dword ptr [rax - 0x77], 1; ret 0xd348; 
0x0000000000465e00: ror dword ptr [rax - 0x77], 1; ret 0xe7e9; 
0x0000000000485831: ror dword ptr [rax - 0x77], cl; ret; 
0x000000000045dbd4: ror dword ptr [rax - 0x7d], cl; ret 0x4820; 
0x0000000000483e5d: ror dword ptr [rbp + rcx*4 + 0x14], cl; ret; 
0x00000000004657bb: ror dword ptr [rcx - 0x77], 0x14; ret 0x8b48; 
0x0000000000444ae7: ror dword ptr [rcx], cl; ret 0xe074; 
0x000000000042d296: ror dword ptr [rdi], 0x85; add eax, 0xc0310000; ret; 
0x00000000004a7065: sahf; ret 0x38ae; 
0x0000000000483751: sahf; ret 0x3948; 
0x000000000045bf8c: sahf; ret 0x894c; 
0x000000000048c6f4: sahf; ret 0xf45; 
0x000000000041878e: sal bh, 0xd8; ret; 
0x0000000000425b77: sal bh, 1; ret 0x8000; 
0x0000000000425a37: sal bh, 1; ret 0xc000; 
0x00000000004258f7: sal bh, 1; ret 0xe000; 
0x00000000004257b7: sal bh, 1; ret 0xf000; 
0x0000000000425677: sal bh, 1; ret 0xf800; 
0x0000000000425537: sal bh, 1; ret 0xfc00; 
0x00000000004253f7: sal bh, 1; ret 0xfe00; 
0x00000000004252b7: sal bh, 1; ret 0xff00; 
0x0000000000425177: sal bh, 1; ret 0xff80; 
0x0000000000425037: sal bh, 1; ret 0xffc0; 
0x0000000000424ef7: sal bh, 1; ret 0xffe0; 
0x0000000000424db7: sal bh, 1; ret 0xfff0; 
0x0000000000424c77: sal bh, 1; ret 0xfff8; 
0x0000000000424b37: sal bh, 1; ret 0xfffc; 
0x00000000004249f7: sal bh, 1; ret 0xfffe; 
0x00000000004745ff: sal bl, 1; ret; 
0x000000000047f36d: sal bl, cl; ret; 
0x000000000040da6d: sal byte ptr [rax + 0x48], 0xc7; ret 0xfff0; 
0x0000000000489681: sal byte ptr [rax + rax*8 + 0x49], 0x83; ret 0xf608; 
0x00000000004765ed: sal byte ptr [rax - 0x75], 0x35; ret 0x2424; 
0x000000000040dc3a: sal byte ptr [rbp + 0x1f], 0x48; add esp, 0x118; ret; 
0x000000000048254e: sal byte ptr [rbp + 0x4f], 0x89; ret; 
0x000000000048f4a3: sal byte ptr [rbp + 0xa], 0xf3; ret; 
0x000000000048f488: sal byte ptr [rbp + 5], 0xf3; ret; 
0x000000000041732d: sal byte ptr [rbp - 0x10], 0xf3; ret; 
0x0000000000446820: sal byte ptr [rbp - 0x13], cl; lea rax, [rcx - 1]; ret; 
0x000000000041874c: sal byte ptr [rbx + 0x21], 1; movzx eax, byte ptr [rax]; ret; 
0x00000000004409cc: sal byte ptr [rcx + rdx + 0x48], cl; bsf eax, edx; ret; 
0x000000000040aaf8: sal byte ptr [rdi + rbp - 0x75], cl; or al, byte ptr [rbx - 0x7bf0fd07]; ret 0x18; 
0x0000000000407669: sal byte ptr [rdi + rbp - 0x75], cl; or al, byte ptr [rbx - 0x7bf0fd07]; ret; 
0x000000000040eaac: sal byte ptr [rdx + 0x3948006b], 1; ret; 
0x00000000004737ab: sal byte ptr [rdx + 0x48], cl; bsf eax, edx; ret; 
0x0000000000440ce3: sal byte ptr [rdx + rdx + 0x48], 0xff; ret 0x2288; 
0x000000000047f929: sal byte ptr [rsp + rsi + 0x48], 0x89; ret; 
0x00000000004896da: sal byte ptr [rsp + rsi*4 + 0x48], 0x83; ret 0xf608; 
0x0000000000446f03: sal ebx, 1; movsb byte ptr [rdi], byte ptr [rsi]; ret; 
0x0000000000480e2d: sal edi, 0xd8; ret; 
0x0000000000449493: sar bh, 0xff; dec dword ptr [rax - 0x39]; ret 0xffff; 
0x0000000000403060: sar bh, 0xff; dec dword ptr [rax - 0x39]; ret; 
0x0000000000484550: sar bh, 0xff; mov eax, 1; ret; 
0x0000000000402792: sar byte ptr [rax + 0x5b], 0x85; ror byte ptr [rdi], 0x84; ret; 
0x000000000047bbf1: sar byte ptr [rax + 0xe], 0x5b; ret; 
0x000000000044d39d: sar byte ptr [rcx], cl; ret; 
0x0000000000438443: sar dword ptr [rax + rcx*2 + 0x11], 1; jns 0x38448; ret; 
0x0000000000447419: sar dword ptr [rsi + 0x7f], 0x23; vzeroupper; ret; 
0x0000000000471bfc: sar eax, 2; lea eax, [r8 - 1]; ret; 
0x00000000004a7763: sar ecx, 1; jnp 0xa7720; ret; 
0x00000000004631bd: sar ecx, cl; dec dword ptr [rax + 0x29]; ret; 
0x0000000000471d02: sar edx, 2; sub eax, edx; ret; 
0x0000000000471bfb: sar r8, 2; lea eax, [r8 - 1]; ret; 
0x0000000000471d01: sar rdx, 2; sub eax, edx; ret; 
0x00000000004633b5: sbb ah, byte ptr [rsi + 0xf]; outsd dx, dword ptr [rsi]; ret; 
0x000000000046682d: sbb al, 0x29; ret 0xe683; 
0x0000000000467767: sbb al, 0x85; ror byte ptr [rdi], 0x8f; ret 7; 
0x0000000000463e96: sbb al, byte ptr [rax]; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000406f43: sbb al, byte ptr [rax]; add byte ptr [rbx - 0x7bf0fc06], al; ret; 
0x000000000046993b: sbb al, byte ptr fs:[rax]; add byte ptr [rax - 0x7d], cl; ret; 
0x000000000040b0d8: sbb al, ch; ret 0xffaf; 
0x00000000004a64e5: sbb bl, byte ptr [rsi]; ret; 
0x000000000047e1d1: sbb byte ptr [rax + 0x29], cl; ret 0x394c; 
0x000000000045dd24: sbb byte ptr [rax + 0x39], cl; ret 0x850f; 
0x0000000000419121: sbb byte ptr [rax + 0x39], cl; ret; 
0x000000000048dcfa: sbb byte ptr [rax - 0x75], cl; or byte ptr [rax - 0x77], cl; ret; 
0x00000000004857ff: sbb byte ptr [rax - 0x77], cl; ret; 
0x00000000004198e3: sbb byte ptr [rax - 0x7b], cl; ror byte ptr [rdi], 0x84; ret; 
0x000000000040a58a: sbb byte ptr [rax], al; add byte ptr [rbx - 0x7bf0fc06], al; ret; 
0x0000000000411847: sbb byte ptr [rbx + 0x5d], bl; ret; 
0x0000000000418307: sbb byte ptr [rbx - 0x2fd6efb9], cl; ret; 
0x00000000004197fe: sbb byte ptr [rcx + 1], cl; ret 0x8d48; 
0x000000000048ffef: sbb byte ptr [rcx + rdi + 0x6d], cl; js 0x9006c; ret 0x8b48; 
0x0000000000454348: sbb byte ptr [rcx - 0x77], al; ret; 
0x000000000040dc40: sbb byte ptr [rcx], al; add byte ptr [rax], al; ret; 
0x000000000041dbcd: sbb cl, byte ptr [rax + 0x29480614]; ror byte ptr [rax + 0x39], 1; ret; 
0x000000000043d8ed: sbb cl, byte ptr [rdi]; xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x000000000043d40d: sbb cl, byte ptr [rdi]; xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000043e5ed: sbb cl, byte ptr [rdi]; xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x000000000048e025: sbb dh, bl; ret; 
0x000000000048df19: sbb dword ptr [rax - 0x7d], ecx; ret 0x8001; 
0x00000000004885cb: sbb dword ptr [rax - 0x7d], ecx; ret; 
0x00000000004464f7: sbb eax, -1; ret; 
0x000000000048d072: sbb eax, 0x18c48348; ret; 
0x000000000045e734: sbb eax, 0x39480001; ret; 
0x000000000045dbb2: sbb eax, dword ptr [rax]; add byte ptr [rax - 0x7d], cl; ret 0x481e; 
0x0000000000407cba: sbb eax, dword ptr [rax]; add byte ptr [rbx - 0x7bf0fe02], al; ret 0x1b; 
0x000000000042bf37: sbb eax, eax; or eax, 1; ret; 
0x00000000004464f5: sbb eax, eax; sbb eax, -1; ret; 
0x0000000000448f03: sbb ebx, edx; add byte ptr es:[rax + 0x39], cl; ret; 
0x00000000004729c9: sbb ecx, dword ptr [rbp + 0x29]; ret 0x8948; 
0x0000000000450a7e: sbb ecx, dword ptr [rcx + 0x50895048]; push rsp; ret; 
0x0000000000403f1d: sbb ecx, dword ptr [rcx - 0x7d]; ret; 
0x000000000043fa6e: scasb al, byte ptr [rdi]; add eax, 0x83480000; ret 0xe910; 
0x000000000045afce: scasd eax, dword ptr [rdi]; ret 0x148; 
0x0000000000411566: scasd eax, dword ptr [rdi]; ret 0x2948; 
0x00000000004197f9: scasd eax, dword ptr [rdi]; ret 0x8948; 
0x00000000004483e3: scasd eax, dword ptr [rdi]; ret 0xf8e9; 
0x000000000040e449: scasd eax, dword ptr [rdi]; ret; 
0x000000000044bd0c: setae al; ret; 
0x000000000041878c: setne al; neg eax; ret; 
0x000000000044673f: shl byte ptr [rsi + 0x44], 0xf; out dx, eax; ret 0xf66; 
0x0000000000444ae3: shl byte ptr [rsi + 0xf], 0xd7; ror dword ptr [rcx], cl; ret 0xe074; 
0x0000000000440295: shl byte ptr [rsi + 0xf], 0xeb; ret 0xf66; 
0x0000000000473357: shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret 0xf66; 
0x0000000000473346: shl byte ptr [rsi + 0xf], 1; outsd dx, dword ptr [rsi]; ret; 
0x00000000004a78e8: shl dword ptr [rdi - 5], 1; ret; 
0x000000000044659b: shl dword ptr [rsi + 0xf], 0xda; ret; 
0x000000000042d77d: shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x2373; 
0x000000000042d766: shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x3a73; 
0x000000000042d74f: shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x5173; 
0x000000000042c20b: shl dword ptr [rsi + 0xf], 1; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000042b16c: shl dword ptr [rsi + 0xf], 1; xlatb; ret 0xc085; 
0x0000000000448f04: shl dword ptr [rsi], cl; add byte ptr [rax + 0x39], cl; ret; 
0x0000000000482d8c: shl ecx, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000482d17: shl ecx, cl; mov qword ptr [rdi - 8], r9; ret; 
0x0000000000482ce6: shl ecx, cl; mov qword ptr [rdi], r9; ret; 
0x0000000000482d8b: shl r9, cl; mov qword ptr [rdi - 0x10], r9; ret; 
0x0000000000482d16: shl r9, cl; mov qword ptr [rdi - 8], r9; ret; 
0x0000000000482ce5: shl r9, cl; mov qword ptr [rdi], r9; ret; 
0x00000000004235e3: shr al, 0x57; ret; 
0x0000000000425e9f: shr byte ptr [rcx], 0xc8; ret; 
0x0000000000457878: shr byte ptr [rcx], cl; ret; 
0x000000000048cb52: shr cl, 1; ret 0xfffe; 
0x000000000048c65f: shr cl, cl; ret; 
0x000000000047440b: shr eax, 2; ret; 
0x0000000000474913: shr eax, 2; vzeroupper; ret; 
0x0000000000482e9c: shr ecx, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x0000000000482e21: shr ecx, cl; mov qword ptr [rdi + 8], r9; ret; 
0x0000000000482df0: shr ecx, cl; mov qword ptr [rdi], r9; ret; 
0x0000000000482e9b: shr r9, cl; mov qword ptr [rdi + 0x10], r9; ret; 
0x0000000000482e20: shr r9, cl; mov qword ptr [rdi + 8], r9; ret; 
0x0000000000482def: shr r9, cl; mov qword ptr [rdi], r9; ret; 
0x000000000047440a: shr rax, 2; ret; 
0x0000000000474912: shr rax, 2; vzeroupper; ret; 
0x000000000049f0a9: sldt word ptr [rax]; ret; 
0x00000000004631be: stc; dec dword ptr [rax + 0x29]; ret; 
0x0000000000468975: stc; dec dword ptr [rax - 0x39]; ret 0xffa0; 
0x00000000004a7764: stc; jnp 0xa7720; ret; 
0x0000000000430028: stc; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004943f2: stc; push rax; ret; 
0x0000000000438944: stc; vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042bfb7: stc; xlatb; ret 0xff2d; 
0x000000000047630a: std; dec dword ptr [rax + 0x39]; ret; 
0x000000000044a20e: std; dec dword ptr [rax - 0x77]; ret; 
0x000000000048254b: std; inc dword ptr [rbp - 0x76b08a40]; ret; 
0x000000000042f84b: std; mov word ptr [rdi - 2], cx; ret; 
0x000000000044b21e: std; push rbx; ret; 
0x000000000042b879: std; xlatb; ret 0xc085; 
0x000000000042bdf3: std; xlatb; ret 0xe883; 
0x000000000042b881: std; xlatb; ret; 
0x000000000044902f: sti; dec dword ptr [rax - 0x77]; ret; 
0x000000000042fc28: sti; mov dword ptr [rdi - 4], ecx; ret; 
0x00000000004a78ea: sti; ret; 
0x0000000000447bcb: stosb byte ptr [rdi], al; mov rax, rdx; ret; 
0x000000000046863e: stosd dword ptr [rdi], eax; mov eax, 1; ret; 
0x000000000041ec93: stosd dword ptr [rdi], eax; pop rbx; ret; 
0x00000000004a8ecc: stosd dword ptr [rdi], eax; ret; 
0x000000000041ec92: stosq qword ptr [rdi], rax; pop rbx; ret; 
0x0000000000481cf6: sub al, 0x48; add esp, 0x38; ret; 
0x0000000000412854: sub al, byte ptr [eax]; add byte ptr [rdx + rax - 0xd], dh; ret; 
0x0000000000412855: sub al, byte ptr [rax]; add byte ptr [rdx + rax - 0xd], dh; ret; 
0x00000000004186a6: sub al, byte ptr [rax]; add dword ptr [rip + 0x2a3665], 1; ret; 
0x0000000000418615: sub al, byte ptr [rax]; ret; 
0x000000000042440a: sub al, byte ptr [rdx]; add bh, dh; ret 0; 
0x00000000004186a5: sub al, byte ptr ss:[rax]; add dword ptr [rip + 0x2a3665], 1; ret; 
0x0000000000477227: sub byte ptr [rax + 0x39], cl; ret 0x870f; 
0x0000000000477226: sub byte ptr [rax + 0x39], r9b; ret 0x870f; 
0x0000000000483883: sub byte ptr [rax + 1], cl; ret 0x1474; 
0x000000000046f9e4: sub byte ptr [rax - 0x77], cl; ret 0xc148; 
0x000000000048c15c: sub byte ptr [rax - 0x77], cl; ret; 
0x0000000000404a63: sub byte ptr [rax - 0x7d], cl; ret; 
0x0000000000477e7e: sub byte ptr [rbp + rcx*4 + 0x15], cl; pushfq; ret 2; 
0x000000000048f551: sub byte ptr [rbx + 0x22ce3005], cl; add byte ptr [rbp - 0xcfb8b40], al; ret; 
0x000000000048f550: sub byte ptr [rbx + 0x22ce3005], r9b; add byte ptr [rbp - 0xcfb8b40], al; ret; 
0x000000000048f441: sub byte ptr [rbx + 0x22cf4005], cl; add byte ptr [rbp - 0xcfb8b40], al; ret; 
0x000000000048f440: sub byte ptr [rbx + 0x22cf4005], r9b; add byte ptr [rbp - 0xcfb8b40], al; ret; 
0x0000000000488073: sub byte ptr [rbx - 0x26], dh; mov eax, 1; ret; 
0x0000000000488072: sub byte ptr [rbx - 0x26], sil; mov eax, 1; ret; 
0x000000000044bfac: sub byte ptr [rcx], al; ret; 
0x000000000042456a: sub byte ptr [rdx], al; add bh, dh; ret 0; 
0x0000000000468066: sub cl, bpl; ret 0xffe8; 
0x000000000040ebad: sub cl, byte ptr [rax - 0x77]; ror byte ptr [rax - 0x7d], 1; ret 0x4801; 
0x0000000000468067: sub cl, ch; ret 0xffe8; 
0x000000000045e134: sub dh, al; add byte ptr [rcx - 0x7d], cl; ret; 
0x0000000000485492: sub dh, byte ptr [rbx]; ret; 
0x0000000000477542: sub dword ptr [rax + 0xf000002], -0x7b; ret; 
0x000000000042442c: sub dword ptr [rax], eax; add dh, byte ptr [rax + rcx - 9]; ret 0; 
0x000000000041f78a: sub dword ptr [rax], eax; ret; 
0x0000000000412e68: sub dword ptr [rdx], 0x4f0f4800; ret 0x8948; 
0x0000000000422dba: sub eax, 0x10; ret; 
0x00000000004668e5: sub eax, 0x83000000; ret 0x8b01; 
0x0000000000469514: sub eax, 0x83000000; ret; 
0x000000000042bfdf: sub eax, 0xffff; jne 0x2bef0; ret; 
0x0000000000446974: sub eax, 1; ret; 
0x000000000040389d: sub eax, dword ptr [rax]; add byte ptr [rax - 0x77], cl; ret; 
0x00000000004004cc: sub eax, dword ptr [rax]; nop; ret; 
0x0000000000418fce: sub eax, dword ptr [rdi + 0x18]; ret; 
0x00000000004182e3: sub eax, dword ptr [rsi + 0x10]; ret; 
0x0000000000480eb4: sub eax, eax; ret; 
0x00000000004179b9: sub eax, ecx; lea eax, [r8 - 1]; ret; 
0x0000000000425bdc: sub eax, ecx; ret; 
0x0000000000440a89: sub eax, edi; ret; 
0x000000000047451e: sub eax, edi; shr rax, 2; ret; 
0x000000000041830b: sub eax, edx; ret; 
0x000000000042befc: sub eax, edx; vzeroupper; ret; 
0x0000000000446b3d: sub eax, esi; ret; 
0x0000000000480eb3: sub eax, r8d; ret; 
0x0000000000473aa4: sub ecx, dword ptr [rcx + rcx*4 - 0x40]; vzeroupper; ret; 
0x00000000004a9002: sub edi, esi; int 0x6b; ret; 
0x0000000000492431: sub esp, 8; add rsp, 8; ret; 
0x00000000004179b8: sub r8, rcx; lea eax, [r8 - 1]; ret; 
0x0000000000422db9: sub rax, 0x10; ret; 
0x0000000000446973: sub rax, 1; ret; 
0x0000000000418fcd: sub rax, qword ptr [rdi + 0x18]; ret; 
0x0000000000485222: sub rax, r8; ret; 
0x0000000000440a88: sub rax, rdi; ret; 
0x000000000047451d: sub rax, rdi; shr rax, 2; ret; 
0x0000000000446a43: sub rax, rdx; ret; 
0x0000000000440adf: sub rax, rdx; vzeroupper; ret; 
0x0000000000446b3c: sub rax, rsi; ret; 
0x0000000000492430: sub rsp, 8; add rsp, 8; ret; 
0x0000000000474dc5: syscall; ret; 
0x000000000048af03: test al, 0; add byte ptr [rax], al; ret; 
0x000000000044b97a: test al, 0x75; ret; 
0x00000000004a6eb7: test al, 0x97; xchg eax, esp; ret; 
0x0000000000458e51: test byte ptr [rax - 0x76b80000], ch; ret 0x2948; 
0x000000000046ab79: test byte ptr [rax - 0x7c000019], ah; ret; 
0x000000000044ef62: test byte ptr [rbp + rcx*4 + 0x3c], cl; ret; 
0x000000000046aa7c: test byte ptr [rbp - 0x7c000018], bl; ret; 
0x0000000000459394: test byte ptr [rbx + rdi*8 - 0x7cb70001], bh; rol byte ptr [rcx], 0x83; ret 0x4801; 
0x00000000004619f2: test byte ptr [rcx - 0x7a000007], al; ror byte ptr [rdi], 0x84; ret; 
0x000000000044b674: test byte ptr [rdi - 0x7d000000], bl; ret; 
0x0000000000423fe6: test byte ptr [rdi], 0x84; ret; 
0x000000000044a1bf: test byte ptr [rdi], 0x94; ret 0xc221; 
0x0000000000449cd6: test byte ptr [rdi], 0x94; ret 0xca21; 
0x0000000000469604: test byte ptr [rip - 0x7c000003], dl; ret; 
0x000000000045f034: test byte ptr [rip - 0x7c000011], al; ret; 
0x000000000047373d: test byte ptr [rsi + 0x48000000], bl; bsf eax, edx; ret; 
0x00000000004531b1: test byte ptr [rsi - 0x8fffffc], cl; ret 0; 
0x00000000004465ff: test cl, cl; jne 0x465f0; ret; 
0x00000000004466af: test cl, cl; jne 0x466a0; ret; 
0x0000000000472b5d: test dword ptr [rax], 0x83480000; ret 0xe901; 
0x00000000004499e9: test dword ptr [rbx + 0x48000000], ebp; add esp, 0x78; ret; 
0x000000000047566b: test dword ptr [rcx + 0x48000000], edi; add esp, 0x78; ret; 
0x000000000041cf62: test dword ptr [rcx + rcx*4 + 0x54], 0x93e80824; ret 0xffff; 
0x0000000000423863: test dword ptr [rcx], ebp; add bh, dh; ret 0; 
0x000000000048df84: test dword ptr [rdi + rdi*8 - 1], esi; dec dword ptr [rax - 0x7d]; ret; 
0x000000000041cefc: test dword ptr [rdi], eax; add eax, 0x39480000; ret 0xf275; 
0x0000000000473523: test dword ptr [rip - 0x76ffffff], edi; ret 0x8948; 
0x0000000000449656: test dword ptr [rsi + 0x48000000], ebp; add esp, 0x68; ret; 
0x000000000045f971: test dword ptr [rsi - 0x16000007], esi; ret; 
0x000000000040fc5d: test dword ptr [rsi - 0x77000000], esp; ret 0xe281; 
0x000000000042d298: test dword ptr [rsi], esp; add eax, 0xc0310000; ret; 
0x00000000004a8ba0: test eax, 0x7d4c8c5d; ret 0xd8f; 
0x0000000000432f16: test eax, 0x7f0f41f3; add byte ptr [rax - 0x7f], cl; ret 0x80; 
0x000000000048b902: test eax, 0x8002308; ret; 
0x000000000041025e: test eax, 0x8948002a; ret 0x8948; 
0x000000000044bbfb: test eax, eax; cmove eax, edx; ret; 
0x000000000047f227: test ecx, edx; and eax, dword ptr [rax]; ret; 
0x00000000004384da: vmovdqu xmmword ptr [r9 - 0x10], xmm1; ret; 
0x000000000044728c: vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1; ret; 
0x0000000000446c59: vmovdqu xmmword ptr [rsi - 0x10], xmm0; ret; 
0x0000000000447418: vmovdqu ymmword ptr [r11], ymm4; vzeroupper; ret; 
0x00000000004474bf: vmovdqu ymmword ptr [r11], ymm8; vzeroupper; ret; 
0x00000000004384c6: vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x00000000004384ad: vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x00000000004384a7: vmovdqu ymmword ptr [r9 - 0x40], ymm2; vmovdqu ymmword ptr [r9 - 0x20], ymm3; ret; 
0x00000000004471f5: vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1; vzeroupper; ret; 
0x0000000000447d7b: vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0; vzeroupper; ret; 
0x0000000000447363: vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3; vzeroupper; ret; 
0x0000000000447335: vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7; vzeroupper; ret; 
0x00000000004384c2: vmovdqu ymmword ptr [rdi], ymm0; vmovdqu ymmword ptr [r9 - 0x20], ymm1; ret; 
0x0000000000447d02: vmovdqu ymmword ptr [rdi], ymm0; vzeroupper; ret; 
0x0000000000446c4b: vmovdqu ymmword ptr [rdi], ymm2; vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x0000000000446c4f: vmovdqu ymmword ptr [rsi - 0x20], ymm2; ret; 
0x0000000000447998: vmovdqu64 zmmword ptr [r11], zmm8; vzeroupper; ret; 
0x000000000044762e: vmovdqu64 zmmword ptr [rdi + rdx - 0x40], zmm1; vzeroupper; ret; 
0x0000000000447f1e: vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm0; vzeroupper; ret; 
0x00000000004477f9: vmovdqu64 zmmword ptr [rdi + rdx - 0x80], zmm3; vzeroupper; ret; 
0x0000000000447e8d: vmovdqu64 zmmword ptr [rdi], zmm0; vzeroupper; ret; 
0x0000000000446c64: vmovq qword ptr [rdi], xmm0; vmovq qword ptr [rsi - 8], xmm0; ret; 
0x0000000000446c68: vmovq qword ptr [rsi - 8], xmm0; ret; 
0x000000000043847e: vmovups zmmword ptr [r9 - 0x40], zmm3; ret; 
0x0000000000438442: vmovups zmmword ptr [r9 - 0x40], zmm7; ret; 
0x0000000000438945: vmovups zmmword ptr [rdi - 0x200], zmm15; ret; 
0x000000000042b658: vzeroupper; ret; 
0x000000000042b830: vzeroupper; xor eax, eax; ret; 
0x000000000046753c: wait; ret 3; 
0x000000000043fa1c: xchg bh, bh; add eax, 0x83480000; ret 0x4910; 
0x000000000043f23c: xchg bh, bl; or eax, 0x83480000; ret 0x4910; 
0x000000000042affb: xchg byte ptr [rax + rax - 0x7cb80000], al; ret 0xeb10; 
0x000000000043e92f: xchg byte ptr [rax + rax], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000043d8ef: xchg byte ptr [rax + rdx - 0x7cb80000], bh; ret 0xe910; 
0x000000000042ab53: xchg byte ptr [rax - 0x7cb80000], ch; ret 0xeb10; 
0x000000000043e44f: xchg byte ptr [rbp + rax], bl; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000042a2e3: xchg byte ptr [rbp + rcx - 0x7cb80000], bl; ret 0xeb10; 
0x000000000043dc2f: xchg byte ptr [rbp + rcx], bh; add byte ptr [rax - 0x7d], cl; ret 0xe910; 
0x000000000043d40f: xchg byte ptr [rbp + rdx - 0x7cb80000], bl; ret 0xe910; 
0x000000000043e5ef: xchg byte ptr [rbx + rax - 0x7cb80000], bh; ret 0xe910; 
0x000000000042ad33: xchg byte ptr [rbx + rax], cl; add byte ptr [rax - 0x7d], cl; ret 0xeb10; 
0x000000000042a4c3: xchg byte ptr [rbx + rcx - 0x7cb80000], bh; ret 0xeb10; 
0x0000000000454203: xchg byte ptr [rdi], dl; or eax, 0xea810000; ret 0; 
0x000000000041ac65: xchg byte ptr [rsi - 0x9fffffd], dh; ret 0xf08; 
0x000000000043dbc5: xchg dh, ah; or eax, 0x83480000; ret 0x4910; 
0x000000000043e3e5: xchg dh, al; add eax, 0x83480000; ret 0x4910; 
0x000000000042a2b5: xchg dl, cl; or eax, 0x83480000; ret 0x4910; 
0x000000000046c780: xchg dword ptr [rax - 0x76ffffe3], edi; ret 0x349; 
0x0000000000402d23: xchg dword ptr [rax - 0x7d], ecx; ret; 
0x000000000044f0b4: xchg dword ptr [rbp + rcx*4 + 0x34], ecx; ret; 
0x0000000000462c1b: xchg dword ptr [rbp - 0x77000000], eax; ret 0x349; 
0x000000000046be32: xchg dword ptr [rbx - 0x76ffffdb], edi; ret 0x349; 
0x00000000004a686c: xchg dword ptr [rcx + 0x79], ecx; xchg eax, edx; ret 0xf869; 
0x000000000046ce2a: xchg dword ptr [rcx - 0x76ffffea], ecx; ret 0x349; 
0x000000000046da75: xchg dword ptr [rcx - 0x76fffff6], esp; ret 0x349; 
0x000000000046da4c: xchg dword ptr [rdi - 0x76fffff6], edx; ret 0x349; 
0x000000000046993a: xchg dword ptr [rdx + rbx], esp; add byte ptr [rax - 0x7d], cl; ret; 
0x0000000000478c50: xchg dword ptr [rip - 0x76fffffd], edx; ret 0xe8c0; 
0x000000000046b8e4: xchg dword ptr [rsi - 0x76ffffd5], edi; ret 0x349; 
0x0000000000461ac8: xchg dword ptr [rsi - 0x76ffffef], eax; ret 0x349; 
0x0000000000461fe0: xchg dword ptr [rsi - 0x76fffff5], edi; ret 0x349; 
0x000000000046e563: xchg dword ptr [rsi - 0x77000000], edx; ret 0x349; 
0x00000000004a6a0b: xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp; ret; 
0x000000000048aba0: xchg eax, ebp; ret 0x145; 
0x0000000000477c8a: xchg eax, ebp; ret 0x2041; 
0x0000000000477d4a: xchg eax, ebp; ret 0x2044; 
0x0000000000449dcc: xchg eax, ebp; ret 0x3948; 
0x000000000041dcbb: xchg eax, ebp; ret 0x8348; 
0x0000000000479910: xchg eax, ebp; ret 0xc283; 
0x0000000000420e7d: xchg eax, ebp; ret 0xd020; 
0x000000000040df25: xchg eax, ebp; ret 0xd021; 
0x00000000004641ca: xchg eax, ebp; ret 0xd120; 
0x000000000040ff82: xchg eax, ebp; ret 0xdaf7; 
0x000000000044d3a1: xchg eax, ebp; ret 0xe1eb; 
0x000000000048c71a: xchg eax, ebp; ret 0xf45; 
0x000000000044fcdf: xchg eax, ebp; ret; 
0x000000000041878d: xchg eax, ebp; sal bh, 0xd8; ret; 
0x000000000045b1a8: xchg eax, ebx; ret 0x3948; 
0x0000000000411fac: xchg eax, ebx; ret 0x3949; 
0x00000000004205d0: xchg eax, ebx; ret 0x3d83; 
0x0000000000471245: xchg eax, ebx; ret 0x840; 
0x000000000045bc8d: xchg eax, ebx; ret 0x854d; 
0x000000000041cf69: xchg eax, ebx; ret 0xffff; 
0x00000000004613fb: xchg eax, ecx; ret 0xffff; 
0x000000000043d0ff: xchg eax, ecx; sub eax, edx; ret; 
0x000000000041edfb: xchg eax, edi; ret 0x394c; 
0x000000000040058e: xchg eax, edi; ret 0xda80; 
0x000000000041f2e1: xchg eax, edi; ret 0xfae9; 
0x000000000041f8c9: xchg eax, edi; ret 0xfbe9; 
0x00000000004a6eb8: xchg eax, edi; xchg eax, esp; ret; 
0x0000000000405c58: xchg eax, edx; ret 0x8548; 
0x0000000000483055: xchg eax, edx; ret 0x8949; 
0x00000000004a686f: xchg eax, edx; ret 0xf869; 
0x0000000000446b2d: xchg eax, edx; ror byte ptr [rdi], 0x94; ret 0xc085; 
0x000000000042b05c: xchg eax, edx; sub eax, edx; ret; 
0x0000000000448d81: xchg eax, esi; ret 0xc085; 
0x00000000004a910c: xchg eax, esi; ret 0xcd11; 
0x0000000000448ddf: xchg eax, esi; ret 0xd284; 
0x0000000000450ddb: xchg eax, esp; ret 0x1f0f; 
0x0000000000449e9b: xchg eax, esp; ret 0x2044; 
0x0000000000480fbc: xchg eax, esp; ret 0x3d; 
0x000000000041c92e: xchg eax, esp; ret 0x3de9; 
0x000000000046d957: xchg eax, esp; ret 0x7f3c; 
0x0000000000484c21: xchg eax, esp; ret 0x950f; 
0x0000000000402c74: xchg eax, esp; ret 0xb60f; 
0x0000000000446b30: xchg eax, esp; ret 0xc085; 
0x000000000044a1c1: xchg eax, esp; ret 0xc221; 
0x00000000004767e5: xchg eax, esp; ret 0xc283; 
0x0000000000449cd8: xchg eax, esp; ret 0xca21; 
0x0000000000401253: xchg eax, esp; ret 0xd284; 
0x000000000044f806: xchg eax, esp; ret 0xd5e9; 
0x00000000004105ed: xchg eax, esp; ret 0xdaf7; 
0x000000000048c6bb: xchg eax, esp; ret 0xf45; 
0x0000000000466622: xchg eax, esp; ret; 
0x000000000048254a: xchg ebp, edi; inc dword ptr [rbp - 0x76b08a40]; ret; 
0x00000000004a8d86: xlatb; ret 0x4e27; 
0x00000000004733a7: xlatb; ret 0x94c; 
0x000000000042b16f: xlatb; ret 0xc085; 
0x0000000000425c90: xlatb; ret 0xc148; 
0x000000000042bdf4: xlatb; ret 0xe883; 
0x0000000000440944: xlatb; ret 0xf66; 
0x000000000042bfb8: xlatb; ret 0xff2d; 
0x0000000000467531: xlatb; ret 3; 
0x000000000042b184: xlatb; ret; 
0x0000000000444ae6: xlatb; ror dword ptr [rcx], cl; ret 0xe074; 
0x0000000000425b76: xlatb; sal bh, 1; ret 0x8000; 
0x0000000000425a36: xlatb; sal bh, 1; ret 0xc000; 
0x00000000004258f6: xlatb; sal bh, 1; ret 0xe000; 
0x00000000004257b6: xlatb; sal bh, 1; ret 0xf000; 
0x0000000000425676: xlatb; sal bh, 1; ret 0xf800; 
0x0000000000425536: xlatb; sal bh, 1; ret 0xfc00; 
0x00000000004253f6: xlatb; sal bh, 1; ret 0xfe00; 
0x00000000004252b6: xlatb; sal bh, 1; ret 0xff00; 
0x0000000000425176: xlatb; sal bh, 1; ret 0xff80; 
0x0000000000425036: xlatb; sal bh, 1; ret 0xffc0; 
0x0000000000424ef6: xlatb; sal bh, 1; ret 0xffe0; 
0x0000000000424db6: xlatb; sal bh, 1; ret 0xfff0; 
0x0000000000424c76: xlatb; sal bh, 1; ret 0xfff8; 
0x0000000000424b36: xlatb; sal bh, 1; ret 0xfffc; 
0x00000000004249f6: xlatb; sal bh, 1; ret 0xfffe; 
0x00000000004a7a4a: xor al, 0xd8; ret; 
0x0000000000452bde: xor al, 0xf6; ret; 
0x0000000000476309: xor al, 0xfd; dec dword ptr [rax + 0x39]; ret; 
0x000000000042b28d: xor byte ptr [r14 + 0xf], r12b; xlatb; ret; 
0x0000000000411412: xor byte ptr [r8 + 1], r9b; ret 0x8b49; 
0x000000000045b908: xor byte ptr [rax + 0x39], cl; ret 0x8d48; 
0x0000000000411413: xor byte ptr [rax + 1], cl; ret 0x8b49; 
0x0000000000440caf: xor byte ptr [rax - 0x77], cl; add cl, byte ptr [rax - 0x7d]; ret 0x4808; 
0x000000000048ab08: xor byte ptr [rax - 0x77], cl; ret 0x2148; 
0x0000000000471982: xor byte ptr [rax - 0x7b], cl; push qword ptr [rbp + rax - 0xa]; ret 0x7408; 
0x000000000044d16f: xor byte ptr [rax - 0x7d], cl; ret 0x4801; 
0x0000000000402f58: xor byte ptr [rax - 0x7d], cl; ret 0xe901; 
0x000000000048e06e: xor byte ptr [rbp + 0x27], dh; mov rax, qword ptr [rsi + 0x10]; ret; 
0x000000000048aed0: xor byte ptr [rbp + 0x35], dh; mov rax, qword ptr [rsi + 0xb0]; ret; 
0x00000000004470e5: xor byte ptr [rbp + 0xf], al; adc dword ptr [rbx], eax; ret; 
0x0000000000466829: xor byte ptr [rbx + 0x291c2454], cl; ret 0xe683; 
0x000000000046d88b: xor byte ptr [rbx - 0x78f0f608], al; ret; 
0x000000000048a925: xor byte ptr [rcx + 0x21], cl; ror byte ptr [rax + 0x21], cl; ret 0xc148; 
0x0000000000478563: xor byte ptr [rcx + 0x29], cl; ret; 
0x00000000004b0527: xor byte ptr [rsi + 0x380e4106], al; add dword ptr [rdi], 3; ret 0xa01; 
0x000000000042c28f: xor byte ptr [rsi + 0xf], ah; cmp byte ptr [rdi], dl; ret 0x830f; 
0x000000000047330c: xor byte ptr [rsi + 0xf], ah; outsd dx, dword ptr [rsi]; ret; 
0x000000000042b28e: xor byte ptr [rsi + 0xf], ah; xlatb; ret; 
0x000000000041219d: xor cl, byte ptr [rax - 0x77]; ret 0x2948; 
0x000000000047dc63: xor cl, byte ptr [rax - 0x7d]; ret 0x4810; 
0x000000000045b477: xor cl, byte ptr [rax - 0x7d]; ret 0x4901; 
0x0000000000405c80: xor cl, ch; ret; 
0x000000000045a2c9: xor dh, dh; ret 0x4002; 
0x000000000045d47d: xor dl, bh; dec dword ptr [rax + 0x29]; ret; 
0x0000000000480130: xor dl, dh; ret; 
0x000000000045d47c: xor dl, dil; dec dword ptr [rax + 0x29]; ret; 
0x0000000000465dfd: xor dword ptr [rax - 0x77], ecx; ror dword ptr [rax - 0x77], 1; ret 0xe7e9; 
0x000000000044c13f: xor dword ptr [rax - 0x7d], ecx; ret 0xf01; 
0x000000000041be49: xor dword ptr [rbx - 0x76b7f020], eax; ret 0x8948; 
0x0000000000468973: xor dword ptr [rbx - 7], edi; dec dword ptr [rax - 0x39]; ret 0xffa0; 
0x000000000046570a: xor eax, 0x89ffffe6; ret; 
0x000000000045c9b9: xor eax, eax; add rsp, 8; ret; 
0x0000000000475cd8: xor eax, eax; leave; ret; 
0x0000000000412dc2: xor eax, eax; pop rbx; ret; 
0x000000000040ec2d: xor eax, eax; ret; 
0x0000000000425e9e: xor eax, eax; sub eax, ecx; ret; 
0x000000000042b77c: xor eax, eax; vzeroupper; ret; 
0x0000000000458c28: xor ebp, ecx; ret 0xfffd; 
0x000000000044c11c: xor edi, dword ptr [rax]; ret 0x2f75; 
0x0000000000444b00: xor rax, rax; ret; 

4062 gadgets found
